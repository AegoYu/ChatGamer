[{"title":"  以下程序运行后的输出结果是（）。        \n#define  S(x) 4*x*x+1\nmain()\n{  \nint i=6,j=8;\nprintf(\"%d\\n\",S(i+j));\n}","choices":["\n21\n","\n41\n","\n61\n","\n81\n"],"correct_choice":"\n81\n"},{"title":"对使用关键字new所开辟的动态存储空间，释放时必须使用（        ）","choices":["\nfree\n","\ncreate\n","\ndelete\n","\nrealse\n"],"correct_choice":"\ndelete\n"},{"title":"程序中主函数的名字为（    ）。","choices":["\nmain\n","\nMAIN\n","\nMain\n","\n任意标识符\n"],"correct_choice":"\nmain\n"},{"title":"若有以下变量定义： \n int  b=2; \n int  a=5; \n 则表达式\"a/b\"的值为_______。","choices":["\n2.5\n","\n2\n","\n3\n","\n5\n"],"correct_choice":"\n2\n"},{"title":"  下列说法不正确的是（）。 ","choices":["\n主函数 main 中定义的变量在整个文件或程序中有效\n","\n不同函数中,可以使用相同名字的变量\n","\n形式参数是局部变量\n","\n在一个函数内部,可以在复合语句中定义变量,这些变量只在复合语句中有效\n"],"correct_choice":"\n主函数 main 中定义的变量在整个文件或程序中有效\n"},{"title":"  在c语言程序中，当调用函数时，正确的是（ ）？  ","choices":["\n全局变量开始占用存储单元\n","\n形参不需要分配存储单元\n","\n内部变量开始占用存储单元\n","\n外部变量开始占用存储单元\n"],"correct_choice":"\n内部变量开始占用存储单元\n"},{"title":"假定有语句为“int a[4][5]={{1,3,5},{2,8}};”，则a[1][1]的值为（   ）。","choices":["\n3\n","\n5\n","\n8\n","\n10\n"],"correct_choice":"\n8\n"},{"title":"\n  以下程序的输出结果为（ ）\n  \n\n\n  int i;\n\n\n  void prt( )\n\n\n  { for(i=5;i<8;i++)    printf(\"%c\",'*');\n\n\n   printf(\"\\t\");\n\n\n  }\n\n\n  main( )\n\n\n  {  for(i=5;i<=8;i++)  prt( );\n\n\n  } \n","choices":["\n***\n","\n***    ***    ***    ***\n","\n***     ***\n","\n*    *    *\n"],"correct_choice":"\n***\n"},{"title":"  有以下程序   main()\n{\n  \nint  a,b,d=25;\n  \na=d/10%9;\n  \nb=a&&(-1);\n  \nprintf(\"%d,%d\\n\",a,b);\n}   程序运行后的输出结果是(    )   。   ","choices":["\n6,1\n","\n2,1\n","\n6,0\n","\n2,0\n"],"correct_choice":"\n2,1\n"},{"title":"\n  0.设有数组定义: char array []=\"China\";则数组array所占的存储空间为__________\n\n\n  \n","choices":["\n4个字节\n","\n5个字节\n","\n6个字节\n","\n7个字节\n"],"correct_choice":"\n6个字节\n"},{"title":"  下列字符序列中，不可用作 C 语言标识符的是（）。  ","choices":["\nb70\n","\n#ab\n","\nsymbol\n","\na_1\n"],"correct_choice":"\n#ab\n"},{"title":"  对以下说明语句的正确理解是（） \n  int a[10]={6, 7, 8, 9, 10}; ","choices":["\n因为数组与初值的个数不相同，所以此语句不正确。\n","\n将 5 个初值依次赋给 a[6] 至 a[10]\n","\n将 5 个初值依次赋给 a[5] 至 a[9]\n","\n将 5 个初值依次赋给 a[0] 至 a[4]\n"],"correct_choice":"\n将 5 个初值依次赋给 a[0] 至 a[4]\n"},{"title":"函数原型语句正确的是（    ）。","choices":["\nint Function(void a);\n","\nvoid Function (int);\n","\nint Function(a);\n","\nvoid int(double a);\n"],"correct_choice":"\nvoid Function (int);\n"},{"title":"  以下程序的输出结果是（）？   main()\n { char\n*p=\"abcdefgh\",*r;\nlong *q;\nq=(long*)p;\nq++;\nr=(char*)q;\n printf(\"%s\\n\",r);\n}","choices":["\nabcd\n","\nbcde\n","\ncdef\n","\nefgh\n"],"correct_choice":"\nefgh\n"},{"title":"若需要把一个类外定义的成员函数指明为内联函数，则必须把关键字（   ）放在函数原型或函数头的前面。","choices":["\nin\n","\ninline\n","\ninLine\n","\nInLiner\n"],"correct_choice":"\ninline\n"},{"title":"  下列一段C++代码的输出是?\n\n#include \"stdio.h\"\nclass Base\n {\n public:\n     int Bar(char x)\n     {\n         return (int)(x);\n     }\n     virtual int Bar(int x)\n     {\n         return (2 * x);\n     }\n };\n class Derived : public Base\n {\n public:\n     int Bar(char x)\n     {\n         return (int)(-x);\n     }\n     int Bar(int x)\n     {\n         return (x / 2);\n     }\n };\n int main(void)\n {\n     Derived Obj;\n     Base *pObj = &Obj;\n     printf(\"%d,\", pObj->Bar((char)(100)));\n     printf(\"%d,\", pObj->Bar(100));\n }\n","choices":["\n100，-100\n","\n100，50\n","\n200，-100\n","\n200，50\n"],"correct_choice":"\n100，50\n"},{"title":"关于函数的描述正确的是___。","choices":["\n虚函数是一个static型的函数\n","\n派生类的虚函数与基类的虚函数具有不同的参数个数和类型\n","\n虚函数是一个非成员函数\n","\n基类中说明了虚函数后，派生类中起对应的函数可以不必说明为虚函数​\n"],"correct_choice":"\n基类中说明了虚函数后，派生类中起对应的函数可以不必说明为虚函数​\n"},{"title":"当一个类对象的生命周期结束后，关于调用析构函数的描述正确的是:（）","choices":["\n如果派生类没有定义析构函数，则只调用基类的析构函数\n","\n如果基类没有定义析构函数，则只调用派生类的析构函数\n","\n先调用派生类的析构函数，后调用基类的析构函数\n","\n先调用基类的析构函数，后调用派生类的析构函数\n"],"correct_choice":"\n先调用派生类的析构函数，后调用基类的析构函数\n"},{"title":"  有如下模板定义： \ntemplate <class T>\nT fun(T x,T y){\n    return x*x+y*y;\n}\n\n  在下列对fun的调用中，错误的是（）","choices":["\nfun(1, 2)\n","\nfun(1.0, 2)\n","\nfun(2.0, 1.0)\n","\nfun<float>(1, 2.0)\n"],"correct_choice":"\nfun(1.0, 2)\n"},{"title":"虚函数可不可以重载为内联？","choices":["\n可以\n","\n不可以\n","\n语法错误\n"],"correct_choice":"\n不可以\n"},{"title":"  编译运行如下程序会出现什么结果 \n\n\t#include <iostream>\nusing namespace std;\n\nclass A\n{\n    A()\n    {\n        printf(\"A()\");\n    }\npublic:\n    static A &get()\n    {\n        static A a;\n        return a;\n    }\n};\nint main()\n{\n    A::get();\n    return 0;\n}\n\n","choices":["\n输出A()\n","\n编译错误\n","\n链接错误\n","\n以上都不对\n"],"correct_choice":"\n输出A()\n"},{"title":"  有如下程序段： \n#include <iostream>\n\nvoid GetMemeory(char *p)\n{\n    p = (char *)malloc(100);\n}\nvoid Test()\n{\n    char *str = NULL;\n    GetMemeory(str);\n    strcpy(str, \"Thunder\");\n    strcat(str + 2, \"Downloader\");\n    printf(str);\n}\n\n  请问运行Test函数结果是： ","choices":["\nThunder Downloader\n","\nunder Downloader\n","\nThunderownloader\n","\n程序崩溃\n"],"correct_choice":"\n程序崩溃\n"},{"title":"void Func(char str_arg[100])\n{\n       printf(\"%d\\n\",sizeof(str_arg));\n}\nint main(void)\n{\n     char str[]=\"Hello\";\n     printf(\"%d\\n\",sizeof(str));\n    printf(\"%d\\n\",strlen(str));\n    char*p=str;\n    printf(\"%d\\n\",sizeof(p));\n    Func(str);\n}\n  32位系统下下面程序的输出结果为多少？","choices":["\n5 5 4 4\n","\n6 5 4 4\n","\n6 5 6 4\n","\n5 5 5 100\n"],"correct_choice":"\n6 5 4 4\n"},{"title":"要使指针变量p指向2维数组A的第1个元素，正确的赋值表达式是（）。","choices":["\np=A或p=A[0]\n","\np=A[0]或p=A[0][0]\n","\np=A[0]或p=&A[0][0]\n","\np=A或p=&A[0][0]\n"],"correct_choice":"\np=A[0]或p=&A[0][0]\n"},{"title":"给定声明 const char * const * pp; 下列操作或说明正确的是?","choices":["\npp++\n","\n(*pp)++\n","\n(**pp) = \\\\c\\\\;\n","\n以上都不对\n"],"correct_choice":"\npp++\n"},{"title":"设x、y、t均为int型变量，则执行语句：t=3; x=y=2; t=x++||++y; 后，变量t和y的值分别为____。","choices":["\nt=1 y=2\n","\nt=1 y=3\n","\nt=2 y=2\n","\nt=2 y=3\n","\nt=3 y=2\n","\nt=3 y=3\n"],"correct_choice":"\nt=1 y=2\n"},{"title":"  针对以下代码， \nconst char str1[]=”abc”; \nconst char str2[]=”abc”;\nconst char *p1 = “abc”;\nconst char *p2 = “abc”; \n 判断下列说法哪个是正确的(注意是地址)：______。","choices":["\nstr1和str2地址不同，P1和P2地址相同。\n","\nstr1和str2地址相同，P1和P2地址相同。\n","\nstr1和str2地址不同，P1和P2地址不同。\n","\nstr1和str2地址相同，P1和P2地址不同。\n","\n4个地址都相同\n"],"correct_choice":"\nstr1和str2地址不同，P1和P2地址相同。\n"},{"title":"  有以下程序 \n#include <stdio. h>\nint fun( intA )\n{\n    int b = 0;\n    static int c = 3;\n    a = ( c + +,b + + );\n    return ( a );\n}\nmain( )\n{\n    int a = 2,i,k;\n    for( i = 0;i<2;i + + )\n        k = fun( a + + );\n    printf(\"%d\\n\",k );\n}\n  程序的输出结果是？ ","choices":["\n4\n","\n0\n","\n1\n","\n2\n"],"correct_choice":"\n0\n"},{"title":"  有如下程序段： \n\nclass A\n{\n    int _a;\npublic:\n    A(int a): _a(a)\n    {\n    }\n    friend int f1(A &);\n    friend int f2(const A &);\n    friend int f3(A);\n    friend int f4(const A);\n};\n\n\n  以下调用哪个是错误的： ","choices":["\nf1(0)\n","\nf2(0)\n","\nf3(0)\n","\nf4(0)\n"],"correct_choice":"\nf1(0)\n"},{"title":"C++中，能作为函数重载判断依据的是？","choices":["\n返回类型\n","\nconst\n","\n参数个数\n","\n参数类型\n"],"correct_choice":"\nconst\n\n参数个数\n\n参数类型\n"},{"title":"假定AB为一个类，则执行 “AB x(a,5);”语句时将自动调用该类的(    )。","choices":["\n带参构造函数\n","\n无参构造函数\n","\n拷贝构造函数\n","\n重载赋值运算\n"],"correct_choice":"\n带参构造函数\n"},{"title":"\n   在一个函数中，要求通过函数来实现一种不太复杂的功能，并且要求加快执行速度，选用（ ）。\n","choices":["\n内联函数\n","\n重载函数\n","\n递归调用\n","\n嵌套调用\n"],"correct_choice":"\n内联函数\n"},{"title":"\n   ( )不是构造函数的特征\n","choices":["\n构造函数的函数名与类名相同\n","\n构造函数可以重载\n","\n构造函数可以设置缺省参数\n","\n构造函数必须指定类型说明\n"],"correct_choice":"\n构造函数必须指定类型说明\n"},{"title":"静态变量在整个程序的运行过程中始终都是存在着的。","choices":["\n是\n","\n否\n"],"correct_choice":"\n是\n"},{"title":"\n  有如下定义：\n\n\n  struct date\n\n\n  {\n  int y\n  y\n  ，m\n  m\n  ，\n  dd\n  ；\n\n\n  }；\n\n\n  struct worklist\n\n\n  {\n  char name[20]；\n\n\n  char sex；\n\n\n  struct date birthday；\n\n\n  }person；\n\n\n  对结构体变量\n  person\n  的出生年月进行赋值时，下面正确的赋值语句是\n  ________\n  __\n","choices":["\nyy＝1958\n","\nbirthday.yy＝1958\n","\nperson.yy＝1958\n","\nperson.birthday.yy＝1958\n"],"correct_choice":"\nperson.birthday.yy＝1958\n"},{"title":"  int a=5,b=-5;printf(“%d,%d”),a%(-4),b%(-4));输出（）？  ","choices":["\n1,-1\n","\n1,1\n","\n-1,1\n","\n-1,-1\n"],"correct_choice":"\n1,-1\n"},{"title":"  若已定义 x 为 int 类型变量,下列语句中说明指针变量 p 的正确语句是（）。  ","choices":["\nint p=&x;\n","\nint *p=x;\n","\nint *p=&x;\n","\n*p=*x;\n"],"correct_choice":"\nint *p=&x;\n"},{"title":"  序     main()     {char s[]=\"ABCD\",*p;      for(p=s+1;p<s+4;p++)printf(\"%s\\n\",p);     }     程序运行后的输出结果是(   )。  ","choices":["\nABCD\n BCD\n CD\n D\n","\nA\nB\nC\nD\n","\nB\nC\nD\n","\nBCD\nCD\nD\n"],"correct_choice":"\nBCD\nCD\nD\n"},{"title":"\n  以下叙述中正确的是（）\n","choices":["\n字符变量在定义时不能赋初值\n","\n字符常量可以参与任何整数运算\n","\n同一英文字母的大写和小写形式代表的是同一个字符常量\n","\n转义字符用@符号开头\n"],"correct_choice":"\n字符常量可以参与任何整数运算\n"},{"title":"  具有相同类型的指针变量 p 与数组 a,不能进行的操作是（）。  ","choices":["\np=a;\n","\n*p=a[0];\n","\np=&a[0];\n","\np=&a;\n"],"correct_choice":"\np=&a;\n"},{"title":"\n  若有int i=3,*p;p=&i;输出结果为3的是\n  cout<<*p？\n\n\n  \n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"下面有关final, finally, finalize的区别描述错误的是？","choices":["\n如果一个类被声明为final，意味着它不能再派生出新的子类，不能作为父类被继承\n","\n如果一个方法被声明为final，可以被覆盖\n","\nfinally在异常处理时提供 finally 块来执行任何清除操作。\n","\nJava使用 finalize() 方法在垃圾收集器象从内存中清除出去之前做必要的清理工作\n"],"correct_choice":"\n如果一个方法被声明为final，可以被覆盖\n"},{"title":"以下代码输出的是__?\nint foo(int x,int y)\n{\n    if(x<=0||y<=0)  return 1;\n    return 3*foo(x-1,y/2);\n}\ncout<<foo(3,5)<<endl;\n","choices":["\n81\n","\n27\n","\n9\n","\n3\n"],"correct_choice":"\n27\n"},{"title":"下列程序段的输出结果是：（\n）\n\n   void complicatedexpression_r(){ int x=20, y=30; boolean\n  b;\n  b=x>50&&y>60||x>50&&y<-60||x<-50&&y>60||x<-50&&y<-60;\n  System.out.println(b); }\n","choices":["\ntrue\n","\nfalse\n","\n1\n","\n0\n"],"correct_choice":"\nfalse\n"},{"title":"  内存空间被分成不同区域,其中用函数 \n\n     void* malloc(unsigned int size);  \n\n  申请的内存在() ","choices":["\n程序区\n","\n静态存储区\n","\n动态存储区\n","\nROM区\n"],"correct_choice":"\n动态存储区\n"},{"title":"假设寄存器为8位，用补码形式存储机器数，包括一位符号位，那么十进制数-25在寄存器表示为：","choices":["\n67H\n","\n99H\n","\nE6H\n","\nE7H\n"],"correct_choice":"\nE7H\n"},{"title":"malloc函数进行内存分配是在什么阶段?","choices":["\n编译阶段\n","\n链接阶段\n","\n装载阶段\n","\n执行阶段\n"],"correct_choice":"\n执行阶段\n"},{"title":"以下哪个选项可以正确描述sizeof(double)？","choices":["\n一个整型表达式\n","\n一个双精度型表达式\n","\n一个不合法的表达式\n","\n一种函数调用\n"],"correct_choice":"\n一个整型表达式\n"},{"title":"  若有以下程序段： \n  …… \n  int a[]={4,0,2,3,1},i,j,t; \n  for(i=1;i<5;i++) \n  { \n  t=a[i]; \n  j=i-1; \n  while(j>=0&&t>a[j]) \n  { \n  a[j+1]=a[j]; \n  --j; \n  } \n  a[j+1]=t; \n  } \n  …… \n  则该程序段的功能是：       ","choices":["\n对数组a进行插入排序（升序）\n","\n对数组a进行插入排序（降序）\n","\n对数组a进行选择排序（升序）\n","\n对数组a进行选择排序（降序）\n"],"correct_choice":"\n对数组a进行插入排序（降序）\n"},{"title":"  下列程序执行后输出的结果是  #include<iostream>\nusing namespace std;\n\nint f(int a)\n{\n    int b = 0;\n    static int c = 3;\n    a = c++,b++;\n    return (a);\n}\nint main()\n{\n    int a = 2, i, k;\n    for (i = 0; i < 2; i++)\n        k = f(a++);\n    printf(\" % d\\n\", k);\n    \n    return 0;\n}\n ","choices":["\n3\n","\n0\n","\n5\n","\n4\n"],"correct_choice":"\n4\n"},{"title":"下列关于模板的说法正确的是","choices":["\n模板的实参在任何时候都可以省略\n","\n类模板与模板类所指的是同一概念\n","\n类模板的参数必须是虚拟类型的\n","\n类模板中的成员函数不全是模板函数\n"],"correct_choice":"\n类模板中的成员函数不全是模板函数\n"},{"title":"main()\n{\n\tchar*a[]={\"work\",\"at\",\"alibaba\"};\n\tchar**pa=a;\n\tpa++;\n\tprintf(\"%s\",*pa);\n}\n  下列程序的执行结果是() ","choices":["\nat\n","\natalibaba\n","\nork\n","\norkatalibaba\n","\n编译错误\n","\n运行溢出\n"],"correct_choice":"\nat\n"},{"title":"  以下代码有什么问题？ \nstruct Test\n {\n     Test( int ) {}\n     Test() {}\n     void fun() {}\n };\n void main( void )\n {\n     Test a(1);\n     a.fun();\n     Test b();\n     b.fun();\n }\n","choices":["\nb.fun（）会出错\n","\nTest结构的定义中应该加上public修饰符，这样才能main函数中调用改类的方法\n","\nTest(int){} 应该改成Test(int a){}\n","\n以上说法都不正确\n"],"correct_choice":"\nb.fun（）会出错\n"},{"title":"int a[3][4]，下面哪个不能表示 a[1][1]?","choices":["\n*(&a[0][0]+5)\n","\n*(*(a+1)+1)\n","\n*(&a[1]+1)\n","\n*(a[1]+1)\n"],"correct_choice":"\n*(&a[1]+1)\n"},{"title":"  以下代码输出什么? \nint a =1,b =32 ;\nprintf(\"%d,%d\",a<<b,1<<32);","choices":["\n1,1\n","\n1,0\n","\n0,0\n","\n取决于编译器\n"],"correct_choice":"\n取决于编译器\n"},{"title":"引用与指针有什么区别？","choices":["\n指针是一个实体，而引用仅是个别名\n","\n指针没有 const，引用有 const；\n","\n引用不能为空，指针可以为空；\n","\n“sizeof 引用”得到的是所指向的变量(对象)的大小，而“sizeof 指针”得到的是指针本身(所指向的变量或对象的地址)的大小；\n","\n从内存分配上看：程序为引用变量分配内存区域，而指针不需要分配内存区域\n","\n指针和引用的自增(++)运算，意义一样\n"],"correct_choice":"\n指针是一个实体，而引用仅是个别名\n\n引用不能为空，指针可以为空；\n\n“sizeof 引用”得到的是所指向的变量(对象)的大小，而“sizeof 指针”得到的是指针本身(所指向的变量或对象的地址)的大小；\n"},{"title":"下面模板声明中，哪些是非法的（）","choices":["\ntemplate<class Type>class C1{};\n","\ntemplate<class T, U, class V>class C2{};\n","\ntemplate<class C1, typename C2>class C3{};\n","\ntemplate<typename myT,  class myT>class C4{};\n"],"correct_choice":"\ntemplate<class T, U, class V>class C2{};\n\ntemplate<typename myT,  class myT>class C4{};\n"},{"title":"下面这个程序执行后会有什么错误或者效果:\n#define MAX 255\nint main()\n{\n     unsigned char A[MAX], i;\n     for (i = 0; i <= MAX; i++)\n         A[i] = i;\n}\n","choices":["\n数组越界\n","\n死循环\n","\n栈溢出\n","\n内存泄露\n"],"correct_choice":"\n数组越界\n\n死循环\n"},{"title":"The Orchid Pavilion(兰亭集序) is well known as the top of “行书”in history of\nChinese literature. The most fascinating sentence is \"Well I know\nit is a lie to say that life and death is the same thing, and that\nlongevity and early death make no difference\nAlas!\"(固知一死生为虚诞，齐彭殇为妄作).By counting the characters of the whole\ncontent (in Chinese version),the result should be 391(including\npunctuation). For these characters written to a text file,please select\nthe possible file size without any data corrupt.","choices":["\n782 bytes in UTF-16 encoding\n","\n784 bytes in UTF-16 encoding\n","\n1173 bytes in UTF-8 encoding\n","\n1176 bytes in UTF-8 encoding\n","\nNone of above\n"],"correct_choice":"\n784 bytes in UTF-16 encoding\n\n1176 bytes in UTF-8 encoding\n"},{"title":"  执行下列语句后的输出为（）。    int j=-1;    if(j<=1) printf(\"****\\n\");    else printf(\"%%%%\\n\");     ","choices":["\n****\n","\n%%%%\n","\n%%%%c\n","\n有错,执行不正确\n"],"correct_choice":"\n****\n"},{"title":"派生类的构造函数的初始化列表中，不能包含(       )。","choices":["\n基类的构造函数\n","\n派生类中子对象的初始化\n","\n基类的子对象初始化\n","\n派生类中一般数据成员的初始化\n"],"correct_choice":"\n基类的子对象初始化\n"},{"title":"char 类型的长度为 ________ 个字节","choices":["\n1\n","\n2\n","\n3\n","\n4\n"],"correct_choice":"\n1\n"},{"title":"  有如下程序   #include <stdio.h>\nvoid main()\n{\n char ch[80]=\"123abcdEFG*&\";\n int j;\n puts(ch);\n for(j=0;ch[j]!='\\0';j++)\n if(ch[j]>='A'&&ch[j]<='Z')\n ch[j]=ch[j]+'e'-'E';\n puts(ch); \n}   该程序的功能是（ ）。  ","choices":["\n测字符数组ch的长度\n","\n将数字字符串ch转换成十进制数\n","\n将字符数组ch中的小写字母转换成大写\n","\n将字符数组ch中的大写字母转换成小写\n"],"correct_choice":"\n将字符数组ch中的大写字母转换成小写\n"},{"title":"  有 定 义 :int a=8,b=5,c;, 执 行 语 句c=a/b+0.4;后,c 的值为（）。  ","choices":["\n1.4\n","\n1\n","\n2.0\n","\n2\n"],"correct_choice":"\n1\n"},{"title":"  设有语句  char a = '\\72'; 则关于变量a的说法正确的是？（    ） ","choices":["\n包含2个字符\n","\n说明不合法\n","\n包含1个字符\n","\n包含3个字符\n"],"correct_choice":"\n包含1个字符\n"},{"title":"在switch语句的每个case块中，假定都是以break语句结束的，则此switch语句容易被改写为（   ）语句。","choices":["\nfor\n","\nwhile\n","\ndo\n","\nif\n"],"correct_choice":"\nif\n"},{"title":"  有以下程序： \nmain()\n{\n     int a=1;\n     int b=3;\n     int c=5;\n     int *p1=&a;\n     int *p2=&b;\n     int *p=&c;\n     *p=*p1*(*p2);\n     printf(\"%d\\n\",c);\n}\n  执行后的输出结果是（） ","choices":["\n1\n","\n2\n","\n3\n","\n4\n"],"correct_choice":"\n3\n"},{"title":"假定a为一个整数类型的数组名，整数类型的长度为4，则元素a[4]的地址比a数组的首地址大( )个字节。","choices":["\n4\n","\n8\n","\n16\n","\n32\n"],"correct_choice":"\n16\n"},{"title":"  以 下 程 序 段 char*alp[]={\"ABC\",\"DEF\",\"GHI\"};  int  j;puts(alp[1]);的输出结果是（）。  ","choices":["\nA\n","\nB\n","\nD\n","\nDEF\n"],"correct_choice":"\nDEF\n"},{"title":"\n  关闭文件可以使用成员函数fclose();说法是否正确？ \n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"  给出以下定义, 则对两个数组的strlen正确的叙述为 \nchar x[]=\"abcdefg\";\nchar y[]={'a','b','c','d','e','f','g'};\n","choices":["\n数组X和数组Y等价\n","\n数组X和数组Y长度相同\n","\n数组X的长度大于等于数组Y的长度\n","\n数组X的长度小于等于数组Y的长度\n"],"correct_choice":"\n数组X的长度小于等于数组Y的长度\n"},{"title":"下面程序的运行结果为： void main()\n{\n       int a, x;\n       for(a = 0, x = 0; a<=1 && !x++; a++) \n       { \n             a++; \n        } \n       cout<< a << x << endl;\n}\n","choices":["\n21\n","\n22\n","\n32\n","\n41\n"],"correct_choice":"\n21\n"},{"title":"  有以下程序 \n#include <stdio. h>\nmain(){ \n    int x =35,B; \n    char z ='B';\n    B =((x)&&(z <'b'));\n    printf(\"%d\\n\",B);\n}\n\n 程序运行后的输出结果是","choices":["\n1\n","\n0\n","\n35\n","\n66\n"],"correct_choice":"\n1\n"},{"title":"在32位系统环境，编辑选项为4字节对齐，那么sizeof(A)和sizeof(B)是____ struct A{\n  int a;\n  short b;\n  int c;\n  char d;\n};\nstruct B{\n  int a;\n  short b;\n  char d;\n  int c;\n};","choices":["\n16，16\n","\n13，12\n","\n16,12\n","\n11,16\n"],"correct_choice":"\n16,12\n"},{"title":"  有以下程序 \n#include < stdio. h > \nmain ( )\n{ \n    int a [ 3 ] [ 4 ] = { 1,3,5,7,9,11,13,15,17,19,21,23 } , (*p) [4] = a , i , j , k = 0 ;\n    for ( i =0 ; i < 3 ; i + + )\n    for ( j =0 ; j < 2 ; j + + ) \n        k = k + * ( * ( p+i )+j );\n    printf ( \"%d\" , k );\n}\n  程序运行后的输出结果是？ ","choices":["\n40\n","\n60\n","\n80\n","\n100\n"],"correct_choice":"\n60\n"},{"title":"请声明一个指针，其所指向的内存地址不能改变，但内存中的值可以被改变。","choices":["\nconst int const *x = &y;\n","\nint * const x = &y;\n","\nconst int *x = &y;\n","\nint const *x = &y;\n","\nconst int * const x = &y;\n"],"correct_choice":"\nint * const x = &y;\n"},{"title":"  求fun（484）的返回值（）  \nbool fun(int n){\n     int sum=0;\n     for(int i=1;n>sum;i=i+2)\n         sum=sum+i;\n     return (n==sum);\n}\n","choices":["\nTrue\n","\nFalse\n"],"correct_choice":"\nTrue\n"},{"title":"  对于下面的C语言声明描述正确的一项是（） \n\n     char (*p)[16]  \n\n","choices":["\np是长度为16的字符指针数组\n","\np是包含16个字符的字符串\n","\np是指向长度为16的字符数组的指针\n","\np是长度为16的字符数组\n"],"correct_choice":"\np是指向长度为16的字符数组的指针\n"},{"title":"C++中构造函数和析构函数可以抛出异常吗?","choices":["\n都不行\n","\n都可以\n","\n只有构造函数可以\n","\n只有析构函数可以\n"],"correct_choice":"\n只有构造函数可以\n"},{"title":"下面关于迭代器失效的描述哪个是错误的（）","choices":["\nvector的插入操作不会导致迭代器失效\n","\nmap的插入操作不会导致迭代器失效\n","\nvector的删除操作只会导致指向被删除元素及后面的迭代器失效\n","\nmap的删除操作只会导致指向被删除元素的迭代器失效\n"],"correct_choice":"\nvector的插入操作不会导致迭代器失效\n"},{"title":"  以下代码输出什么____.   \nmain()\n{\n   int a[5]={1,2,3,4,5};\n   int *p=(int *)(&a+1);\n   printf(\"%d\",*(p-1));\n}","choices":["\n1\n","\n2\n","\n5\n","\n出现错误\n"],"correct_choice":"\n5\n"},{"title":"派生类对象可以访问基类成员中的（）？","choices":["\n公有继承的私有成员\n","\n私有继承的公有成员\n","\n公有继承的保护成员\n","\n以上都错\n"],"correct_choice":"\n以上都错\n"},{"title":"  在一个64位的操作系统中定义如下结构体： \nstruct st_task\n{\n    uint16_t id;\n    uint32_t value;\n    uint64_t timestamp;\n};\n  同时定义fool函数如下： \nvoid fool()\n{\n    st_task task = {};\n    uint64_t a = 0x00010001;\n    memcpy(&task, &a, sizeof(uint64_t));\n    printf(\"%11u,%11u,%11u\", task.id, task.value, task.timestamp);\n}\n  上述fool()程序的执行结果为（） ","choices":["\n1，0，0\n","\n1，1，0\n","\n0，1，1\n","\n0，0，1\n"],"correct_choice":"\n1，0，0\n"},{"title":"  有一个类A，其数据成员如下： \n\n  class A {\n...\nprivate:\n     int a;\npublic:\n     const int b;\n     float* &c;\n     static const char* d;\n     static double* e;\n};\n\n  则构造函数中，成员变量一定要通过初始化列表来初始化的是：______。 ","choices":["\na b c\n","\nb c\n","\nb c d e\n","\nb c d\n","\nb\n","\nc\n"],"correct_choice":"\nb c\n"},{"title":"下面有关C++中为什么用模板类的原因，描述错误的是？","choices":["\n可用来创建动态增长和减小的数据结构\n","\n它是类型无关的，因此具有很高的可复用性\n","\n它运行时检查数据类型，保证了类型安全\n","\n它是平台无关的，可移植性\n"],"correct_choice":"\n它运行时检查数据类型，保证了类型安全\n"},{"title":"以下哪个函数可以在源地址和目的地址的位置任意的情况下，在源地址和目的地址的空间大小任意的情况下实现二进制代码块的复制？","choices":["\nmemcpy()\n","\nmemmove()\n","\nmemset()\n","\nstrcpy()\n"],"correct_choice":"\nmemmove()\n"},{"title":"  开发C代码时,经常见到如下类型的结构体定义: \ntypedef struct list_t{\nstruct list_t *next;\nstruct list_t *prev;\nchar data[0];\n}list_t;\n  最后一行char data[0];的作用是? ","choices":["\n方便管理内存缓冲区\n","\n减少内存碎片化\n","\n标识结构体结束\n","\n没有作用\n"],"correct_choice":"\n方便管理内存缓冲区\n\n减少内存碎片化\n"},{"title":"若以下选项中的变量a,b,y均以正确定义并赋值,则语法正确的switch语句是?","choices":["\nswitch(a*a+b*b)\n{ default：break;\ncase 3 ： y=a+b; break;\ncase 2 ： y=a-b; break;\n}\n","\nswitch(a+b)\n{ case 1 ： case 3 ： y=a+b;break;\ncase 0 ： case 4 ： y=a-b;}\n","\nswitch(a+9)\n{ case a ： y=a-b;\ncase b ： y=a+b;\n}\n","\nswitch a*b\n{ case 10 ： y=a+b;\ndefault ： y=a-b;}\n"],"correct_choice":"\nswitch(a*a+b*b)\n{ default：break;\ncase 3 ： y=a+b; break;\ncase 2 ： y=a-b; break;\n}\n\nswitch(a+b)\n{ case 1 ： case 3 ： y=a+b;break;\ncase 0 ： case 4 ： y=a-b;}\n"},{"title":"  请问实际运行结果是哪个？（）              ","choices":["\nB,A,C,D,~D,~C,~A,~B\n","\nC,B,A,D,~D,~A,~B,~C\n","\nC,A,B,D,~D,~B,~A,~C\n","\nA,B,C,D,~D,~C,~B,~A\n"],"correct_choice":"\nC,B,A,D,~D,~A,~B,~C\n"},{"title":"  若有说明:int i, j=2,*p=&i;,则能完成 i=j 赋值功能的语句是（）。  ","choices":["\ni=*p;\n","\n*p=*&j;\n","\ni=&j;\n","\ni=**p;\n"],"correct_choice":"\n*p=*&j;\n"},{"title":"\n  在C的文件操作中，可以利用fseek函数进行文件指针的随机定位 \n","choices":["\nTURE\n","\nFAULT\n"],"correct_choice":"\nTURE\n"},{"title":"采用重载函数的目的是（    ）。","choices":["\n实现共享\n","\n减少空间\n","\n提高速度\n","\n使用方便，提高可读性\n"],"correct_choice":"\n使用方便，提高可读性\n"},{"title":"  以下不符合 C 语言语法的赋值语句是（）。 ","choices":["\nj++;\n","\nj=j=5;\n","\nk=2*4,k*4;\n","\nint y=float(j);\n"],"correct_choice":"\nint y=float(j);\n"},{"title":"（        ）不是构造函数的特征。","choices":["\n构造函数的函数名与类名相同\n","\n构造函数可以重载\n","\n构造函数可以设置缺省参数\n","\n构造函数必须指定类型说明\n"],"correct_choice":"\n构造函数必须指定类型说明\n"},{"title":"  以下程序的输出结果是（  ）。   char\ncchar(char ch)\n{\nif(ch>=‘A’&&ch<=‘Z') ch=ch-‘A'+‘a';return ch;\n}\nmain()\n{ char\ns[]=\"ABC+abc=defDEF\",*p=s;\nwhile(*p)\n{\n*p=cchar(*p);\np++;\n}\nprintf(\"%s\\n\",s);\n}","choices":["\nabc+ABC=DEFdef\n","\nabc+abc=defdef\n","\nabcaABCDEFdef\n","\nabcabcdefdef\n"],"correct_choice":"\nabc+abc=defdef\n"},{"title":"\n  下列程序的功能是将数组\n  x\n  中下标为奇数的相邻元素和存放在\n  C\n  数组中，比如\n  a[0]=x[1]+x[3],a[1]=x[3]+x[5]...\n  请为横线处选择合适的程序（）\n  \n","choices":["\ni\n","\n（i-1）/2\n","\ni-1\n","\n2*i-3\n"],"correct_choice":"\n（i-1）/2\n"},{"title":"\n  若有定义和语句:\n\n\n  int a[3][3]={{3,5},{8,9},{12,35}},i,sum=0;\n\n\n  for(i=0;i<3;i++) sum+=a[i][2-i];则sum=21.\n\n\n  说法是否正确？\n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"  以下不能正确进行字符串赋初值的语句是（  ）。  ","choices":["\nchar str[5]=\"good!\";\n","\nchar str[]=\"good!\";\n","\nchar *str=\"good!\";\n","\nchar str[5]={‘g',‘o',‘o',‘d'};\n"],"correct_choice":"\nchar str[5]=\"good!\";\n"},{"title":"  假定a为一个字符数组名，则元素a[i]的指针访问方式为（   ）。  ","choices":["\na+i\n","\n*（a+i）\n","\n&a+i\n","\n*a+i\n"],"correct_choice":"\n*（a+i）\n"},{"title":"  字符串 \"a\" 在内存中占据的字节个数为（）   。  ","choices":["\n0\n","\n1\n","\n2\n","\n3\n"],"correct_choice":"\n2\n"},{"title":"类的析构函数是一个对象被(    )时自动调用的。","choices":["\n建立\n","\n撤销\n","\n赋值\n","\n引用\n"],"correct_choice":"\n撤销\n"},{"title":"  s12和s2已正确定义并分别指向两个字符串。若要求：当s1所指串大于s2所指串时，执行语句S;则以下选项中正确的是 (  )。  ","choices":["\nif(s1>s2)S;\n","\nif(strcmp(s1,s2))S;\n","\nif(strcmp(s2,s1)>0) S;\n","\nif(strcmp(s1,s2)>0)S;\n"],"correct_choice":"\nif(strcmp(s1,s2)>0)S;\n"},{"title":"不能作为重载函数的调用的依据是：","choices":["\n参数个数\n","\n参数类型\n","\n函数类型\n","\n函数名称\n"],"correct_choice":"\n函数类型\n"},{"title":"引用标准库时，下面的说法你认为哪个是正确的：","choices":["\n语句#include “stdlib.h”是正确的，而且程序编译速度比#include <stdlib.h>要快\n","\n语句#include <stdlib.h>是正确的，而且程序编译速度比#include “stdlib.h”要快\n","\n语句#include <stdlib.h>和#include “stdlib.h”都是正确的，程序编译速度没有区别\n","\n语句#include “stdlib.h”是错误的\n"],"correct_choice":"\n语句#include <stdlib.h>是正确的，而且程序编译速度比#include “stdlib.h”要快\n"},{"title":"下列关于对象数组的描述中，()是错误的.","choices":["\n对象数组只能赋初值而不能再赋值\n","\n对象数组的每个元素是同一个类的对象\n","\n对象数组的数组名是一个指针常量\n","\n对象数组的下标是从0开始的\n"],"correct_choice":"\n对象数组只能赋初值而不能再赋值\n"},{"title":"若要对data类中重载的加法运算符成员函数进行声明，下列选项中正确的是？","choices":["\nData operator+(Data);\n","\nData operator(Data);\n","\noperator+(Data,Data);\n","\nData+(Data);\n"],"correct_choice":"\nData operator+(Data);\n"},{"title":"下面对静态成员的描述中，正确的是：","choices":["\n静态数据成员可以在类体内初始化\n","\n静态数据成员不可以被类的对象调用\n","\n静态数据成员不能受private控制符的作用\n","\n静态数据成员可以直接用类名调用\n"],"correct_choice":"\n静态数据成员可以直接用类名调用\n"},{"title":"关于虚函数的描述正确的是()","choices":["\n派生类的虚函数与基类的虚函数具有不同的参数个数和类型\n","\n内联函数不能是虚函数\n","\n派生类必须重新定义基类的虚函数\n","\n虚函数可以是一个static型的函数\n"],"correct_choice":"\n内联函数不能是虚函数\n"},{"title":"C++中，下面四个表达式中错误的一项是()","choices":["\na+=(a++)\n","\na+=(++a)\n","\n(a++)+=a\n","\n(++a)+=(a++)\n"],"correct_choice":"\n(a++)+=a\n"},{"title":"下面程序的输出是（）\nclass A\n{\npublic:\n    void foo()\n    {\n        printf(\"1\");\n    }\n    virtual void fun()\n    {\n        printf(\"2\");\n    }\n};\nclass B: public A\n{\npublic:\n    void foo()\n    {\n        printf(\"3\");\n    }\n    void fun()\n    {\n        printf(\"4\");\n    }\n};\nint main(void)\n{\n    A a;\n    B b;\n    A *p = &a;\n    p->foo();\n    p->fun();\n    p = &b;\n    p->foo();\n    p->fun();\n    A *ptr = (A *)&b;\n    ptr->foo();\n        ptr->fun();\n    return 0;\n}\n\n\t\n\n","choices":["\n121434\n","\n121414\n","\n121232\n","\n123434\n"],"correct_choice":"\n121414\n"},{"title":"下面有关c++线程安全，说法错误的是？","choices":["\n线程安全问题都是由全局变量及静态变量引起的\n","\n若每个线程中对全局变量、静态变量只有读操作，而无写操作，一般来说，这个全局变量是线程安全的；若有多个线程同时执行写操作，一般都需要考虑线程同步，否则的话就可能影响线程安全\n","\nc++标准库里面的string保证是线程安全的\n","\nPOSIX线程标准要求C标准库中的大多数函数具备线程安全性\n"],"correct_choice":"\nc++标准库里面的string保证是线程安全的\n"},{"title":"What is the result of the following program? char *f(char *str , char ch) \n{ \n    char *it1 = str; \n    char *it2 = str; \n    while(*it2 != '\\0') \n    { \n        while(*it2 == ch) \n        { \n            it2++; \n        } \n        *it1++ = *it2++; \n     } \n     return str; \n} \n\nint main(void) \n{ \nchar *a = new char[10]; \nstrcpy(a , \"abcdcccd\"); \ncout<<f(a, 'c');\nreturn 0;\n}","choices":["\nabdcccd\n","\nabdd\n","\nabcc\n","\nabddcccd\n","\nAccess violation\n"],"correct_choice":"\nabddcccd\n"},{"title":"用户双击鼠标时产生的消息序列，下面正确的是（）","choices":["\nWM_LBUTTONDOWN，WM_LBUTTONUP，WM_LBUTTONDOWN，WM_LBUTTONUP\n","\nWM_LBUTTONDOWN，WM_LBUTTONUP，WM_LBUTTONUP，WM_LBUTTONDBLCLK\n","\nWM_LBUTTONDOWN，WM_LBUTTONUP，WM_LBUTTONDOWN，WM_LBUTTONDBLCLK\n","\nWM_LBUTTONDOWN，WM_LBUTTONUP，WM_LBUTTONDBLCLK，WM_LBUTTONUP\n"],"correct_choice":"\nWM_LBUTTONDOWN，WM_LBUTTONUP，WM_LBUTTONDBLCLK，WM_LBUTTONUP\n"},{"title":"  若以下程序 \n#include <stdio.h>\nmain()\n{ \n    FILE *fp;\n    int i,a[ 6]={1,2,3,4,5,6},k;\n    fp = fopen (\"data.dat\", \"w+b\");\n    for (i=0;i<6;i+ +)\n    { \n        fseek(fp,0L,0);\n        fwrite(&a[5—i],sizeof(int),1,fp);\n    }\n    rewind(fp);\n    fread(&k,sizeof(int),1,fp);\n    fclose(fp);\n    printf(\"%d\",k);\n}\n  则程序的输出结果是？ ","choices":["\n6\n","\n1\n","\n123456\n","\n21\n"],"correct_choice":"\n1\n"},{"title":"  关于do循环体while(条件表达式)，以下叙述中正确的是？ \n\n  \n","choices":["\n条件表达式的执行次数总是比循环体的执行次数多一次\n","\n循环体的执行次数总是比条件表达式执行次数多一次\n","\n条件表达式的执行次数与循环体的执行次数一样\n","\n条件表达式的执行次数与循环体的执行次数无关\n"],"correct_choice":"\n条件表达式的执行次数与循环体的执行次数无关\n"},{"title":"两个线程并发执行以下代码,假设a是全局变量,那么以下输出___哪个是可能的?\n\n  int a=1;\nvoid foo(){\n    ++a;\n    printf(\"%d\",a);\n}\n","choices":["\n3 2\n","\n2 3\n","\n3 3\n","\n2 2\n"],"correct_choice":"\n3 2\n\n2 3\n\n3 3\n\n2 2\n"},{"title":"  设 j 和 k 都是 int 类型,则 for 循环语句（）。    for(j=0,k=-1;k=1;j++,k++)    printf(\"****\\n\");     ","choices":["\n循环结束的条件不合法\n","\n是无限循环\n","\n循环体一次也不执行\n","\n循环体只执行一次\n"],"correct_choice":"\n是无限循环\n"},{"title":"  下列选项中,合法的 C 语言关键字是（）。 ","choices":["\nVAR\n","\ncher\n","\ninteger\n","\ndefault\n"],"correct_choice":"\ndefault\n"},{"title":"在下面有关类声明的说法中，正确的是（    ）","choices":["\n可以在类的声明中给数据成员赋初值\n","\n数据成员的数据类型可以是 register\n","\nprivate、public、protected 可以按任意顺序出现\n","\n没有使用 private、public、protected 定义的数据成员是公有成员。\n"],"correct_choice":"\nprivate、public、protected 可以按任意顺序出现\n"},{"title":"在C语言中，顺序存储长度为3的字符串，需要占用（    ）个字节。","choices":["\n3\n","\n4\n","\n6\n","\n12\n"],"correct_choice":"\n4\n"},{"title":"  假定w、x、y、z、m均为int型变量，有如下程序段： \n  w=1;x=2;y=3;z=4; \n  m=(w<x)?w:x; \n\n  m=(w<y)?w:y;\n\n\n  \n    m=(w<z)?w:z;\n  \n\n\n  则该程序运行后，m的值是（        ）\n","choices":["\n1\n","\n2\n","\n3\n","\n4\n"],"correct_choice":"\n1\n"},{"title":"设 x 和 y 均为逻辑值，则 x && y 为真的条件是 ( )","choices":["\n它们均为真\n","\n其中一个为真\n","\n它们均为假\n","\n其中一个为假\n"],"correct_choice":"\n它们均为真\n"},{"title":"C语言中double 类型数据占字节数为（）","choices":["\n4\n","\n8\n","\n12\n","\n16\n"],"correct_choice":"\n8\n"},{"title":"\n  结构体就是一个可以包含不同数据类型的一个结构.说法是否正确？\n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"switch语句能够改写为（    ）语句。","choices":["\nfor\n","\nif\n","\ndo-while\n","\nwhile\n"],"correct_choice":"\nif\n"},{"title":"class Base \n{\n     public:\n         virtual     ~Base(){std::out<<”Base Destructor”<<std::endl;}\n}\nclass Derived: public Base \n{\n    public :\n        ~Derived(){std::out<<”Derived     Destructor” <<std::endl;}\n}\nBase* p=new Derived();\ndelete p;   上面代码在执行 delete p 时，控制台会输出什么内容（）  ","choices":["\nBase Destructor\n","\nDerived Destructor\n","\nBase Destructor\nDerived Destructor\n","\nDerived Destructor\nBase Destructor\n"],"correct_choice":"\nDerived Destructor\nBase Destructor\n"},{"title":"\n  对象成员的表示方法与结构体变量成员的表示方法相同。说法是否正确？\n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"  以下程序的输出结果是（） \n\n     #include <string.h>  \n     #include <stdio.h>  \n  \n    \n  \n     void main()  \n     {  \n  char a[80] = \"AB\", b[80] = \"LMNP\",     i=0;  \n  strcat(a, b);  \n  while (a[i] != '\\0')  \n  {  \n  i++;  \n  b[i] = a[i];  \n  }  \n  puts(b);  \n     }  \n","choices":["\nLB\n","\nABLMNP\n","\nAB\n","\nLBLMNP\n"],"correct_choice":"\nLBLMNP\n"},{"title":"\n  在\n  32\n  位编译器上，设有定义\n\n\n  char *str1 = \"Hello\", str2[] = \"Hello\"; \n  ，\n\n\n  则以下语句\n  printf(\"%d %d\", sizeof(str1), sizeof(str2));\n  的输出结果是（）\n","choices":["\n5 6\n","\n5 5\n","\n6 6\n","\n4 6\n"],"correct_choice":"\n4 6\n"},{"title":"\n  一个算法应该具有“确定性”等五个特性，下面对另外\n  4\n  个特性的描述中错误的是（  ）\n","choices":["\n有零个或多个输入\n","\n有零个或多个输出\n","\n有穷性\n","\n可行性\n"],"correct_choice":"\n有零个或多个输出\n"},{"title":"  结构化程序由三种基本结构组成，三种基本结构组成的算法（ ）。   ","choices":["\n可以完成任何复杂的任务\n","\n只能完成部分复杂的任务\n","\n只能完成符合结构化的任务\n","\n只能完成一些简单的任务\n"],"correct_choice":"\n只能完成符合结构化的任务\n"},{"title":"C语言程序中,运算对象必须是整型数的运算符是？","choices":["\n&&\n","\n/\n","\n%\n","\n*\n"],"correct_choice":"\n%\n"},{"title":"\n  下列代码的运行结果是（）\n\n\n  int a[]={1,2,3,4};\nint *b=a;\n*b+=2;\n*(b+2)=2;\nb++; \nprintf(“%d,%d\\n”,*b,*(b+2));\n","choices":["\n1,3\n","\n1,2\n","\n2,4\n","\n3,2\n"],"correct_choice":"\n2,4\n"},{"title":"请问经过表达式a = 5 ? 0 : 1的运算,变量a的最终值是?","choices":["\n5\n","\n1\n","\n0\n","\ntrue\n"],"correct_choice":"\n0\n"},{"title":"char str[]=”Hello”,sizeof(str)=（）","choices":["\n4\n","\n5\n","\n6\n","\n7\n"],"correct_choice":"\n6\n"},{"title":"       没有重载下面哪个运算符？ ","choices":["\n==\n","\n++\n","\n*\n","\n>>\n"],"correct_choice":"\n>>\n"},{"title":"32位编译器下，sizeof(void)的值是多少?","choices":["\n0\n","\n4\n","\n这取决于主机的字的大小。\n","\n8\n","\n编译错误或者为1\n"],"correct_choice":"\n编译错误或者为1\n"},{"title":"\n  下面叙述不正确的是（）\n","choices":["\n派生类一般都用公有派生\n","\n对基类成员的访问必须是无二义性的\n","\n赋值兼容规则也适用于多重继承的组合\n","\n父类的公有成员在派生类中仍然是公有的\n"],"correct_choice":"\n父类的公有成员在派生类中仍然是公有的\n"},{"title":"  若有以下定义和语句： \n char s1[]=\"12345\",*s2=\"1234\";\n printf(\"%d\\n\" ,strlen(strcpy(s1,s2))); \n  则输出结果是 ","choices":["\n4\n","\n5\n","\n9\n","\n10\n"],"correct_choice":"\n4\n"},{"title":"使用操作符setw()\n 对数据进行格式输出时，应包含（  ）文件。","choices":["\nfstream.h\n","\nstdlib.h\n","\niostream.h\n","\niomanip.h\n"],"correct_choice":"\niomanip.h\n"},{"title":"以下选项中合法的实型常量是？","choices":["\n0\n","\n3.13e-2.1\n","\n.914\n","\n2.0*10\n"],"correct_choice":"\n.914\n"},{"title":"\n  如下代码的输出结果是（）\n\nint function2(int a[], int b, int e)\n{\n\tif(e-b<=1) return abs(a[b]-a[e])>=3?a[b]:a[e];\n\tint l = 0, r = 0;\n\tl = function2(a, b, b + (e - b) / 2);\n\tif (l % 2 == 0)\n\t\tr = function2(a, b + (e - b) / 2 + 1, e);\n\telse\n\t\treturn l;\n\tif (l | r)\n\t\treturn l | r;\n\telse\n\t\treturn r;\n}\n\nint main()\n{\n\tint a[] = { 10,5,8,4,5,20,2,3 };\n\tcout << function2(a, 0, sizeof(a) / sizeof(1)) << endl;\n\tint b[] = { 3,5,8,4,8,30,2,3 };\n\tcout << function2(b, 0, sizeof(b) / sizeof(1)) << endl;\n\treturn 0;\n}\n\n  \n\n\n  \n    \n  \n","choices":["\n15,5\n","\n10,5\n","\n20,3\n","\n其它\n"],"correct_choice":"\n15,5\n"},{"title":"下列定义语句中，错误的是","choices":["\nint px*；\n","\nchar *acp[10]；\n","\nchar（*pac）[10]；\n","\nint（*p）（）；\n"],"correct_choice":"\nint px*；\n"},{"title":"  若 a 是 float 型变量,b 是 unsigned 型变量,以下输入语句中合法的是（）。  ","choices":["\nscanf(\"%6.2f%d\",&a,&b);\n","\nscanf(\"%f%n\",&a,&b);\n","\nscanf(\"%f%3o\",&a,&b);\n","\nscanf(\"%f%f\",&a,&b);\n"],"correct_choice":"\nscanf(\"%f%n\",&a,&b);\n\nscanf(\"%f%3o\",&a,&b);\n"},{"title":"以下关于内联函数，说法正确的是：","choices":["\n一般用于加快程序执行速度\n","\n可能减小可执行文件大小\n","\n可能增加可执行文件大小\n","\n以上说法都不正确\n"],"correct_choice":"\n一般用于加快程序执行速度\n\n可能减小可执行文件大小\n\n可能增加可执行文件大小\n"},{"title":"  若有以下说明和语句，int c[4][5],(*p)[5];p=c;能正确引用c数组元素的是(   )。  ","choices":["\np+1\n","\n*(p+3)\n","\n*(p+1)+3\n","\n*(p[0]+2)\n"],"correct_choice":"\n*(p[0]+2)\n"},{"title":"main 函数执行以前，还会执行什么代码？","choices":["\n全局对象的构造函数\n","\n全局对象的析构函数\n","\n局部对象的构造函数\n","\n局部对象的析构函数\n"],"correct_choice":"\n全局对象的构造函数\n"},{"title":"下列关于运算符重载的叙述中，正确的是（        ）","choices":["\n通过运算符重载，可以定义新的运算符\n","\n有的运算符只能作为成员函数重载\n","\n若重载运算符+，则相应的运算符函数名是+\n","\n重载二元运算符时，必须声明两个形参\n"],"correct_choice":"\n有的运算符只能作为成员函数重载\n"},{"title":"  已定义 ch 为字符型变量，以下赋值语句中错误的是（）。  ","choices":["\nch='\\';\n","\nch=62+3;\n","\nch=NULL;\n","\nch='\\xaa';\n"],"correct_choice":"\nch='\\';\n"},{"title":"\n   为了避免嵌套的if-else语句的二义性，C语言规定else总是与（ ）组成配对关系。\n\n\n  \n","choices":["\n缩排位置相同的if\n","\n在其之前未配对的if\n","\n.在其之前未配对的最近的if\n","\n同一行上的if\n"],"correct_choice":"\n.在其之前未配对的最近的if\n"},{"title":"  C 语言规定:简单变量做实参时，它和对应形参之间的数据传递方式是（）。  ","choices":["\n地址传递\n","\n单向值传递\n","\n由实参传给形参，再由形参传回给实参\n","\n由用户指定的传递方式\n"],"correct_choice":"\n单向值传递\n"},{"title":"一个c程序的执行是从","choices":["\n本程序的main函数开始\n","\n本程序文件的第一个函数开始\n","\n第一行#include<stdio.h>开始\n","\n程序的全局变量的定义开始\n"],"correct_choice":"\n本程序的main函数开始\n"},{"title":"  以下程序运行时要求输入10和20分别存放在变量x和y中，能正确输入数据的是（） 。 \nmain()\n{int x,y; \n  scanf(\"x=%d,y=%d\",&x,&y);\n  printf(\"x+y=%d\",x+y);\n}\n\n   (说明：用<CR>表示换行符，用＿表示空格符)\n","choices":["\n10＿20<CR>\n","\nx=10,y=20<CR>\n","\n10<CR>  \n20<CR>\n","\nx=10<CR>\ny=20<CR>\n"],"correct_choice":"\nx=10,y=20<CR>\n"},{"title":"  有如下定义#define D 2 int x=5;floaty=3.83; char c=′D′; 则下面选项中错误的是（）。  ","choices":["\nx++;\n","\ny++;\n","\nc++;\n","\nD++;\n"],"correct_choice":"\nD++;\n"},{"title":"  执行printf(  “ %5s ” , “abcdefg  ” ) 后，则输出结果为（ ）。  ","choices":["\nabcde\n","\nabcdefg\n","\ncdefg\n","\n输出错误信息\n"],"correct_choice":"\nabcdefg\n"},{"title":"  以下程序段的输出结果是（） \n\n     int k, a[3][3]={1,2,3,4,5,6,7,8,9};  \n     for (k = 0; k < 3; k++) printf(\"%d \", a[k][2-k]);  \n","choices":["\n3 5 7\n","\n3 6 9\n","\n1 5 9\n","\n1 4 7\n"],"correct_choice":"\n3 5 7\n"},{"title":"  以下程序的输出结果是______。 \n\n  #include <stdio.h>\nint main()\n{   \n    int i,a[10];\n    for(i=9;i>=0;i--)  a[i]=10-i;\n    printf(\"%d%d%d\",a[2],a[5],a[8]);\n    return 0;\n}\n","choices":["\n258\n","\n741\n","\n852\n","\n369\n"],"correct_choice":"\n852\n"},{"title":"  C 语言中的文件的存储方式有（）。 ","choices":["\n只能顺序存取\n","\n只能随机存取(或直接存取)\n","\n可以顺序存取,也可随机存取\n","\n只能从文件的开头进行存取\n"],"correct_choice":"\n可以顺序存取,也可随机存取\n"},{"title":"下面函数的执行结果是输出\nchar str[ ] = “xunlei”;\nchar *p = str;\nint n = 10;\nprintf(“%d, %d, %d/n”, sizeof(str), sizeof(p), sizeof(n));","choices":["\n4, 4, 4\n","\n7, 4, 4\n","\n6, 4, 4\n","\n6, 6, 4\n"],"correct_choice":"\n7, 4, 4\n"},{"title":"  下面函数的执行结果是输出 \n\n  char str[]=”xunlei”;\nchar *p=str;\nint n=10;\nprintf(“%d,%d,%d\\n”,sizeof(str),sizeof(p),sizeof(n));\n  \n\n","choices":["\n4，4，4\n","\n7，4，4\n","\n6，4，4\n","\n6，6，4\n"],"correct_choice":"\n7，4，4\n"},{"title":"友元能通过类的对象访问类中的所有成员吗？","choices":["\n是\n","\n错\n"],"correct_choice":"\n是\n"},{"title":"  下面描述正确的是 \nint *p1 = new int[10]; \nint *p2 = new int[10](); \n\n","choices":["\np1和p2申请的空间里面的值都是随机值\n","\np1和p2申请的空间里的值都已经初始化\n","\np1申请的空间里的值是随机值，p2申请的空间里的值已经初始化\n","\np1申请的空间里的值已经初始化，p2申请的空间里的值是随机值\n"],"correct_choice":"\np1申请的空间里的值是随机值，p2申请的空间里的值已经初始化\n"},{"title":"  下列代码可以通过编译吗？如何修改使其通过编译？ \n\n  template <class T>\nstruct sum {\n  static void foo(T op1 , T op2){\n  \tcout << op1 <<op2; \n  }\n};\nsum::foo(1,3);\n","choices":["\n编译通过\n","\n应该去掉static关键字\n","\n调用应该如下： sum<int>:: foo(1,3)\n","\n调用应该如下： sum:: <int>foo(1,3)\n"],"correct_choice":"\n调用应该如下： sum<int>:: foo(1,3)\n"},{"title":"下列表达式正确的是：","choices":["\n9++\n","\n（x+y）++\n","\nc+++c+++c++\n","\n++（a-b--）\n"],"correct_choice":"\nc+++c+++c++\n"},{"title":"下面对静态数据成员的描述中，正确的是?","choices":["\n静态数据成员可以在类体内进行初始化\n","\n静态数据成员不可以被类的对象调用\n","\n静态数据成员不受private控制符的作用\n","\n静态数据成员可以直接用类名调用\n"],"correct_choice":"\n静态数据成员可以直接用类名调用\n"},{"title":"  若有以下定义和语句： \nint a[10]={1,2,3,4,5,6,7,8,9,10},*p=a;\n  则不能表示a数组元素的表达式是 ","choices":["\n*p\n","\na[10]\n","\n*a\n","\na[p-a]\n"],"correct_choice":"\na[10]\n"},{"title":"给定如下代码： int x[4]={0}; int y[4]={1}; 数组x和y的值为（）","choices":["\n{0，0，0，0}，{1，1，1，1}\n","\n{0，0，0，0}，{1，0，0，0}\n","\n{0，不确定}，{1，不确定}\n","\n与编译器相关\n"],"correct_choice":"\n{0，0，0，0}，{1，0，0，0}\n"},{"title":"  以下程序的输出结果是： \n#include <iostream>\nusing namespace std;\nvoid func(char **m){\n    ++m;\n    cout<<*m<<endl;\n}\nint main(){\n    static char *a[]={\"morning\", \"afternoon\", \"evening\"};\n    char **p;\n    p=a;\n    func(p);\n    return 0;\n}\n\n\n  \n","choices":["\nafternoon\n","\n字符o的起始地址\n","\n字符o\n","\n字符a的起始地址\n"],"correct_choice":"\nafternoon\n"},{"title":"求输出结果 \nint a[2][2][3]= { {{1,2,3},{4,5,6}},{{7,8,9},{10,11,12}}};\nint *ptr=(int *)(&a+1);\nprintf(“%d %d”, *(int*)(a+1), *(ptr-1));\n\n\n\n  \n","choices":["\n7 12\n","\n1 6\n","\n1 3\n","\n7 9\n"],"correct_choice":"\n7 12\n"},{"title":"关于子类型的描述中，（  ）是错误的？","choices":["\n在公有继承下,派生类是基类的子类型\n","\n子类型关系是不可逆的\n","\n子类型就是指派生类是基类的子类型\n","\n一种类型当它至少提供了另一种类型的行为,则这种类型是另一种类型的子类型\n"],"correct_choice":"\n子类型就是指派生类是基类的子类型\n"},{"title":"  有以下程序 \n#include<iostream>\n#include<stdio.h>\nusing namespace std;\nint main(){\n  int m=0123, n = 123;\n  printf(\"%o %o\\n\", m, n);\n  return 0;\n}\n  程序运行后的输出结果是() ","choices":["\n0123 0173\n","\n0123 173\n","\n123 173\n","\n173 173\n"],"correct_choice":"\n123 173\n"},{"title":"  有一个类B继承自类A，他们数据成员如下： \n\n  class A {\n...\nprivate：\n   int &a;\n};\nclass B : public A {\n...\nprivate:\n     int a;\npublic:\n     const int b;\n     A c;\n     static const char* d;\n     A* e;\n};\n\n  则构造函数中，成员变量一定要通过初始化列表来初始化的是____。 ","choices":["\nb c\n","\nb c e\n","\nb c d e\n","\nc e\n","\nb d\n","\nb e\n"],"correct_choice":"\nb c\n"},{"title":"  对于变换矩阵的平移矩阵，以下说法正确的是（）?  ","choices":["\n平移矩阵属于仿射变换\n","\n平移矩阵可逆\n","\n平移矩阵是正交矩阵\n","\n平移矩阵属于线性变换\n"],"correct_choice":"\n平移矩阵属于仿射变换\n\n平移矩阵可逆\n\n平移矩阵属于线性变换\n"},{"title":"  有如下一段代码：          假设x为9999时，nCount值为（）？  ","choices":["\n32\n","\n999\n","\n8\n","\n1\n"],"correct_choice":"\n8\n"},{"title":"  执行如下代码， c 的值是：（）  int a=0,c=0;\ndo{\n    --c;\n    a=a-1;\n}while(a>0);","choices":["\n0\n","\n1\n","\n-1\n","\n死循环\n"],"correct_choice":"\n-1\n"},{"title":"  循环体至少被执行一次的循环语句为（   ）。","choices":["\nfor\n","\nwhile\n","\ndo-while\n","\n任一种循环\n"],"correct_choice":"\ndo-while\n"},{"title":"  char类型值的数值区间为（）?  ","choices":["\n0~32767\n","\n0~65535\n","\n-128~127\n","\n-2^15~2^15-1\n"],"correct_choice":"\n-128~127\n"},{"title":"  下面函数的功能是（ ）。   int sss(char s[],char t[])\n{\nint i=0;\nwhile(s[i]&&t[i]&&(t[i]==s[i]))\ni++;\nreturn (s[i]-t[i]);\n} ","choices":["\n求字符串的长度\n","\n比较两个字符串的大小\n","\n将字符串s复制到字符串t中\n","\n将字符串s接续到字符串t中\n"],"correct_choice":"\n比较两个字符串的大小\n"},{"title":"  若有以下程序 \n#include < stdio. h >\nmain ( )\n{ \n    char w [20] , a[ 5 ][ 10 ] = { \"abcdef\", \"ghijkl\", \"mnopq\", \"rstuv\", \"wxyz\"} ; \n    int p [ 6 ] [ 2 ] = { {0,1},{1,5},{0,0},{0,2},{1,4},{4,4}}, i ;\n    for (i =0; i < 6 ; i + +) \n        w[i] = a[p[i][0]][p[i][1]];\n    printf( w ) ;\n}\n  则输出结果是? ","choices":["\ncatis\n","\nababj\n","\nckbdl\n","\nblack\n"],"correct_choice":"\nblack\n"},{"title":"  以下程序运行时输入：123456789↙       则程序运行结果是（）？   #include <stdio.h>\nmain()\n{ \n       int  x, y;\n       scanf(\"%2d%*4s%2d\",\n&x, &y);\n       printf(\"%d\",\ny-x);\n}","choices":["\n44\n","\n55\n","\n66\n","\n88\n"],"correct_choice":"\n66\n"},{"title":"\n  在C++语言中,引用数组元素时,其数组下标的数据类型允许是\n  整型常量或整型表达式。说法是否正确？\n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"  为了提高程序的运行速度，在函数中对于整型或指针可以使用（）型的变量。  ","choices":["\nauto\n","\nregister\n","\nstatic\n","\nextern\n"],"correct_choice":"\nregister\n"},{"title":"对于while(!E)s;,若要执行循环体s,则E的取值应为?","choices":["\nE等于1\n","\nE不等于0\n","\nE不等于1\n","\nE等于0\n"],"correct_choice":"\nE等于0\n"},{"title":"对于int* pa[5];的描述，以下哪个选项是正确的（）","choices":["\npa是一个具有5个元素的指针数组，每个元素是一个int类型的指针;\n","\npa是一个指向数组的指针，所指向的数组是5个int类型的元素;\n","\npa[5]表示某个数的第5个元素的值;\n","\npa是一个指向某个数组中第5个元素的指针，该元素是int类型的变量\n"],"correct_choice":"\npa是一个具有5个元素的指针数组，每个元素是一个int类型的指针;\n"},{"title":"在游戏设计中，经常会根据不同的游戏状态调用不同的函数，我们可以通过函数指针来实现这一功能，请声明一个参数为int *，返回值为int的函数指针。","choices":["\nint (*fun)(int)\n","\nint (*fun)(int *)\n","\nint* fun(int *)\n","\nint* (*fun)(int *)\n"],"correct_choice":"\nint (*fun)(int *)\n"},{"title":"  给定下列程序，那么执行printf（\"%\\n\"，foo(20,13)); 的输出结果是多少？ \nint foo （int x，int y ）\n{\n    if （x＜＝0││y＜＝0）\n        return 1；\n    return 3*foo（x-6，y/2）；\n}\n\n","choices":["\n3\n","\n9\n","\n27\n","\n81\n"],"correct_choice":"\n81\n"},{"title":"以下叙述中错误的是？","choices":["\n数值型常量有正值和负值的区分\n","\n常量可以用一个符号名来代表\n","\n定义符号常量必须用类型名来设定常量的类型\n","\n常量是在程序运行过程中值不能被改变的量\n"],"correct_choice":"\n定义符号常量必须用类型名来设定常量的类型\n"},{"title":"32位系统中，定义**a[3][4],则变量占用内存空间为()。","choices":["\n4\n","\n48\n","\n192\n","\n12\n"],"correct_choice":"\n48\n"},{"title":"在c++中的结构体是否可以有构造函数？","choices":["\n不可以，结构类型不支持成员函数\n","\n可以有\n","\n不可以，只有类允许有构造函数\n"],"correct_choice":"\n可以有\n"},{"title":"\n  执行如下代码后。 b 的值是（）\n\nint a = 2, b = 0;\ndo { --b; } while (a --> 0);\n\n","choices":["\n-1\n","\n-2\n","\n-3\n","\n死循环\n"],"correct_choice":"\n-3\n"},{"title":"  有如下C++代码： \nstruct A{\n  void foo(){printf(\"foo\");}\n  virtual void bar(){printf(\"bar\");}\n  A(){bar();}\n};\nstruct B:A{\n  void foo(){printf(\"b_foo\");}\n  void bar(){printf(\"b_bar\");}\n};\n  那么  \nA *p=new B;\np->foo();\np->bar();\n  输出为：   ","choices":["\nbarfoob_bar\n","\nfoobarb_bar\n","\nbarfoob_foo\n","\nfoobarb_fpp\n"],"correct_choice":"\nbarfoob_bar\n"},{"title":"  在c++中， \nconst int i = 0; \nint *j = (int *) &i; \n*j = 1; \nprintf(\"%d,%d\", i, *j)\n\n  输出是多少？ ","choices":["\n0，1\n","\n1，1\n","\n1，0\n","\n0，0\n"],"correct_choice":"\n0，1\n"},{"title":"\n 下列程序的功能是将数组x中下标为奇数的相邻元素和存放在a数组中，比如a[0]=x[1]+x[3],a[1]=x[3]+x[5]...请为横线处选择合适的程序（      ）\n#include<stdio.h>\n#include <string.h>\nmain( ) \n{\n    int x[10],a[10],i; \n    for (i=0;i<10;i++) \n        scanf(\"%d\",&x[i]); \n    for(i=1;i<8;i+=2) \n        a[_______]=x[i]+x[i+2]; \n    for(i=0;i<4;i++) \n        printf(\"%d \",a[i]); \n    printf(\"\\n\");\n}\n","choices":["\ni-1\n","\n(i-1)/2\n","\n2*i-3\n","\ni\n"],"correct_choice":"\n(i-1)/2\n"},{"title":"程序的完整编译过程分为是：预处理，编译，汇编等，如下关于编译阶段的编译优化的说法中不正确的是（）?","choices":["\n死代码删除指的是编译过程直接抛弃掉被注释的代码\n","\n函数内联可以避免函数调用中压栈和退栈的开销\n","\nFor循环的循环控制变量通常很适合调度到寄存器访问\n","\n强度削弱是指执行时间较短的指令等价的替代执行时间较长的指令\n"],"correct_choice":"\n死代码删除指的是编译过程直接抛弃掉被注释的代码\n"},{"title":"c语言中，设有如下说明： typedef struct ST{ \n    long a; int b; char c[2]; \n} NEW; \n  叙述中正确的是：","choices":["\n以上的说明形式非法\n","\nST是一个结构体类型\n","\nNEW是一个结构体类型\n","\nNEW是一个结构体变量\n"],"correct_choice":"\nNEW是一个结构体类型\n"},{"title":"class A\n{\n        int a;\n        short b;\n        int c;\n        char d;\n};\nclass B\n{\n        double a;\n        short b;\n        int c;\n        char d;\n};\n\n  在64位机器上用gcc编译以上代码，求sizeof(A),sizeof(B)分别是多少。 ","choices":["\n12 16\n","\n12 12\n","\n16 24\n","\n16 20\n"],"correct_choice":"\n16 20\n"},{"title":"What is the result of the following program? char* f(char *str, char ch) { \n    char *it1 = str; \n    char *it2 = str; \n    while (*it2 != '\\0') { \n        while (*it2 == ch) { it2++; } \n        *it1++ = *it2++; \n     } \n    return str; \n} \nvoid main(int argc, char *argv[]) { \n    char *a = new char[10]; \n    strcpy(a, \"abcdcccd\"); \n    cout << f(a, 'c'); \n}","choices":["\nabdcccd\n","\nabdd\n","\nabcc\n","\nabddcccd\n","\nAccess Violation\n"],"correct_choice":"\nabddcccd\n"},{"title":"  有一个类B继承自类A，他们数据成员如下： \nclass A {\n...\nprivate：\n     int a;\n};\nclass B  : public A {\n...\nprivate:\n     int a;\npublic:\n     const int b;\n     A &c;\n     static const char* d;\n     B* e;\n}\n  则构造函数中，成员变量一定要通过初始化列表来初始化的是____。 ","choices":["\na b c\n","\nb c e\n","\nb c d e\n","\nc e\n","\nb d\n","\nb c\n"],"correct_choice":"\nb c\n"},{"title":"c++定义一个空的类CTest，CTest没有定义任何成员变量和成员函数，在32位机器上，以下结论正确的有：","choices":["\n对该类求sizeof，结果为0。\n","\n给CTest添加构造函数，再对CTest求sizeof，结果为1.\n","\n给CTest添加虚函数，再对CTest求sizeof，结果为4.\n","\n给CTest添加虚函数，再对CTest求sizeof，结果为5.\n"],"correct_choice":"\n给CTest添加构造函数，再对CTest求sizeof，结果为1.\n\n给CTest添加虚函数，再对CTest求sizeof，结果为4.\n"},{"title":"  给出以下定义，下列哪些操作是合法的？ \nchar a[] = \"hello\";\nchar b[] = \"world\";\nconst char *p1 = a;\nchar* const p2 = b;","choices":["\np1++\n","\np1[2]='w';\n","\np2[2]='l';\n","\np2++\n"],"correct_choice":"\np1++\n\np2[2]='l';\n"},{"title":"请说出const与#define 相比，有何优点 ？","choices":["\n宏常量有数据类型，而const常量没有数据类型\n","\n有些集成化的调试工具可以对const 常量进行调试，但是不能对宏常量进行调试\n","\n编译器可以对const进行类型安全检查。而对#define只进行字符替换，没有类型安全检查，并且在字符替换可能会产生意料不到的错误。\n"],"correct_choice":"\n有些集成化的调试工具可以对const 常量进行调试，但是不能对宏常量进行调试\n\n编译器可以对const进行类型安全检查。而对#define只进行字符替换，没有类型安全检查，并且在字符替换可能会产生意料不到的错误。\n"},{"title":"char * const p, char const * p, const char *p 上述三个的区别，说法错误的是？","choices":["\nchar * const p; 指针常量，p的值不可以修改\n","\nchar const * p；指向常量的指针，指向的常量值不可以改\n","\nconst char *p；常量指针，p的值不可以改变\n"],"correct_choice":"\nconst char *p；常量指针，p的值不可以改变\n"},{"title":"下面有关C++的类和C里面的struct的描述，正确的有？","choices":["\n在C++中，来自class的继承默认按照private继承处理，来自struct的继承默认按照public继承处理\n","\nclass的成员默认是private权限，struct默认是public权限\n","\nc里面的struct只是变量的聚合体，struct不能有函数\n","\nc++的struct可有构造和析构函数\n"],"correct_choice":"\n在C++中，来自class的继承默认按照private继承处理，来自struct的继承默认按照public继承处理\n\nclass的成员默认是private权限，struct默认是public权限\n\nc里面的struct只是变量的聚合体，struct不能有函数\n\nc++的struct可有构造和析构函数\n"},{"title":"下列关于继承的描述中，正确的是（        ）","choices":["\n继承不是类之间的一种关系\n","\nC++语言仅支持单一继承\n","\n继承会增加程序的冗余性\n","\n继承是面向对象方法中一个很重要的特性\n"],"correct_choice":"\n继承是面向对象方法中一个很重要的特性\n"},{"title":"Ｃ语言允许函数值类型缺省定义，此时该函数值隐含的类型是整形。 ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"执行 char str[10] = \"Ch\\nina\";后，strlen(str) 的返回值是（）","choices":["\n9\n","\n7\n","\n6\n","\n5\n"],"correct_choice":"\n6\n"},{"title":"  请选择表达式 '0' + 1 的结果(本题数值均为十进制)？（    ） ","choices":["\n2\n","\n31\n","\n32\n","\n49\n"],"correct_choice":"\n49\n"},{"title":"  下列程序的运行结果是（） \n\n  \n  \n","choices":["\n8，11\n","\n6，13\n","\n13，6\n","\n11，8\n"],"correct_choice":"\n11，8\n"},{"title":"  有以下程序   main()\n{ int m=0256,n=256;\n \nprintf(\"%o %o\\n\",m,n);\n}   程序运行后的输出结果是(   )。  ","choices":["\n0256 0400\n","\n0256 256\n","\n256 400\n","\n400 400\n"],"correct_choice":"\n256 400\n"},{"title":" 以下叙述中正确的是（）","choices":["\n语句int a[8] = {0}; 是合法的\n","\n语句 int a[] = {0};是不合法的，遗漏了数组的大小\n","\n语句 char a[2] = {\"A\", \"B\"}; 是合法的，定义了一个包含两个字符的数组\n","\n语句 char a[3]; a = \"AB\"; 是合法的，因为数组有三个字符空间的容量，可以保存两个字符\n"],"correct_choice":"\n语句int a[8] = {0}; 是合法的\n"},{"title":"作用域运算符（∷）只能用来限定成员函数所属的类。","choices":["\n是\n","\n否\n"],"correct_choice":"\n否\n"},{"title":"  sizeof(float)是（）。 ","choices":["\n一种函数调用\n","\n一个不合法的表达式\n","\n一个整型表达式\n","\n一个浮点表达式\n"],"correct_choice":"\n一个整型表达式\n"},{"title":"  下列程序的输出结果为（）。  main()\n{int m=7,n=4;\nfloat a=38.4,b=6.4,x;\nx=m/2+n*a/b+1/2;\nprintf(\"%f\\n\",x);\n} ","choices":["\n27.000000\n","\n27.500000\n","\n28.000000\n","\n28.500000\n"],"correct_choice":"\n27.000000\n"},{"title":"  有以下程序     #include <stdio.h>    main()      {       int  a[ ] = { 2,4,6,8 }, *p=a,  i;       for( i=0; i<4; i++ )       a[i]=*p++;       printf( \"%d\\n\" ,a[2] );      }     程序的输出结果是（）  ","choices":["\n2\n","\n8\n","\n4\n","\n6\n"],"correct_choice":"\n6\n"},{"title":"  若 a=1,b=2则 a|b 的值是（）。 ","choices":["\n0\n","\n1\n","\n2\n","\n3\n"],"correct_choice":"\n3\n"},{"title":"\n  结构体类型只有一种。 （）\n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"下列关于多态性说法不正确的是（  ）。","choices":["\n多态性是指同名函数对应多种不同的实现\n","\n重载方式仅有函数重载\n","\n重载方式包含函数重载和运算符重载\n","\n多态性表现为静态和动态两种方式\n"],"correct_choice":"\n重载方式仅有函数重载\n"},{"title":"\n  在C++中，一个函数功能不太复杂，但要求被频繁调用，则应该把它定义为（）\n","choices":["\n递归函数\n","\n嵌套函数\n","\n重载函数\n","\n内联函数\n"],"correct_choice":"\n内联函数\n"},{"title":"  以下程序 \n#include <stdio.h>\nvoid fun( char ** p)\n{\n    int i;\n    for(i=0;i<4;i + + )printf(\"% s\",p[i]);\n}\nmain( )\n{\n    char *s[6]={ \"ABCD\", \"EFGH\", \"IJKL\", \"MNOP\", \"QRST\", \"UVWX\" };\n    fun(s);   \n    printf(\"\\n\");\n}\n  程序运行后的输出结果是? ","choices":["\nABCDEFGHIJKL\n","\nABCD\n","\nAEIM\n","\nABCDEFGHIJKLMNOP\n"],"correct_choice":"\nABCDEFGHIJKLMNOP\n"},{"title":"以下哪些对象可用于Windows进程间通信？","choices":["\n事件\n","\n临界区\n","\n互斥量\n","\n共享内存\n"],"correct_choice":"\n共享内存\n"},{"title":"\n  以下C语言指令：\n\nint a[5] = {1,3,5,7,9};\nint *p = (int *)(&a+1);\nprintf(“%d,%d”,*(a+1)，*(p-1));\n\n  运行结果是什么？\n\n\n  \n","choices":["\n2,1\n","\n3,1\n","\n3,9\n","\n运行时崩溃\n"],"correct_choice":"\n3,9\n"},{"title":"下面有关空指针和未初始化指针，说法错误的是？","choices":["\n对0x0这个地址取值是非法的\n","\n空指针可以确保不指向任何对象或函数; 而未初始化指针则可能指向任何地方。\n","\n空指针与任何对象或函数的指针值都不相等\n","\nmalloc在其内存分配失败时返回的是一个未初始化的指针\n"],"correct_choice":"\nmalloc在其内存分配失败时返回的是一个未初始化的指针\n"},{"title":"  下面程序运行后的结果为： \nchar str[] = \"glad to test something\";\nchar *p = str;\np++;\nint *p1 = reinterpret_cast<int *>(p);\np1++;\np = reinterpret_cast<char *>(p1);  \nprintf(\"result is %s\\n\", p);\n","choices":["\nresult is glad to test something\n","\nresult is ad to test something\n","\nresult is test something\n","\nresult is to test something\n"],"correct_choice":"\nresult is to test something\n"},{"title":"  下列程序执行后，输出的结果为( ) \n#include <stdio.h>\nint cnt=0;\nint fib(int n){\n　　cnt++;\n　　if(n==0) \n　　　　return 1; \n　　else if(n==1) \n　　　　return 2; \n　　else \n　　　　return fib(n-1)+fib(n-2);\n}\nvoid main()\n{\n　　fib(8);\n　　printf(\"%d\",cnt);\n}","choices":["\n41\n","\n67\n","\n109\n","\n177\n"],"correct_choice":"\n67\n"},{"title":"如果x=2014，下面函数的返回值是（）\nint fun(unsigned int x)\n{\n     int n=0;\n     while((x+1))\n     {\n         n++; \n         x=x|(x+1);\n     }\n     return n;\n}\n","choices":["\n20\n","\n21\n","\n23\n","\n25\n"],"correct_choice":"\n23\n"},{"title":"\n  在x86的机器上，int a=0xabcd1234 char b=（（char*）&a）[0]请问b是多少\n","choices":["\n0xa\n","\n0x4\n","\n0xab\n","\n0x34\n"],"correct_choice":"\n0x34\n"},{"title":"  关于以下代码，哪个说法是正确的？ \n\n  myClass::foo(){\n    delete this;\n}\n..\nvoid func(){\n    myClass *a = new myClass();\n    a->foo();\n}\n","choices":["\n它会引起栈溢出\n","\n都不正确\n","\n它不能编译\n","\n它会引起段错误\n"],"correct_choice":"\n都不正确\n"},{"title":"#include命令的功能是（）。","choices":["\n在命令处插入一个头文件\n","\n在文件首部插入一个头文件\n","\n在命令处插入一个文本文件\n","\n在文件首部插入一个程序文件\n"],"correct_choice":"\n在命令处插入一个文本文件\n"},{"title":"下列 C 代码中，不属于未定义行为的有：______。","choices":["\nint i=0;i=(i++);\n","\nchar *p=”hello”;p[1]=’E’\n","\nchar *p=”hello”;char ch=*p++\n","\nint i=0;printf(“%d%d\\n”,i++,i--)\n","\n都是未定义行为\n","\n都不是未定义行为\n"],"correct_choice":"\nchar *p=”hello”;char ch=*p++\n"},{"title":"  请选择下列程序的输出结果是（）   #include <stdio.h>\nint main()\n{\n    const int N=10;\n    const int M=2;\n    int* a=new int[N];\n    for(int i=0;i<N;++i)\n        a[i]=(0==i%2)?(i+2):(i+0);\n    int (*b)[N/M]=(int (*)[N/M])a;\n    for(int i=0;i<M;++i)\n        for(int j=0;j<N/M;++j)\n            printf(“%d”,b[i][j]);\n    return 0;\n}   ","choices":["\n21436587109\n","\n224466881010\n","\n03254769811\n","\n21436687101\n"],"correct_choice":"\n21436587109\n"},{"title":"   下面选项中的程序段，没有编译错误的是（）\n","choices":["\nchar* sp, s[10]; sp = \"Hello\";\n","\nchar* sp, s[10]; s = \"Hello\";\n","\nchar str1[10] = \"computer\", str2[10]; str2 = str1;\n","\nchar mark[]; mark = \"PROGRAM\";\n"],"correct_choice":"\nchar* sp, s[10]; sp = \"Hello\";\n"},{"title":"在下列的符号常量定义中，正确的定义格式为（       ）","choices":["\n#define M1\n","\nconst int M2 20\n","\n#define M3 10\n","\nconst char mark\n"],"correct_choice":"\n#define M3 10\n"},{"title":"若有格式输入函数 scanf(\"%d%d%d\", &x, &y, &z)，输入数据时不能使用（ ）作为数据的分隔符。","choices":["\n空格\n","\n逗号\n","\nTAB（制表符）\n","\n回车\n"],"correct_choice":"\n逗号\n"},{"title":"  以下程序的输出结果是（） \n\n     #include <stdio.h>  \n  \n    \n  \n     void main()  \n     {  \n  int k;  \n  int a[3][3] = {1,2,3,4,5,6,7,8,9};  \n  for (k = 0; k < 3; k++) printf(\"%d \",\n    a[k][2-k]);  \n     }  \n","choices":["\n1 4 7\n","\n3 6 9\n","\n2 5 8\n","\n3 5 7\n"],"correct_choice":"\n3 5 7\n"},{"title":"一个C程序的执行是从（        ）","choices":["\nmain（）函数开始，直到main（）函数结束\n","\n第一个函数开始，最后一个函数结束\n","\n第一个语句开始，最后一个语句结束\n","\nmain（）函数开始，直到最后一个函数\n"],"correct_choice":"\nmain（）函数开始，直到main（）函数结束\n"},{"title":"  下列语句中，不正确的是（）。 ","choices":["\nstatic char a[2]={1,2};\n","\nstatic int a[2]={'1','2'};\n","\nstatic char a[2]={'1','2','3'};\n","\nstatic char a[2]={'1'};\n"],"correct_choice":"\nstatic char a[2]={'1','2','3'};\n"},{"title":"引用是用来给某个变量以别名的变量。对引用的操作，实质上就是对被引用的变量的操作。","choices":["\n是\n","\n否\n"],"correct_choice":"\n是\n"},{"title":"  设以下变量均为 int 类型,表达式的值不为7的是（）。  ","choices":["\nx=y=6,x+y,x+1\n","\nx=y=6,x+y,y+1\n","\nx=6,x+1,y=6,x+y\n","\ny=6,y+1,x=y,x+1\n"],"correct_choice":"\nx=6,x+1,y=6,x+y\n"},{"title":"  对以下说明语句 int a[10]={6,7,8,9,10};的正确理解是（）。  ","choices":["\n将5个初值依次赋给 a[1]至 a[5]\n","\n将5个初值依次赋给 a[0]至 a[4]\n","\n将5个初值依次赋给 a[6]至 a[10]\n","\n因为数组长度与初值的个数不相同,所以此语句不正确\n"],"correct_choice":"\n将5个初值依次赋给 a[0]至 a[4]\n"},{"title":"  下列代码输出为（）       ","choices":["\nint\n","\nshort\n","\nvoid\n","\nvoid operator=\n"],"correct_choice":"\nshort\n"},{"title":"\n  C++中,变量使用时遵循\"先定义,后使用\"的原则. 说法是否正确？ ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"  有以下程序    main()\n{ int i;\n \nfor(i=0;i<3;i++)\n   \nswitch(i)\n    {\n     \ncase 0:printf(\"%d\",i);\n     \ncase 2:printf(\"%d\",i);\n     \ndefault:printf(\"%d\",i);\n    }\n}     程序运行后的输出结果是(   )。    ","choices":["\n022111\n","\n021021\n","\n000122\n","\n012\n"],"correct_choice":"\n000122\n"},{"title":"  下面一段代码的输出结果是()  \nvoid f(char *c, char d) {\n    *c = *c + 1;\n    d = d + 1;\n    cout << *c << d;\n}\nint main() {\n    char a = 'A', b = 'a'; f(&b, a);\n    cout << a << b << endl; \n    return 0;\n}","choices":["\nBaBa\n","\nbBAb\n","\nAbAb\n","\naBaB\n"],"correct_choice":"\nbBAb\n"},{"title":"下面对析构函数的正确描述是：","choices":["\n系统不能提供默认的析构函数\n","\n析构函数必须由用户定义\n","\n析构函数没有参数\n","\n析构函数可以设置默认参数\n"],"correct_choice":"\n析构函数没有参数\n"},{"title":"以下代码的运行结果为：\nclass Base {\npublic:\nBase() {echo();}\nvirtual void echo() {printf(“Base”);}\n};\n \nclass Derived:public Base {\npublic:\nDerived() {echo();}\nvirtual void echo() {printf(“Derived”);}\n};\n \nint main() {\nBase* base = new Derived();\nbase->echo();\nreturn 0;\n}","choices":["\nDerived\nDerived\nDerived\n","\nDerived\nBase\nDerived\n","\nBase\nDerived\nBase\n","\nBase\nDerived\nDerived\n"],"correct_choice":"\nBase\nDerived\nDerived\n"},{"title":"  阅读以下程序： \nmain()\n{\n    int x;\n    scanf(“ % d”, &x);\n    if (x-- < 5)printf(“ % d”, x);\n    else printf(“ % d”, x++);\n}\n\n  程序运行后，如果从键盘上输入5，则输出结果是 ","choices":["\n3\n","\n4\n","\n5\n","\n6\n"],"correct_choice":"\n4\n"},{"title":"在一个双向循环链表中，指针p所指向的节点（非尾节点）之后插入指针s指向的节点，其修改指针的操作是","choices":["\np->next=s; s->prev=p; p->next->prev=s; s->next=p->next;\n","\np->next->prev=s; p->next=s; s->prev=p; s->next=p->next;\n","\np->next->prev=s; s->prev=p; p->next=s; s->next=p->next;\n","\ns->prev=p; s->next=p->next; p->next=s; p->next->prev=s ;\n","\ns->prev=p; s->next=p->next; p->next->prev=s; p->next=s;\n","\ns->next =p->next;s->prev=p; p->next=s;p->next->prev=s;\n"],"correct_choice":"\ns->prev=p; s->next=p->next; p->next->prev=s; p->next=s;\n"},{"title":"\n  如下程序执行后的输出结果是（）\n\n\n  \n    \n  \n","choices":["\nBase Base\n","\nDerived Derived\n","\nDerived Base\n","\nBase Derived\n"],"correct_choice":"\nBase Derived\n"},{"title":"在 32 位操作系统中，下列类型占用 8 个字符的为______。","choices":["\nshort int\n","\nInt C long\n","\nUnsigned int\n","\nLong long\n","\nChar\n","\nInt\n"],"correct_choice":"\nLong long\n"},{"title":"对于protected成员，下面说法错误的是:（）","choices":["\n基类可以访问从所有派生类造型（cast）成基类对象的protected成员\n","\n从公有和保护继承的派生类继承的子类里可以访问基类的protected成员\n","\n派生类可以定义一个同名的非protected成员\n","\n派生类可以访问基类对象的公有protected成员\n"],"correct_choice":"\n基类可以访问从所有派生类造型（cast）成基类对象的protected成员\n"},{"title":"如下哪一段代码不能给地址0xaae0275c赋值为1?()","choices":["\nvolatile int *p=(int *)0xaae0275c;*p=1\n","\n(volatile int *)0xaae0275c[0]=1\n","\nvolatile int *p=(int *)0xaae0275c;p[0]=1\n","\n*(volatile int *)0xaae0275c=1\n"],"correct_choice":"\n(volatile int *)0xaae0275c[0]=1\n"},{"title":"说明一下++p 与 p++ 的区别。","choices":["\n没有区别\n","\n++p更好一些\n","\np++更好一些\n","\n和编译器有关\n"],"correct_choice":"\n++p更好一些\n"},{"title":"  给出以下定义，下列哪些操作是合法的？\n  const char *p1 = “hello”;\nchar *const p2 = “world”;\n","choices":["\np1++;\n","\np1[2] = ‘w’;\n","\np2[2] = ‘l’;\n","\np2++;\n"],"correct_choice":"\np1++;\n"},{"title":"  下面代码不能正确输出hello的选项为 \n#include<stdio.h>\nstruct str_t{\n   long long len;\n   char data[32];\n};\nstruct data1_t{\n   long long len;\n   int data[2];\n};\nstruct data2_t{\n   long long len;\n   char *data[1];\n};\nstruct data3_t{\n   long long len;\n   void *data[];\n};\nint main(void)\n{\n   struct str_t str;\n   memset((void*)&str,0,sizeof(struct str_t));\n   str.len=sizeof(struct str_t)-sizeof(int);\n   snprintf(str.data,str.len,\"hello\");//VS下为_snprintf\n   ____________________________________;\n   ____________________________________;\n   return 0;\n}","choices":["\nstruct data3_t *pData=(struct data3_t*)&str; printf(\"data:%s%s\\n\",str.data,(char*)(&(pData->data[0])));\n","\nstruct data2_t *pData=(struct data2_t*)&str; printf(\"data:%s%s\\n\",str.data,(char*)(pData->data[0]));\n","\nstruct data1_t *pData=(struct data1_t*)&str;printf(\"data:%s%s\\n\",str.data,(char*)(pData->data));\n","\nstruct str_t *pData=(struct str_t*)&str; printf(\"data:%s%s\\n\",str.data,(char*)(pData->data));\n"],"correct_choice":"\nstruct data2_t *pData=(struct data2_t*)&str; printf(\"data:%s%s\\n\",str.data,(char*)(pData->data[0]));\n"},{"title":"  函数func的定义如下：  void func(const int& v1, cont int& v2)\n{\n    std::cout << v1 << ' ';\n    std::cout << v2 << ' ';\n}    以下代码输出结果为____。   int main (int argc, char* argv[])\n{\n    int i=0;\n    func(++i,i++);\n    return 0;\n}","choices":["\n0 1\n","\n1 2\n","\n2 1\n","\n2 0\n","\n程序强制终止并报错\n","\n结果与编译器有关\n"],"correct_choice":"\n结果与编译器有关\n"},{"title":"  下列程序数据结果是多少（大 A 的 ascii 码是 65 ）？  #include <stdio.h>\nenum etest{\n    eparam1,\n    eparam2,\n    eparam3=10,\n    eparam4,\n    eparam5='a',\n    eparam6\n}epr;\nint main()\n{\n    printf(“%d,%d”,eparam4,eparam6);\n    return 0;\n} ","choices":["\n3,98\n","\n11,34\n","\n11,98\n","\n3,34\n"],"correct_choice":"\n11,98\n"},{"title":"下列说明中 const char *ptr；ptr应该是（）","choices":["\n指向字符常量的指针；\n","\n指向字符的常量指针；\n","\n指向字符串常量的指针；\n","\n指向字符串的常量指针；\n"],"correct_choice":"\n指向字符常量的指针；\n\n指向字符串常量的指针；\n"},{"title":"  已有定义：char a[]=\"xyz\",b[]={'x','y','z'};,以下叙述中正确的是 (  )。  ","choices":["\n数组a和b的长度相同\n","\na数组长度小于b数组长度\n","\na数组长度大于b数组长度\n","\n上述说法都不对\n"],"correct_choice":"\na数组长度大于b数组长度\n"},{"title":"          以上代码使用VC编译成32位可执行程序，请问：nLenA、nLenAObject、nLenB、nLenAObject、nLenC、nLenCObject的值分别为（    ）    ","choices":["\n1，1，4，4，8，8\n","\n0，0，4，4，4，4\n","\n0，0，4，4，8，8\n","\n1，1，4，4，4，4\n"],"correct_choice":"\n1，1，4，4，4，4\n"},{"title":"下列可用于\nC\n语言用户标识符的一组是\n() ","choices":["\nvoid, define, WORD\n","\na3_b3, _123,Car\n","\nFor, -abc, IF Case\n","\n2a, DO, sizeof\n"],"correct_choice":"\na3_b3, _123,Car\n"},{"title":"C语言用（        ）表示逻辑“真”值。","choices":["\nTrue\n","\nt或y\n","\n非零值\n","\n整型值0\n"],"correct_choice":"\n非零值\n"},{"title":"\n  基类中的成员在派生类中都是可以直接访问的.说法是否正确？\n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"  下面程序的功能是把316表示为两个加数的，使两个加数分别能被13和11整除，在while（）处应填入的选项是 \n#include <iostream>\nusing namespace std;\n\nint main() {\n    int i = 0, j, k;\n    do {\n        i++;\n        k = 316 - 13 * i;\n    } while ();\n    j = k / 11;\n    cout << \"316 = 13 * \" << i << \" +11 * \" << j;\n    return 0;\n}\n\n","choices":["\nk/11\n","\nk*11\n","\nk%11 != 0\n","\nk*11 == 0\n"],"correct_choice":"\nk%11 != 0\n"},{"title":"  以下程序段的输出结果是（）。    char *alp[]={\"ABC\",\"DEF\",\"GHI\"}; int j;    puts(alp[1]); ","choices":["\nA\n","\nB\n","\nD\n","\nDEF\n"],"correct_choice":"\nDEF\n"},{"title":"\n  设struct\n  \n  { \n\n\n  \n     short a;\n  \n\n\n  \n     char b;\n  \n\n\n  \n     float c;\n  \n\n\n  \n    }cs;\n  \n\n\n   则sizeof(cs)的值是()\n","choices":["\n4\n","\n6\n","\n8\n"],"correct_choice":"\n8\n"},{"title":"  以下叙述中正确的是(    )。  ","choices":["\n用C程序实现的算法必须要有输入和输出操作\n","\n用C程序实现的算法可以没有输出但必须要有输入\n","\n用C程序实现的算法可以没有输入但必须要有输出\n","\n用C程序实现的算法可以既没有输入也没有输出\n"],"correct_choice":"\n用C程序实现的算法可以没有输入但必须要有输出\n"},{"title":"  表达式1/4+2.75的值是3。请问这句话的说法是正确的吗？ ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"  以下程序的输出结果是________。 \nvoid fut(int**s,int p[2][3]) {\n    **s=p[1][1];\n}\nvoid main( ) {\n    int a[2][3]={1,3,5,7,9,11},*p;\n    p=(int*)malloc(sizeof(int));\n    fut(&p,a);\n    cout<< *p;\n}","choices":["\n7\n","\n9\n","\n1\n","\n11\n"],"correct_choice":"\n9\n"},{"title":"  给出以下定义：     Char x[]=”abcdefg”;     Char y[]={‘a’,’b’,’c’,’d’,’e’,’f’,’g’}; ","choices":["\n数组X和数组Y等价\n","\n数组X和数组Y的长度相同\n","\n数组X的sizeof运算值大于数组Y的sizeof运算值\n","\n数组X的sizeof运算值小于数组Y的sizeof运算值\n"],"correct_choice":"\n数组X的sizeof运算值大于数组Y的sizeof运算值\n"},{"title":"  有以下程序 \n#include <stdio.h>\n#define SQR( X ) X * X\nmain( )\n{\n    int a=10, k=2, m=1;\n    a / = SQR( k+m )/SQR( k+m );\n    printf( \"%d\\n\" ,a );\n}\n  程序运行后的输出结果是()? ","choices":["\n0\n","\n1\n","\n9\n","\n10\n"],"correct_choice":"\n1\n"},{"title":"引用可以是void类型吗？","choices":["\n不可以\n","\n可以\n"],"correct_choice":"\n不可以\n"},{"title":"下列关于异常处理的描述中，理解不正确的是：","choices":["\nC++语言的异常处理机制通过3个保留字throw、try和catch实现。\n","\n任何需要检测的语句必须在try语句块中执行，并由throw语句抛出异常。\n","\nthrow语句抛出异常后，catch利用数据类型匹配进行异常捕获。\n","\n一旦catch捕获异常，不能将异常用throw语句再次抛出。\n"],"correct_choice":"\n一旦catch捕获异常，不能将异常用throw语句再次抛出。\n"},{"title":"  假设x=9981，下面函数的返回值是？ \nint func(x)\n{\n    int countx=0;\n    while(x)\n    {\n        countx++;\n        x=x&(x-1);\n    }\n    return countx;\n}\n\n","choices":["\n7\n","\n10\n","\n9\n","\n6\n"],"correct_choice":"\n10\n"},{"title":"  下面程序输出结果是什么? \n#include<iostream>\nusing namespace std;\nclass A{\npublic:\n\tA(char *s)\n\t{\n\t\tcout<<s<<endl;\n\t}\n\t~A(){}\n};\nclass B:virtual public A\n{\npublic:\n\tB(char *s1,char*s2):A(s1){\n\t\tcout<<s2<<endl;\n\t}\n};\nclass C:virtual public A\n{\npublic:\n\tC(char *s1,char*s2):A(s1){\n\t\tcout<<s2<<endl;\n\t}\n};\nclass D:public B,public C\n{\npublic:\n\tD(char *s1,char *s2,char *s3,char *s4):B(s1,s2),C(s1,s3),A(s1)\n\t{\n\t\tcout<<s4<<endl;\n\t}\n};\nint main() {\n\tD *p=new D(\"class A\",\"class B\",\"class C\",\"class D\");\n\tdelete p;\n\treturn 0;\n}","choices":["\nclass A class B class C class D\n","\nclass D class B class C class A\n","\nclass D class C class B class A\n","\nclass A class C class B class D\n"],"correct_choice":"\nclass A class B class C class D\n"},{"title":"下列对于宏的描述，不正确的是:（）","choices":["\n宏会带来性能的缺失\n","\n宏不进行类型检查\n","\n宏可以做到函数无法做到的功能\n","\n编译时宏的处理早于函数\n"],"correct_choice":"\n宏会带来性能的缺失\n"},{"title":"  当参数*x=1, *y=1, *z=1时，下列不可能是函数add的返回值的( )? \n\n  int add(int *x, int *y, int *z){\n    *x += *x;\n    *y += *x;\n    *z += *y;\n    return *z;\n }\n  \n","choices":["\n4\n","\n5\n","\n6\n","\n7\n"],"correct_choice":"\n7\n"},{"title":"  下列程序的输出结果： \n#include <iostream>\nusing namespace std;\nclass A\n{\npublic:\n    void print()\n    {\n        cout << \"A:print()\";\n    }\n};\nclass B: private A\n{\npublic:\n    void print()\n    {\n        cout << \"B:print()\";\n    }\n};\nclass C: public B\n{\npublic:\n    void print()\n    {\nA:: print();\n    }\n};\nint main()\n{\n    C b;\n    b.print();\n}\n\n","choices":["\nA:print()\n","\nB:print()\n","\n编译出错\n"],"correct_choice":"\n编译出错\n"},{"title":"\n 下列给定程序中，函数fun的功能是：把形参a所指数组中的奇数按原顺序依次存放到a[0]、a[1]、a[2]…中，把偶数从数组中删除，奇数个数通过函数值返回。\n例如，若a所指数组中的数据最初排列为：9,1,4,2,3,6,5,8,7，删除偶数后，a所指数组中的数据为：9,1,3,5,7，返回值为5。 \n  请在程序的下画线处填入正确的内容并将下画线删除，使程序得出正确的结果。\n  试题程序： #include<stdio.h>\n#define N9\nint fun (int a[], int n)\n{ \n    int i, j;\n    j=0;\n    for (i=0; i<n; i++)\n    /**********found**********/\n    if (a[i]%2== _________ )\n    {\n        /**********found**********/\n        a[j]=a[i];   \n        _________;\n    }\n    /**********found**********/\n    return _________;\n}\nmain( )\n{ \n    int b[N]={9,1,4,2,3,6,5,8,7}, i, n;\n    printf(\"\\nThe original data:\\n\");\n    for(i=0; i<N; i++)\n        printf(\"% 4d\", b[i]);\n    printf(\"\\n\");\n    n=fun(b, N);\n    printf(\"\\nThe number of odd:% d\\n\", n);\n    printf(\"\\nThe odd number: \\n\");\n    for(i=0; i<n; i++)\n        printf(\"%4d\",b[i]);\n    printf(\"\\n\");\n}\n\n","choices":["\n0  j++  j\n","\n1 j++ j+1\n","\n0 j++ j+1\n","\n1 j++ j\n"],"correct_choice":"\n1 j++ j\n"},{"title":"以下程序段完全正确的是\n","choices":["\nint *p;  scanf（\"%d\",＆p）;\n","\nint *p;  scanf（“%d”,p）;\n","\nint k, *p=&k;  scanf（\"%d\",p）;\n","\nint k, *p;  *p= &k;   scanf（“%d”,p）;\n"],"correct_choice":"\nint k, *p=&k;  scanf（\"%d\",p）;\n"},{"title":"  请将下列构造函数补充完整，使得程序的运行结果是5 \n#include<iostream>\nusing namespace std;\nclass Sample{\n\tpublic:\n\t\tSample(int x){\n\t\t\t________\n\t\t}\n\t\t~Sample(){\n\t\t\tif(p) delete p;\n\t\t}\n\t\tint show(){\n\t\t\treturn *p;\n\t\t}\n\tprivate:\n\t\tint*p;\n};\nint main(){\n\tSample S(5);\n\tcout<<S.show()<<endl;\n\treturn 0;\n}","choices":["\n*p=x;\n","\np=new int(x);\n","\n*p=new int(x);\n","\np=&x;\n"],"correct_choice":"\np=new int(x);\n"},{"title":"  下列C程序执行后c输出结果为( )（32位）  #include<stdio.h>\n#include<stdlib.h>\nvoid main()\n{\n　　int a = -3;\n　　unsigned int b = 2;\n　　long c = a + b;\n　　printf(\"%ld\\n\",c);\n}","choices":["\n-1\n","\n4294967295\n","\n0x7FFFFFFF\n","\n0xFFFFFFFF\n"],"correct_choice":"\n-1\n"},{"title":"如何捕获异常可以使得代码通过编译？\nclass A {\n  public:\n        A(){}\n};\nvoid foo(){\n    throw new A;\n}\n","choices":["\ncatch (A && x)\n","\ncatch (A * x)\n","\ncatch (A & x)\n","\n以上都是\n"],"correct_choice":"\ncatch (A * x)\n"},{"title":"下列的常量定义中，错误的定义是（   ）。","choices":["\nconst M=10;\n","\nconst int M=20;\n","\nconst char ch;\n","\nconst bool mark=true;\n"],"correct_choice":"\nconst M=10;\n\nconst char ch;\n"},{"title":"以下关于抽象类的说法正确的有","choices":["\n抽象类只能用作其他类的基类\n","\n不能使用抽象类定义对象\n","\n抽象类不能用作参数类型、函数返回类型或显式转换的类型\n","\n抽象类不能有构造函数和析构函数\n"],"correct_choice":"\n抽象类只能用作其他类的基类\n\n不能使用抽象类定义对象\n\n抽象类不能用作参数类型、函数返回类型或显式转换的类型\n"},{"title":"下列程序的运行结果是YY,78,96，请为横线处选择合适的程序（      ）\n #include <stdio.h>\n #include <string.h>\n typedef struct\n { \n     char name[9]; \n     float score[2]; \n }STU; \n void f(STU   _______) \n { \n     STU b={\"YY\",78,96}; \n     int i; \n     strcpy(a->name,b.name); \n     for(i=0;i<2;i++) \n         a->score[i]=b.score[i];\n } \n main()\n { \n     STU c={\"LL\",90,80}; \n     f(&c); \n     printf(\"%s,%.0f,%.0f\\n\",c.name,c.score[0],c.score[1]);\n }","choices":["\n*a\n","\na\n","\n&a\n","\na[]\n"],"correct_choice":"\n*a\n\na[]\n"},{"title":"  C 语言程序中必须有的函数是（）。 ","choices":["\n#include \"stdio.h\"\n","\nmain\n","\nprintf\n","\nscanf\n"],"correct_choice":"\nmain\n"},{"title":"\n  一个\n  C\n  语言程序在一台\n  32\n  位机器上运行。程序中定义了三个变量\n  x\n  、\n  y\n  和\n  z\n  ，其中\n  x\n  和\n  z\n  为\n  int\n  型，\n  y\n  为\n  short\n  型。当\n  x=127\n  ，\n  y=\n  -\n  9\n  时，执行赋值语句\n  z=x+y\n  后，\n  x\n  、\n  y\n  和\n  z\n  的值分别是（）\n  。\n","choices":["\nx=0000007FH，y=FFF9H，z=00000076H\n","\nx=0000007FH，y=FFF9H，z=FFFF0076H\n","\nx=0000007FH，y=FFF7H，z=FFFF0076H\n","\nx=0000007FH，y=FFF7H，z=00000076H\n"],"correct_choice":"\nx=0000007FH，y=FFF7H，z=00000076H\n"},{"title":"\n  指针变量p进行自加运算(即 执行p++;)后,地址偏移值为1,则其\n  数据类型为\n  char。说法是否正确？\n\n\n  \n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"  以下程序的输出结果是（）。  main()\n{ char s[]=\"123\",*p;\np=s;\nprintf(\"%c%c%c\\n\",*p++,*p++,*p++);\n} ","choices":["\n132\n","\n321\n","\n213\n","\n312\n"],"correct_choice":"\n321\n"},{"title":"  以下叙述正确的是（）。 ","choices":["\n在 C 程序中,main 函数必须位于程序的最前面\n","\nC 程序的每行中只能写一条语句\n","\nC 语言本身没有输入输出语句\n","\n在对一个 C 程序进行编译的过程中,可发现注释中的拼写错误\n"],"correct_choice":"\nC 语言本身没有输入输出语句\n"},{"title":"  下列条件语句中，功能与其他语句不同的是(   )。  ","choices":["\nif(a) printf(\"%d\\n\",x); else printf(\"%d\\n\",y);\n","\nif(a==0) printf(\"%d\\n\",y); else printf(\"%d\\n\",x);\n","\nif (a!=0) printf(\"%d\\n\",x); else printf(\"%d\\n\",y);\n","\nif(a==0) printf(\"%d\\n\",x); else printf(\"%d\\n\",y);\n"],"correct_choice":"\nif(a==0) printf(\"%d\\n\",x); else printf(\"%d\\n\",y);\n"},{"title":"  以下描述中，正确的是（）。 ","choices":["\n预处理是指完成宏替换和文件包含中指定的文件的调用\n","\n预处理指令只能位于 C 源文件的开始\n","\nC 源程序中凡是行首以#标识的控制行都是预处理指令\n","\n预处理就是完成C编译程序对C源程序第一遍扫描,为编译词法和语法分析作准备\n"],"correct_choice":"\nC 源程序中凡是行首以#标识的控制行都是预处理指令\n"},{"title":"  下列运算符中优先级最高的是（）。  ","choices":["\n＜\n","\n十\n","\n%\n","\n!＝\n"],"correct_choice":"\n%\n"},{"title":"  以下能对二维数组 a 进行正确初始化的语句是（）。  ","choices":["\nint a[2][]={{1,0,1},{5,2,3}};\n","\nint a[][3]={{1,2,3},{4,5,6}};\n","\nint a[2][4]={{1,2,3},{4,5},{6}};\n","\nint a[][3]={{1,0,1}{},{1,1}};\n"],"correct_choice":"\nint a[][3]={{1,2,3},{4,5,6}};\n"},{"title":"\n  设在32位机器上的C++语言中,int类型数据占4个字节,则short类型数据占\n  2个字节。说法是否正确？\n\n\n  \n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"  While 循环语句的循环体至少执行一次。请问这句话的说法是正确的吗？ ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"下面关于位运算符的叙述,正确的是？","choices":["\n#表示\"按位异或\"的运算\n","\n&表示\"按位或\"的运算\n","\n～表示\"按位取反\"的运算\n","\n||表示\"按位或\"的运算\n"],"correct_choice":"\n～表示\"按位取反\"的运算\n"},{"title":"\n  表达式4>5?1:0的值是1。说法是否正确？ \n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"  程序段的执行结果是（） \n#include <iostream>\nusing namespace std;\n\nvoid fun1(int &x) {\n    x++;\n}\n\nvoid fun2(int x) {\n    x++;\n}\n\nint main() {\n    int abc = 100, xyz = 13;\n    fun1(xyz);\n    abc = xyz;\n    fun2(abc);\n    printf(\"%d\\n\", abc);\n}\n\n","choices":["\n100\n","\n13\n","\n12\n","\n14\n"],"correct_choice":"\n14\n"},{"title":"“引用”与指针的区别是什么？","choices":["\n指针通过某个指针变量指向一个对象后，对它所指向的变量间接操作。程序中使用指针，程序的可读性差；而引用本身就是目标变量的别名，对引用的操作就是对目标变量的操作。\n","\n引用通过某个引用变量指向一个对象后，对它所指向的变量间接操作。程序中使用引用，程序的可读性差；而指针本身就是目标变量的别名，对指针的操作就是对目标变量的操作。\n","\n指针比引用更节省存储空间\n","\n以上都不正确\n"],"correct_choice":"\n指针通过某个指针变量指向一个对象后，对它所指向的变量间接操作。程序中使用指针，程序的可读性差；而引用本身就是目标变量的别名，对引用的操作就是对目标变量的操作。\n"},{"title":"C++中以下关于函数调用的说法哪个是正确的？","choices":["\n传地址后实参和形参指向不同的对象\n","\n传引用后实参和形参是不同的对象\n","\n传值后对形参的修改会改变实参的值\n","\n其他三项都不对\n"],"correct_choice":"\n其他三项都不对\n"},{"title":"  阅读程序，请选择输出结果 \n#include <iostream>\nusing namespace std;\n\nint main() {\n    int i, u[4], v[4], x, y = 10;\n    for (i = 0; i <= 3; i++) {\n        cin >> u[i];\n    }\n    v[0] = (u[0] + u[1] + u[2] + u[3]) / 7;\n    v[1] = u[0] / ((u[1] - u[2]) / u[3]);\n    v[2] = u[0] * u[1] / u[2] * u[3];\n    v[3] = v[0] * v[1];\n    x = (v[0] + v[1] + 2) - u[(v[3] + 3) % 4];\n    if (x > 10)\n        y += (v[2] * 100 - v[3]) / (u[u[0] % 3] * 5);\n    else\n        y += 20 + (v[2] * 100 - v[3]) / (u[v[0] % 3] * 5);\n    cout << x << \",\" << y << endl;\n    return 0;\n}\n\n\t\n\n\n<iostream.h>  //本例中，给定的输入数据可以避免字母为0或下标越界。输入：9 3 9 4 输出：（） \n</iostream.h>","choices":["\n-13，57\n","\n-13，60\n","\n-12，57\n","\n-12，60\n"],"correct_choice":"\n-13，57\n"},{"title":"  设已经有A,B,C,D4个类的定义，程序中A,B,C,D析构函数调用顺序为？ \nC c;\nvoid main()\n{\n    A*pa=new A();\n    B b;\n    static D d;\n    delete pa;\n}\n","choices":["\nA B C D\n","\nA B D C\n","\nA C D B\n","\nA C B D\n"],"correct_choice":"\nA B D C\n"},{"title":"  以下程序的输出结果是?  \n#include <stdio.h> main()\n{\n    char a[10]={ '1','2','3','4','5','6','7','8','9',0},*p; int i;\n    i=8;\n    p=a+i;\n    printf(\"%s\\n\",p-3); \n}\n","choices":["\n6\n","\n6789\n","\n'6'\n","\n789\n"],"correct_choice":"\n6789\n"},{"title":"  有以下程序段： \nchar *p, *q;\np = (char *)malloc(sizeof(char) * 20);\nq = p;\nscanf(“%s %s”, p, q);\nprintf(“%s %s\\n”, p, q);\n\n  若从键盘输入：abc def↙，则输出结果是（  ） ","choices":["\ndef def\n","\nabc def\n","\nabc d\n","\nd d\n"],"correct_choice":"\ndef def\n"},{"title":"  下面代码的输出是什么? \nauto fn = [](unsigned char a){ \n    cout << std::hex << (int)a << endl; \n};\nfn(-1);\n","choices":["\nff\n","\n256\n","\n-1\n","\nUndefined\n","\n0\n"],"correct_choice":"\nff\n"},{"title":"signed char a=0xe0;\nunsigned int b=a;\nunsigned char c=a;\n  下面说法正确的是：","choices":["\n(a>0 )&&(b>0)为真\n","\nc==a 为真\n","\nb的16进制为0xffffffe0\n","\n都不对\n"],"correct_choice":"\nb的16进制为0xffffffe0\n"},{"title":"一个函数定义的返回值是float，它不能在return语句中返回的值的类型是： ","choices":["\nchar\n","\nint\n","\nfloat\n","\nlong\n","\ndouble\n","\n以上皆可以\n"],"correct_choice":"\n以上皆可以\n"},{"title":"  已有变量定义和函数调用语句， \nint a=25;\nprint_value(&a);\n  则下面函数的正确输出结果是______。 \nvoid print_value(int* x)\n{\n    printf(“%x\\n”,++*x);\n}\n\n","choices":["\n25\n","\n26\n","\n19\n","\n1a\n"],"correct_choice":"\n1a\n"},{"title":"1有一种语言称为lua，里面的数字只有一种类型（number），实际上是双精度浮点数。没有各种位数的整数，如32位、64位整数等。那么关于该语言的说法错误的是?","choices":["\n该语言可以用number类型的变量作为数组下标\n","\n该语言可以表示任意32位数字整数的数字ID\n","\n该语言无法实现32位数字整数的按位与、或、异或运算\n","\n该语言可以正常进行双精度浮点数运算\n"],"correct_choice":"\n该语言可以表示任意32位数字整数的数字ID\n"},{"title":"C++语言中，有关类的初始化叙述正确的是（）","choices":["\n静态函数中不能出现this指针\n","\n可以在类定义时，对对象直接初始化\n","\n一般数据类型可以在类的外部进行初始化\n","\n静态数据类型可以在类的外部进行初始化\n"],"correct_choice":"\n静态函数中不能出现this指针\n\n静态数据类型可以在类的外部进行初始化\n"},{"title":"在下列排序算法中，哪几个算法的时间复杂度与初始排序无关()","choices":["\n插入排序\n","\n堆排序\n","\n冒泡排序\n","\n归并排序\n","\n选择排序\n"],"correct_choice":"\n堆排序\n\n归并排序\n\n选择排序\n"},{"title":"  C 语言本身不提供输入输出语句，输入和输出操作是由函数来实现的。请问这句话的说法是正确的吗？      ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"  有 如 下 程 序 段 ,int  x=23;  do { printf(\"%d\",x--);} while(!x); 该程序的输出结果是 （）。  ","choices":["\n321\n","\n23\n","\n不输出任何内容\n","\n陷入死循环\n"],"correct_choice":"\n23\n"},{"title":"  C 语言程序中,当调用函数时（）。 ","choices":["\n实参和虚参各占一个独立的存储单元\n","\n实参和虚参可以共用存储单元\n","\n可以由用户指定是否共用存储单元\n","\n计算机系统自动确定是否共用存储单元\n"],"correct_choice":"\n实参和虚参各占一个独立的存储单元\n"},{"title":"派生类的继承方式有两种，公有继承和私有继承。","choices":["\n是\n","\n否\n"],"correct_choice":"\n否\n"},{"title":"\n  !2,得到0值.说法是否正确？ \n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"  若有一下程序 \n#include <stdio.h>\nmain(){\n    int a=－11,b=10;\n    a/=b/=－4;\n    printf(\"%d %d\\n\",a,b);\n｝\n   则程序的输出结果是？ ","choices":["\n4 －3\n","\n－1 －2\n","\n5 －2\n","\n5 －3\n"],"correct_choice":"\n5 －2\n"},{"title":"\n  判断两个字符串s1和s2是否相等，应该使用____________（）\n\n\n  \n","choices":["\nif (s1= =s2)\n","\nif (s1=s2)\n","\nif (strcpy(s1, s2))\n","\nif (strcmp(s1,s2)= =0)\n"],"correct_choice":"\nif (strcmp(s1,s2)= =0)\n"},{"title":"\n  已知职工记录描述如下，在Turbo C中，系统为变量w分配（ ）字节的空间。\n\n\n  struct worker\n\n\n  {  int no;\n\n\n  char name[20];\n\n\n  char sex;\n\n\n  union\n\n\n  { int day;  int month;  int year;}birth;\n\n\n  } w; \n","choices":["\n29\n","\n20\n","\n25\n","\n6\n"],"correct_choice":"\n25\n"},{"title":"已知字符‘A‘的ASCⅡ码值是是65，且char c1=‘A’，c2=‘D’；则执行语句printf（“%d，%d\\n”，c1，c2-2）；后的输出结果是（        ）","choices":["\nA，D\n","\nA，B\n","\n65,68\n","\n65,66\n"],"correct_choice":"\n65,66\n"},{"title":"  int i,*p=&i;是正确的 C 说明。请问这句话的说法是正确的吗？ ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"  关于纯虚函数，下列表述正确的是？（    ） ","choices":["\n派生类必须实现基类的纯虚函数\n","\n纯虚函数的声明总是以“=0”结束\n","\n纯虚函数是给出实现版本（即无函数体定义）的虚函数\n","\n含有纯虚函数的类一定是派生类\n"],"correct_choice":"\n纯虚函数的声明总是以“=0”结束\n"},{"title":"Math.round(11.5)\n等于：（）","choices":["\n11\n","\n11.5\n","\n12\n","\n12.5\n"],"correct_choice":"\n12\n"},{"title":"使用malloc系统调用分配的内存是在____ 上分配的。","choices":["\n栈\n","\nbss\n","\n物理内存\n","\n堆\n"],"correct_choice":"\n堆\n"},{"title":"哪种说法是错误的","choices":["\n析构函数有且仅有一个\n","\n析构函数和构造函数一样可以有形参\n","\n析构函数的功能是用来释放一个对象\n","\n析构函数无任何函数类型\n"],"correct_choice":"\n析构函数和构造函数一样可以有形参\n"},{"title":"下面哪个指针表达式可以用来引用数组元素a[i][j][k][l]()","choices":["\n(((a+i)+j)+k)+l)\n","\n*(*(*(*(a+i)+j)+k)+l)\n","\n(((a+i)+j)+k+l)\n","\n((a+i)+j+k+l)\n"],"correct_choice":"\n*(*(*(*(a+i)+j)+k)+l)\n"},{"title":"  有以下程序 \n#include <stdio.h>\nvoid fun ( int ﹡p,int ﹡q )\n{\n    int t ;\n    t ＝ ﹡p; \n    ﹡p ＝ ﹡q; \n    ﹡q ＝ t;\n    ﹡q ＝ ﹡p;\n｝\nmain ()\n{\n    int a ＝ 0,b ＝ 9; \n    fun ( &a,&b );\n    printf ( \"%d %d＼n\",a,b);\n}\n  程序的输出结果是? ","choices":["\n9 0\n","\n0 0\n","\n9 9\n","\n0 9\n"],"correct_choice":"\n9 9\n"},{"title":"  What's the output of the following code?(3 Points) \nclass A\n{\n    public:\n    virtual void f()\n    {\n        cout<<\"A::f()\"<<endl;\n    }\n    void f() const {\n        cout<<\"A::f() const\"<<endl;\n    }\n};\nclass B : public  A\n{\n    public:\n    void f(){\n        cout<<\"B::f()\"<<endl;\n    }\n};\ng(const A* a)\n{\n    a->f();\n}\nint main()\n{\n    A* a = new B();\n    a->f();\n    g(a);\n    delete a ;\n}\n\n\n","choices":["\nB::f() B::f()const\n","\nB::f() A::f()const\n","\nA::f() B::f()const\n","\nA::f() A::f()const\n"],"correct_choice":"\nB::f() A::f()const\n"},{"title":"  假设下面的函数foo会被多线程调用，那么让i、j、k三个变量哪些因为线程间共享访问需要加锁保护.() \nint i = 0;\nvoid foo()\n{\n\tstatic int j = 0;\n\tint k = 0;\n\ti++; j++; k++;\n}","choices":["\ni和j\n","\ni,j,k都需要\n","\ni\n","\nj和k\n"],"correct_choice":"\ni和j\n"},{"title":"看以下代码：\n A *pa = new A[10];\n delete pa;\n 则类A的构造函数和析构函数分别执行了几次（）","choices":["\n1   1\n","\n10   10\n","\n1   10\n","\n10   1\n"],"correct_choice":"\n10   1\n"},{"title":"以下程序是用辗转相除法来计算两个非负数之间的最大公约数： long long gcd(long long x, long long y) {\n    if (y == 0)\n        return x;\n    else\n        return gcd(y, x % y);\n}\n\n  我们假设x,y中最大的那个数的长度为n，x>y，基本运算时间复杂度为O(1)，那么该程序的时间复杂度为（ ） \n  \n","choices":["\nO(1)\n","\nO(logy)\n","\nO(n)\n","\nO(x)\n"],"correct_choice":"\nO(logy)\n"},{"title":"以二进制方式打开一个文件的方法是？","choices":["\nFILE *f = fwrite( \"test.bin\", \"b\" );\n","\nFILE *f = fopenb( \"test.bin\", \"w\" );\n","\nFILE *f = fopen( \"test.bin\", \"wb\" );\n","\nFILE *f = fwriteb( \"test.bin\" );\n"],"correct_choice":"\nFILE *f = fopen( \"test.bin\", \"wb\" );\n"},{"title":"  C++是否支持嵌套函数定义，如下代码所示？ \nfun1() { \n    fun2() { \n        fun3() { \n        } \n    }\n}","choices":["\n允许\n","\n不允许\n"],"correct_choice":"\n不允许\n"},{"title":"下列代码的输出结果是\nint i = -1;\nunsigned j = 1;\nif (j > i)\n    printf(\" (j>i)成立\\n\");\nelse\n    printf(\" (j>i)不成立\\n\");\n\nif (i < j)\n    printf(\" (i<j)成立\\n\");\nelse\n    printf(\" (i<j)不成立\\n\");\n\n","choices":["\n(j>i)成立,(i<j)成立\n","\n(j>i)不成立,(i<j)成立\n","\n(j>i)成立,(i<j)不成立\n","\n(j>i)不成立，(i<j)不成立\n"],"correct_choice":"\n(j>i)不成立，(i<j)不成立\n"},{"title":"\n   某计算机存储器按字节变址，采用小端方式存放数据。假定编译器规定int 型和 short 型长度分别为 32 位和 16\n    位，并且数据按边界对齐存储。某 C 语言程序段如下：\n\n\n  \n    \n    \n  \n\n\n  \n    若record 变量的首地址为 0xC008，则地址 0xC008 中内容及 record.c 的地址是（ ）。\n  \n\n\n  \n    \n  \n","choices":["\n0x00、 0xC00D\n","\n0x00、 0xC00E\n","\n0x11、 0xC00D\n","\n0x11、 0xC00E\n"],"correct_choice":"\n0x11、 0xC00E\n"},{"title":"  阅读以下代码： \nclass parent  \n{  \n    public:  \n    virtual void output();  \n};  \nvoid parent::output()  \n{  \n    printf(\"parent!\");  \n}  \n      \nclass son : public parent  \n{  \n    public:  \n    virtual void output();  \n};  \nvoid son::output()  \n{  \n    printf(\"son!\");  \n}\nson s; \nmemset(&s , 0 , sizeof(s)); \nparent& p = s; \np.output(); \n   执行结果是（） ","choices":["\nparent!\n","\nson!\n","\nson!parent!\n","\n没有输出结果，程序运行出错\n"],"correct_choice":"\n没有输出结果，程序运行出错\n"},{"title":"  在下面循环语句中循环体执行的次数为（    ）。 \nint i=0; do i++; while(i*i<10);\n\n","choices":["\n4\n","\n3\n","\n5\n","\n2\n"],"correct_choice":"\n4\n"},{"title":"\n  若有语句：int s[3][3],(*p)[3];p=s;则对s数组元素的引用形式正确的是__________\n\n\n  \n","choices":["\np+1\n","\n*(p+1)\n","\np[1][2]\n","\n*(p+1)+2\n"],"correct_choice":"\np[1][2]\n"},{"title":"  以下叙述中不正确的是（）。 ","choices":["\n一个好的程序应该有详尽的注释\n","\n在 C 程序中，赋值运算符的优先级最低\n","\n在 C 程序中，j++;是一条赋值语句\n","\nC程序中的#include和#define均不是C语句\n"],"correct_choice":"\n在 C 程序中，赋值运算符的优先级最低\n"},{"title":"  以下程序的输出结果为（） \n\n     #include <stdio.h>  \n  \n    \n  \n     void main()  \n     {  \n  int a[8] = {1, 3, 2, 4}, i, d = 0;  \n  for (i = 0; a[i] % 2; i++) d += a[i];  \n  printf(\"%d\\n\", d);  \n     }  \n","choices":["\n0\n","\n2\n","\n3\n","\n4\n"],"correct_choice":"\n4\n"},{"title":"  以下程序的输出结果为（）。  main()\n{int a=1,b=2,c=3,d=4,e=5;\nprintf(\"%d\\n\",func((a+b,b+c,c+a),(d+e)));\n}\nint func(int x,int y)\n{\nreturn(x+y);\n} ","choices":["\n15\n","\n13\n","\n9\n","\n函数调用出错\n"],"correct_choice":"\n13\n"},{"title":"\n  私有继承中基类的私有成员在派生类中还是私有的.说法是否正确？ \n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"x > 0 && x <= 10 的相反表达式为（    ）。","choices":["\nx <= 0 || x > 10\n","\nx <= 0 && x > 10\n","\nx <= 0 || x <= 10\n","\nx > 0 && x > 10\n"],"correct_choice":"\nx <= 0 || x > 10\n"},{"title":"  若有说明 int a[3][4];则对 a 数组元素的正确引用是（）。  ","choices":["\na[2][4]\n","\na[1,3]\n","\na[1+1][0]\n","\na(2)(1)\n"],"correct_choice":"\na[1+1][0]\n"},{"title":"在下面有关类声明的说法中，正确的是（    ）","choices":["\n可以在类的声明中给数据成员赋初值\n","\n数据成员的数据类型可以是 register\n","\nprivate、public、protected 可以按任意顺序出现\n","\n没有使用 private、public、protected 定义的数据成员是公有成员。\n"],"correct_choice":"\nprivate、public、protected 可以按任意顺序出现\n"},{"title":"以下程序的输出结果是：\n#define M(x,y,z) x*y+z\nmain()\n{\n       int a=1, b=2, c=3;\n       printf(\"%d\\n\",M(a+b,b+c,c+a));\n}","choices":["\n19\n","\n17\n","\n15\n","\n12\n"],"correct_choice":"\n12\n"},{"title":"若变量已正确定义，for( x = 0,y = 0;( y! =99 && x < 4); x + +){ //循环体内为空}，则以上for循环执行多少次？","choices":["\n执行3次\n","\n执行4次\n","\n执行无限次\n","\n执行次数不定\n"],"correct_choice":"\n执行4次\n"},{"title":"\n  假定一个类的构造函数为A(int aa,int bb) {a=aa--;b=a*bb;},则执行A×(4,5);语句后，x.a和x.b的值分别为（）\n","choices":["\n3和15\n","\n20和5\n","\n5和4\n","\n4和20\n"],"correct_choice":"\n4和20\n"},{"title":"关于C++/JAVA类中static 成员和对象成员的说法正确的是？","choices":["\nstatic 成员变量在对象构造时生成\n","\nstatic 成员函数在对象成员函数中无法调用\n","\n虚成员函数不可能是static 成员函数\n","\nstatic 成员函数不能访问static 成员变量\n"],"correct_choice":"\n虚成员函数不可能是static 成员函数\n"},{"title":"关于引用以下说法错误的是（）。","choices":["\n引用必须初始化，指针不必\n","\n引用初始化以后不能被改变，指针可以改变所指的对象\n","\n不存在指向空值的引用，但是存在指向空值的指针\n","\n一个引用可以看作是某个变量的一个“别名”\n","\n引用传值，指针传地址\n","\n函数参数可以声明为引用或指针类型\n"],"correct_choice":"\n引用传值，指针传地址\n"},{"title":"下面关于虚函数和函数重载的叙述不正确的是","choices":["\n虚函数不是类的成员函数\n","\n虚函数实现了C++的多态性\n","\n函数重载允许非成员函数，而虚函数则不行\n","\n函数重载的调用根据参数的个数、序列来确定，而虚函数依据对象确定\n"],"correct_choice":"\n虚函数不是类的成员函数\n"},{"title":"void recursive(int n, int m, int o)\n {\n     if (n <= 0)\n     {\n         printf(\"%d,%d\\n\", m, o);\n     }\n     else\n     {\n         recursive(n - 1, m + 1, o);\n         recursive(n - 1, m, o + 1);\n     }\n }\n  以上函数的时间复杂度（） ","choices":["\nO(n*m*o)\n","\nO(n^2*m^2)\n","\nO(2^n)\n","\nO(n!)\n"],"correct_choice":"\nO(2^n)\n"},{"title":"  有以下程序  #include <stdio.h>\n#include <stdlib.h>\nvoid fun ( double *pl,double *p2,double *s)\n{\n    s ＝ ( double*) calloc ( 1,sizeof(double));\n    *s ＝ *pl + *(p2+1);\n｝\nmain( )\n{\n    double a [2] ＝ ｛1.1,2.2｝,b [2] ＝ ｛10.0,20.0｝, *s ＝ a;\n    fun (a,b,s);\n    printf ( \"%5.2f\\n\",* s) ;\n｝   程序的输出结果是? ","choices":["\n21.10\n","\n11.10\n","\n12.10\n","\n1.10\n"],"correct_choice":"\n1.10\n"},{"title":"选择填空： #include \nvoid test(void *data) {\n    unsigned int value = （此处应填入）\n    printf(\"%u\", value);\n}\nusing namespace std;\nint main() {\n    unsigned int value = 10;\n    test(&value);\n    return 0;\n}\n","choices":["\n*data\n","\n(unsigned int)(*data)\n","\n(unsigned*)data\n","\n*((unsigned int *)data)\n"],"correct_choice":"\n*((unsigned int *)data)\n"},{"title":"在64位系统下，分别定义如下两个变量：char *p[10]; char(*p1)[10];请问，sizeof(p)和sizeof (p1)分别值为____。","choices":["\n4,40\n","\n80,8\n","\n10,10\n","\n8,80\n","\n40,4\n","\n4,4\n"],"correct_choice":"\n80,8\n"},{"title":"如果要实现一个多线程(非MFC)程序, 选择多线程CRT, 创建线程的时候应该用CreateThread还是_beginthreadex()？","choices":["\nCreateThread\n","\n_beginthreadex\n","\n一样\n","\n和具体机器配置相关\n"],"correct_choice":"\n_beginthreadex\n"},{"title":"计算机假定要对类AB定义加号操作符重载成员函数，实现两个AB类对象的加法，并返回相加结果，则该成员函数的声明语句为（）","choices":["\nAB operator+(AB& A,AB& B)\n","\nAB &operator+(AB A)\n","\nAB operator+(AB &A)\n","\nAB *operator+(AB A)\n"],"correct_choice":"\nAB operator+(AB &A)\n"},{"title":"In C++, which of the following keyword(s) can be used on both a variable\nand a function?","choices":["\nstatic\n","\nvirtual\n","\nextern\n","\ninline\n","\nconst\n"],"correct_choice":"\nstatic\n\nextern\n\nconst\n"},{"title":"已知数组D的定义是int D[4][8];,现在需要把这个数组作为实参传递给一个函数进行处理。下列说明汇总可以作为对应的形参变量说明的是（）。","choices":["\nint D[4][]\n","\nint *s[8]\n","\nint(*s)[8]\n","\nint D[][8]\n"],"correct_choice":"\nint(*s)[8]\n\nint D[][8]\n"},{"title":"  从一个数据文件中读入以换行符结束的一行字符串的函数为（   ）  ","choices":["\ngets()\n","\nfgets()\n","\ngetc()\n","\nfgetc()\n"],"correct_choice":"\nfgets()\n"},{"title":"以下能对二维数组a进行正确初始化的语句是（        ）","choices":["\nint a[2][ ]=({1,0,1},{5,2,3});\n","\nint a[ ][3]={(1,2,3),(4,5,6)};\n","\nint a[2][4]=({1,2,3},{4,5},{6});\n","\nint a[ ][3]={(1,0,1)(),(1,1)};\n"],"correct_choice":"\nint a[ ][3]={(1,2,3),(4,5,6)};\n"},{"title":"  char a[]={'a','b','c'};char b[]={\"abc\"};数组a和数组 b 占用的内存空间大小不一样。请问这句话的说法是正确的吗？  ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"  若有 int a[5] ， *p=a ；则 p+2 表示第 2 个元素的地址。（首元素从0开始）     ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"  C 语言的 if 语句嵌套时，if 与 else 的配对关系是（）。  ","choices":["\n每个else总是与它上面的最近的未配对的if配对\n","\n每个 else 总是与最外层的 if 配对\n","\n每个 else 与 if 的配对是任意的\n","\n每个 else 总是与它上面的 if 配对\n"],"correct_choice":"\n每个else总是与它上面的最近的未配对的if配对\n"},{"title":"  以数组名作函数参数时,实参数组与形参数组都不必定义长度,因此实参与形参的结合方式是地址结合,与数组长度无关。请问这句话的说法是正确的吗？  ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"  以下选项中可作为C语言合法常量的是(     )  。   ","choices":["\n-80.\n","\n-080\n","\n-8e1.0\n","\n-80.0e\n"],"correct_choice":"\n-80.\n"},{"title":"  已知 char c=48;int i=1,j=10;执行语句j=!(c>j)&&i++;则 i 和 j 的值分别是1和0。请问这句话是正确的吗？  ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"类定义的外部，一定可以被访问的成员有（ ）。","choices":["\n所有类成员\n","\nprivate或protected的类成员\n","\npublic的类成员\n","\npublic或private的类成员\n"],"correct_choice":"\npublic的类成员\n"},{"title":"  以下程序段的执行结果是（）。    double  x;x=218.82631;    printf(\"%-6.2e\\n\",x);     ","choices":["\n输出格式描述符的域宽不够,不能输出\n","\n输出为21.38e+01\n","\n输出为2.2e+02\n","\n输出为-2.14e2\n"],"correct_choice":"\n输出为2.2e+02\n"},{"title":"  数组名作为实参数传递给函数时,数组名被处理为（）。  ","choices":["\n该数组的长度\n","\n该数组的元素个数\n","\n该数组的首地址\n","\n该数组中各元素的值\n"],"correct_choice":"\n该数组的首地址\n"},{"title":"  以下数据中,不正确的数值或字符常量是（）。 ","choices":["\n8.9e1.2\n","\n10\n","\n0xff00\n","\n82.5\n"],"correct_choice":"\n8.9e1.2\n"},{"title":"有以下程序\nmain( )\n{ \n   int sum,pad,pAd;\n   sum = pad = 5; \n   pAd = + + sum,pAd + +,+ + pad; \n   printf(\"%d\\n\",pad); \n}\n  程序的输出结果是","choices":["\n5\n","\n6\n","\n7\n","\n8\n"],"correct_choice":"\n6\n"},{"title":"哪些是将一个十六进制赋值给一个long型变量()","choices":["\nlong number=0345L\n","\nlong number=345L\n","\nlong number=0345\n","\nlong number=0x345L\n"],"correct_choice":"\nlong number=0x345L\n"},{"title":"  若有以下程序 \n#include <stdio.h>\n#define SUB( X,Y ) (X+1)*Y\nmain( )\n{ \n    int a=3,b=4;\n    printf( \"%d\\n\" ,SUB( a++ ,b++ ) );\n}\n  程序运行后的输出结果是? ","choices":["\n25\n","\n20\n","\n12\n","\n16\n"],"correct_choice":"\n16\n"},{"title":"若希望当A的值为奇数时，表达式的值为“真”，A的值为偶数 表达式的值为“假”。则以下不能满足要求的表达式是：","choices":["\nA%2==1\n","\n!(A%2==0)\n","\n!(A%2)\n","\nA%2\n"],"correct_choice":"\n!(A%2)\n"},{"title":"下面关于数组的初始化正确的是：","choices":["\nchar str[2] = {\"a\",\"b\"};\n","\nchar str[2][3]={\"a\",\"b\"};\n","\nchar str[2][3]={{'a','b'},{'e','d'},{'e','f'}};\n","\nchar str[] = {\"a\", \"b\"};\n"],"correct_choice":"\nchar str[2][3]={\"a\",\"b\"};\n"},{"title":"  为了建立如图所示的存储结构(即每个结点含两个域,data是数据域,next是指向结点的指针域),则在[] 处应填入选项是 \n\n   struct link   \n   {   \n       char data;  \n       [];   \n   } node;  \n","choices":["\nlink next;\n","\nstruct link * next;\n","\nlink * next;\n","\nstruct link next;\n"],"correct_choice":"\nstruct link * next;\n"},{"title":"  下面代码会输出() \n\n  int main(){\n int a[4]={1,2,3,4};\n int *ptr=(int*)(&a+1);\n printf(\"%d\",*(ptr-1));\n}\n","choices":["\n4\n","\n1\n","\n2\n","\n3\n"],"correct_choice":"\n4\n"},{"title":"  已知下面的class层次,其中每一个class都定义有一个default constructor和一个virtual destructor;\n\nclass X{...};\nclass A{...};\nclass B:public A{...};\nclass C:public B{...};\nclass D:public X,public C{...};\n  下面()执行dynamic_cast会失败 ","choices":["\nA *pa=new D;X *px=dynamic_cast<X*>(pa);\n","\nD *pd=new D;A *pa=dynamic_cast<A*>(pd);\n","\nB *pb=new B;D *pd=dynamic_cast<D*>(pb);\n","\nA *pa=new C;C *pc=dynamic_cast<C*>(pa);\n"],"correct_choice":"\nB *pb=new B;D *pd=dynamic_cast<D*>(pb);\n"},{"title":"()是面向对象程序设计语言中的一种机制。这种机制实现了方法的定义与具体的对象无关，而对方法的调用则可以关联于具体的对象。","choices":["\n继承\n","\n模板\n","\n对象的自身引用\n","\n动态绑定\n"],"correct_choice":"\n动态绑定\n"},{"title":"\n  有如下类定义：\n\n\n\tclass A\n{\npublic:\n    int fun1();\n    virtual void fun2();\nprivate:\n    int _a1;\n    static int _a2;\n};\nclass B: public A\n{\npublic:\n    virtual void fun2();\n};\n\n\n\n  请问sizeof(B)的值为： ","choices":["\n20\n","\n16\n","\n12\n","\n8\n"],"correct_choice":"\n8\n"},{"title":"如果友元函数重载一个运算符时，其参数表中没有任何参数则说明该运算符是：","choices":["\n一元运算符\n","\n二元运算符\n","\n选项A）和选项B）都可能\n","\n重载错误\n"],"correct_choice":"\n重载错误\n"},{"title":"math.h的abs返回值()","choices":["\n不可能是负数\n","\n不可能是正数\n","\n都有可能\n","\n不可能是0\n"],"correct_choice":"\n都有可能\n"},{"title":"  设在程序中 a、b、c 均被定义成整型，所赋的值都大于 1，则下列 C++ 表达式能正确表示右图所示代数式的是(    )。（假设a*b*c不超出整型表示的范围）      ","choices":["\n1.0/(a*b*c)\n","\n1/(a*b*c)\n","\n1/a/b/(float)c\n","\n1.0/a/b/c\n"],"correct_choice":"\n1.0/(a*b*c)\n\n1.0/a/b/c\n"},{"title":"关于内联函数正确的是（）","choices":["\n类的私有成员函数不能作为内联函数\n","\n在所有类说明中内部定义的成员函数都是内联函数\n","\n类的保护成员函数不能作为内联函数\n","\n使用内联函数的地方会在运行阶段用内联函数体替换掉\n"],"correct_choice":"\n在所有类说明中内部定义的成员函数都是内联函数\n"},{"title":"参照代码\nclass ClassA { \npublic: \n    virtual ~ ClassA() {\n    }\n    virtual void FunctionA() {\n    }\n};\nclass ClassB { \npublic: \n    virtual void FunctionB() {\n    }\n};\nclass ClassC: public ClassA, public ClassB { \npublic: \n};\nClassC aObject;\nClassA* pA = &aObject;\nClassB* pB = &aObject;\nClassC* pC = &aObject;\n\n 下面那一个语句是不安全的","choices":["\ndelete pA\n","\ndelete pB\n","\ndelete pC\n"],"correct_choice":"\ndelete pA\n\ndelete pB\n\ndelete pC\n"},{"title":"在Turbo C中，整型数据在内存中占2个字节。（）","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"  在下面的do-while循环语句中，其循环体语句被执行的次数为（   ）。     int i=0; do i++; while(i<10);  ","choices":["\n8\n","\n9\n","\n10\n","\n11\n"],"correct_choice":"\n10\n"},{"title":"  以下标识符中,不能作为合法的 C 用户定义标识符的是（）。  ","choices":["\na3_b3\n","\nvoid\n","\n_123\n","\nIF\n"],"correct_choice":"\nvoid\n"},{"title":"  若有说明:int a[][3]={1,2,3,4,5,6,7};则 a 数组第一维的大小是（）。  ","choices":["\n2\n","\n3\n","\n4\n","\n无确定值\n"],"correct_choice":"\n3\n"},{"title":"  在函数调用过程中，如果函数funA调用了函数 funB,函数funB又调用了函数funA，则(   )。  ","choices":["\n称为函数的直接递归调用\n","\n称为函数的间接递归调用\n","\n称为函数的循环调用\n","\nC语言中不允许这样的递归调用\n"],"correct_choice":"\n称为函数的间接递归调用\n"},{"title":"  以下运算符中，优先级最高的运算符是（）。 ","choices":["\n||\n","\n%\n","\n!\n","\n==\n"],"correct_choice":"\n!\n"},{"title":"  有以下程序 \n#include <stdio.h> \nint fun( int n )\n{\n    int a;\n    if( n == 1 ) \n        return 1 ;\n    a = n + fun(n-1);\n        return(a);\n｝\nmain()\n{ \n    printf(\" %d\\n\",fun(5));\n}\n  程序的输出结果是 ","choices":["\n9\n","\n14\n","\n10\n","\n15\n"],"correct_choice":"\n15\n"},{"title":"  已知字母a的ASCII十进制代码为97,则执行下列语句后的输出结果为（）。     char a='a'; a--;    printf(\"%d,%c\\n\",a+'2'-'0',a+'3'-'0');     ","choices":["\nb,c\n","\na--运算不合法,故有语法错\n","\n98,c\n","\n格式描述和输出项不匹配,输出无定值\n"],"correct_choice":"\n98,c\n"},{"title":"以下不合法的数组定义是（）","choices":["\nchar a[] = \"good\";\n","\nint s[5] = {1, 2, 3, 4};\n","\nchar s = \"good\";\n","\nchar s[] = {0, 1, 2, 3, 4};\n"],"correct_choice":"\nchar s = \"good\";\n"},{"title":"  以下#pragma预处理命令哪个是改变编译器的对齐方式（）?  ","choices":["\n#pragma comment\n","\n#pragma pack\n","\n#pragma data_seg\n","\n#pragma once\n"],"correct_choice":"\n#pragma pack\n"},{"title":"以下代码的输出结果是 int foo(int x, int y)\n{\n    if (x<=0&&y<=0) \n        return 1; \n    return 3*foo(x-1,y/2); \n} \ncout<< foo(3,5) <<endl;","choices":["\n81\n","\n27\n","\n9\n","\n3\n"],"correct_choice":"\n27\n"},{"title":"关于\"深拷贝\"，下列说法正确的是()","choices":["\n会拷贝成员数据的值和会拷贝静态分配的成员对象\n","\n只会拷贝成员数据的值\n","\n只会拷贝静态分配的成员对象\n","\n只会拷贝动态分配的成员对象\n"],"correct_choice":"\n会拷贝成员数据的值和会拷贝静态分配的成员对象\n"},{"title":"给出这样一个函数：\nstatic int calc(int a, int b)\n{\n    if (a >= b)\n        return (a == b) ? a : b;\n    else\n        return a + b + calc(a + 2, b - 1);\n}\n  计算 calc(2,7)的值","choices":["\n25\n","\n24\n","\n22\n","\n16\n"],"correct_choice":"\n24\n"},{"title":"  若有以下程序 \n#include<stdio.h>\nint f (char x){\n    return x*x%10;\n}\nmain(){\n    char a; \n    int b=0;\n    for (a=0; a<5; a+=1){\n        b =f(a);\n        printf(\"%d\",b);\n    }\n}\n  则程序的输出结果是 ","choices":["\n014916\n","\n01234\n","\n01496\n","\n00000\n"],"correct_choice":"\n01496\n"},{"title":"下列有关静态成员函数的描述中，正确的是：","choices":["\n静态数据成员可以在类体内初始化\n","\n静态数据成员不可以被类对象调用\n","\n静态数据成员不受private控制符作用\n","\n静态数据成员可以直接用类名调用\n"],"correct_choice":"\n静态数据成员可以直接用类名调用\n"},{"title":"  有以下程序 \n#include <stdio.h>\nmain()\n{ \n    int a, b;\n    for( a = 1,b = 1; a <= 100; a ++)\n    { \n        if( b >= 20) break;\n        if( b % 3 == 1)\n        { \n            b = b + 3; \n            continue;\n        }\n        b = b – 5;\n    }\n    printf(\"%d\\n\",a);\n}\n  程序的输出结果是？ ","choices":["\n10\n","\n9\n","\n8\n","\n7\n"],"correct_choice":"\n8\n"},{"title":"  在32位小端的机器上，如下代码输出是什么： \nchar array[12] = {0x01 , 0x02 , 0x03 , 0x04 , 0x05 , 0x06 , 0x07 , 0x08};     \n short *pshort = (short *)array;     \n int *pint = (int *)array;     \n int64 *pint64 = (int64 *)array;     \n printf(\"0x%x , 0x%x , 0x%llx , 0x%llx\", *pshort , *(pshort+2) , *pint64 , *(pint+2));\n\n","choices":["\n0x201 ， 0x403 ， 0x807060504030201 ， 0x0\n","\n0x201 ， 0x605 ， 0x807060504030201 ， 0x0\n","\n0x201 ， 0x605 ， 0x4030201 ， 0x8070605\n","\n0x102 ， 0x506 ， 0x102030405060708 ， 0x0\n"],"correct_choice":"\n0x201 ， 0x605 ， 0x807060504030201 ， 0x0\n"},{"title":"假定指针变量p定义为“int *p=new int(100);”，要释放p所指向的动态内存，应使用语句（ ）","choices":["\ndelete p;\n","\ndelete *p;\n","\ndelete &p;\n","\ndelete []p;\n"],"correct_choice":"\ndelete p;\n"},{"title":"  设有定义：int x ＝ 0,﹡p; 紧接着的赋值语句正确的是? \n\n  \n","choices":["\n﹡p ＝ NULL;\n","\np ＝ NULL;\n","\np ＝ x;\n","\n﹡p ＝ x;\n"],"correct_choice":"\np ＝ NULL;\n"},{"title":"  某函数申明如下： \nvoid Func(int &nVal1);\n  有int a,下面使用正确的为： ","choices":["\nFunc(a)\n","\nFunc(&a)\n","\nFunc(*a)\n","\nFunc(&(*a))\n"],"correct_choice":"\nFunc(a)\n"},{"title":"  以下代码共调用多少次拷贝构造函数： \nWidget f(Widget u)\n{  \n   Widget v(u);\n   Widget w=v;\n   return w;\n}\nmain(){\n    Widget x;\n    Widget y=f(f(x));\n}","choices":["\n1\n","\n3\n","\n5\n","\n7\n"],"correct_choice":"\n7\n"},{"title":"  turbo c环境下，下面程序运行的结果是() \nint main()\n{\n    printf(\"\\n\");\n    int a[5] = {1, 2, 3, 4, 5};\n    int *p, **k;\n    p = a;\n    k = &p;\n    printf(\"%d\", *(p++));\n    printf(\"%d\", **k);\n    return 0;\n}\n\n","choices":["\n11\n","\n21\n","\n22\n","\n12\n"],"correct_choice":"\n12\n"},{"title":"#include <iostream>       \n#include <vector>\nusing namespace std;\nint main(void)\n{\n\tvector<int>array;\n\tarray.push_back(100);\n\tarray.push_back(300);\n\tarray.push_back(300);\n\tarray.push_back(300);\n\tarray.push_back(300);\n\tarray.push_back(500);\n\tvector<int>::iterator itor;\n\tfor(itor=array.begin();itor!=array.end();itor++)\n\t{\n\t\tif(*itor==300)\n\t\t{\n\t\t\titor=array.erase(itor);\n\t\t}\n\t}\n\tfor(itor=array.begin();itor!=array.end();itor++)\n\t{\n\t\t\tcout<<*itor<<\"\";\n\t}\n  return 0;\n}\n  下面这个代码输出的是() ","choices":["\n100 300 300 300  300 500\n","\n100 3OO 300 300 500\n","\n100 300 300 500\n","\n100 300 500\n","\n100 500\n","\n程序错误\n"],"correct_choice":"\n100 300 300 500\n"},{"title":"关于struct和class，下列说法正确的是（）","choices":["\nstruct的成员默认是public，class的成员默认是private\n","\nstruct不能继承，class可以继承\n","\nstruct可以有无参构造函数\n","\nstruct的成员变量只能是public\n"],"correct_choice":"\nstruct的成员默认是public，class的成员默认是private\n\nstruct可以有无参构造函数\n"},{"title":"有哪几种情况只能用intialization list 而不能用assignment?","choices":["\n当类中含有const成员变量\n","\n基类无默认构造函数时，有参的构造函数都需要初始化。\n","\n当类中含有reference成员变量\n","\n当类中含有static成员变量\n"],"correct_choice":"\n当类中含有const成员变量\n\n基类无默认构造函数时，有参的构造函数都需要初始化。\n\n当类中含有reference成员变量\n"},{"title":"下面有关volatile说法正确的有？","choices":["\n当读取一个变量时，为提高存取速度，编译器优化时有时会先把变量读取到一个寄存器中；以后再取变量值时，就直接从寄存器中取值\n","\n优化器在用到volatile变量时必须每次都小心地重新读取这个变量的值，而不是使用保存在寄存器里的备份\n","\nvolatile适用于多线程应用中被几个任务共享的变量\n","\n一个参数不可以既是const又是volatile\n"],"correct_choice":"\n当读取一个变量时，为提高存取速度，编译器优化时有时会先把变量读取到一个寄存器中；以后再取变量值时，就直接从寄存器中取值\n\n优化器在用到volatile变量时必须每次都小心地重新读取这个变量的值，而不是使用保存在寄存器里的备份\n\nvolatile适用于多线程应用中被几个任务共享的变量\n"},{"title":"下面有关函数模板和类模板的说法正确的有？","choices":["\n函数模板的实例化是由编译程序在处理函数调用时自动完成的\n","\n类模板的实例化必须由程序员在程序中显式地指定\n","\n函数模板针对仅参数类型不同的函数\n","\n类模板针对仅数据成员和成员函数类型不同的类\n"],"correct_choice":"\n函数模板的实例化是由编译程序在处理函数调用时自动完成的\n\n类模板的实例化必须由程序员在程序中显式地指定\n"},{"title":"\n  在同一个源文件中，外部变量与局部变量同名，则在局部变量的作用范围内，外部变量不起作用 \n","choices":["\nTURE\n","\nFAULT\n"],"correct_choice":"\nTURE\n"},{"title":"\n  int x,a[10]={0,1,2},*p=a;x=*(p+2);此语句将a[2]赋值给变量x。是否正确？ \n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"  C 语言中不可以嵌套的是（）。 ","choices":["\n函数调用\n","\n函数定义\n","\n循环语句\n","\n选择语句\n"],"correct_choice":"\n函数定义\n"},{"title":"  有以下程序  #include <stdio.h>\nchar fun(char *c)\n{\n     if(*c<='Z'&& *c>='A') *c-='A'-'a'; return *c;\n}\nmain()\n{\n    char s[81],*p=s;\n    gets(s);\n    while(*p)\n    {\n        *p = fun(p);\n        putchar( *p);\n        p++;\n    }\n    printf(\"\\n\");\n}   若运行时从键盘上输入OPEN THE DOOR<回车>,程序的输出结果是? ","choices":["\nOPEN THE DOOR\n","\noPEN tHE dOOR\n","\nopen the door\n","\nOpen The Door\n"],"correct_choice":"\nopen the door\n"},{"title":"  若 x=2,y=3则 x&y 的结果是（）。 ","choices":["\n0\n","\n2\n","\n3\n","\n5\n"],"correct_choice":"\n2\n"},{"title":"  若 char a[10];已正确定义,以下语句中不能从键盘上给 a 数组的所有元素输入值的语句是（）。  ","choices":["\ngets(a);\n","\nscanf(\"%s\",a);\n","\nfor(i=0;i<10;i++)a[i]=getchar();\n","\na=getchar();\n"],"correct_choice":"\na=getchar();\n"},{"title":"  在 C 语言中，形参的缺省存储类是（）。 ","choices":["\nauto\n","\nregister\n","\nstatic\n","\nextern\n"],"correct_choice":"\nauto\n"},{"title":"  若有 int *p=(int *)malloc(sizeof(int));则向内存申请到内存空间存入整数123的语句为（）。  ","choices":["\nscanf(\"%d\",p);\n","\nscanf(\"%d\",&p);\n","\nscanf(\"%d\",*p);\n","\nscanf(\"%d\",**p);\n"],"correct_choice":"\nscanf(\"%d\",p);\n"},{"title":"对于32位系统，定义 int **a[3][4], 则变量占有的内存空间为：_____","choices":["\n12\n","\n24\n","\n48\n","\n96\n"],"correct_choice":"\n48\n"},{"title":"有语句char str[] = \"abcde\";请问表达式sizeof(str)的值是（） ","choices":["\n1\n","\n4\n","\n5\n","\n6\n"],"correct_choice":"\n6\n"},{"title":"  下面程序的运行结果是：  #define N 2\n#define M N+1\n#define NUM (M+1)*M/2\nmain()\n{\n    printf(\"%d\\n\",NUM);\n} ","choices":["\n4\n","\n9\n","\n8\n","\n6\n"],"correct_choice":"\n8\n"},{"title":"  有以下程序 \n#include <stdio. h>\nmain()\n{ \n    int a[ 5 ] = {2,4,6,8,10}, * p, * * k;\n    p = a; k = &p;\n    prtintf(\"%d \" , * (p + +));\n    printf(\"%d\\n\", * * k);\n}\n  程序运行后的输出结果是？ ","choices":["\n4 6\n","\n4 4\n","\n2 2\n","\n2 4\n"],"correct_choice":"\n2 4\n"},{"title":"给定下列程序，那么执行printf(\"%d\\n\", foo(20, 13));的输出结果是________。\nint foo(int x, int y){\n    if (x <= 0 || y <= 0) \n        return 1; \n    return 3 * foo( x-6, y/2 ); \n}\n\n  \n","choices":["\n3\n","\n9\n","\n27\n","\n81\n"],"correct_choice":"\n81\n"},{"title":"对于#include   <filename.h> 和 #include “filename.h”，以下说法错误的是（  ）。","choices":["\n#include <filename.h>只搜索标准库路径\n","\n#include “filename.h”只搜索用户工作路径\n","\n#include <filename.h>搜索范围比#include “filename.h”小\n","\n两者可能等价\n"],"correct_choice":"\n#include “filename.h”只搜索用户工作路径\n"},{"title":"处理a.html文件时，以下哪行伪代码可能导致内存越界或者抛出异常（）\n         int totalBlank = 0;\n         int blankNum = 0;\n         int taglen = page.taglst.size();\nA       for(int i = 1; i < taglen-1; ++i)\n        {\n                 //check blank\nB             while(page.taglst[i] == \"<br>\" && i < taglen)\n               {\nC                       ++totalBlank;\nD                       ++i;\n               }\nE             if(totalBlank > 10)\nF                      blankNum += totalBlank;\nG             totalBlank = 0;\n        }\n  注意：以下代码中taglen是html文件中存在元素的个数，a.html中taglen的值是15，page.taglst[i]取的是a.html中的元素，例如page.taglst[1]的值是<html>\n  a.html的文件如下：\n  <html> <title>test</title>\n  <body> <div>aaaaaaa</div> </body>\n  </html> <br> <br> <br>\n  <br> <br> ","choices":["\nA\n","\nB\n","\nC\n","\nD\n","\nE\n","\nF\n","\nG\n"],"correct_choice":"\nB\n"},{"title":"  在32位机器上，下列代码中 \n\n  \n   sizeof(a)的值是（） \n\n  \n","choices":["\n20\n","\n21\n","\n22\n","\n24\n","\n非以上选项\n"],"correct_choice":"\n22\n"},{"title":"  若有如下定义：              则下列表达式中，（）是正确的（无语法错误）。    ","choices":["\np.num\n","\n(*p).print()\n","\nx.num=5\n","\np->num=10\n"],"correct_choice":"\n(*p).print()\n\nx.num=5\n\np->num=10\n"},{"title":"有如下程序段： char fun(char *);\nmain()\n{\n       char *s = “one”, a[5] = {0}, (*f1)(char *) = fun, ch;\n} 则对函数fun的调用语句正确的是","choices":["\n*f1(&a);\n","\nf1（*s）;\n","\nf1(&ch);\n","\nch = *f1(s);要改成（*f1）(s)才正确\n"],"correct_choice":"\nf1(&ch);\n\nch = *f1(s);要改成（*f1）(s)才正确\n"},{"title":"下面哪些方式可以用于线程之间的同步？","choices":["\n临界区\n","\n互斥区\n","\n事件\n","\n信号量\n"],"correct_choice":"\n临界区\n\n互斥区\n\n事件\n\n信号量\n"},{"title":"  为了避免在嵌套的条件语句 if-else 中产生二义性，C 语言规定:else 子句总是与（）配对。  ","choices":["\n缩排位置相同的 if\n","\n其之前最近的 if\n","\n其之后最近的 if\n","\n同一行上的 if\n"],"correct_choice":"\n其之前最近的 if\n"},{"title":"下面错误的初始化语句是（）","choices":["\nchar str[] = \"hello\";\n","\nchar str[100] = \"hello\";\n","\nchar str[] = {'h','e','l','l','o'};\n","\nchar str[] = {'hello'};\n"],"correct_choice":"\nchar str[] = {'hello'};\n"},{"title":"若有以下定义和语句： int u=010, v= 0x10, w=10;\nprintf(“%d，%d,%d/n”,u,v,w);\n 则输出结果是：","choices":["\n8,16,10\n","\n10,10,10\n","\n8,8,10\n","\n8,10,10\n"],"correct_choice":"\n8,16,10\n"},{"title":"  以下程序的运行结果是 \nmain()\n{\n    char a[]=”programming”,b[]=”language”;\n    char *p1,*p2;\n    int l;\n    p1=a,p2=b;\n    for(i=0;i<7;i++)\n    if(*(p1+i)==*(p2+i)) \n        printf(“%c”,*(p1+i));\n}\n    \n     ","choices":["\ngm\n","\nrg\n","\nor\n","\nga\n"],"correct_choice":"\nga\n"},{"title":"  以下数组定义中不正确的是（）。 ","choices":["\nint a[2][3];\n","\nint b[][3]={0,1,2,3};\n","\nint c[100][100]={0};\n","\nint d[3][]={{1,2},{1,2,3},{1,2,3,4}};\n"],"correct_choice":"\nint d[3][]={{1,2},{1,2,3},{1,2,3,4}};\n"},{"title":"派生类的成员函数可以直接访问基类的公有成员和保护成员。","choices":["\n是\n","\n否\n"],"correct_choice":"\n否\n"},{"title":"  若x和y代表整型数，以下表达式中不能正确表示数学关系|x-y|<10的是(   )。  ","choices":["\nabs(x-y)<10\n","\nx-y>-10&& x-y<10\n","\n(x-y)<-10||!(y-x)>10\n","\n(x-y)*(x-y)<100\n"],"correct_choice":"\n(x-y)<-10||!(y-x)>10\n"},{"title":"  下列表达式中,可作为 C合法表达式的是（）。 ","choices":["\n[3,2,1,0]\n","\n(3,2,1,0)\n","\n3=2=1=0\n","\n3/2/1/0\n"],"correct_choice":"\n(3,2,1,0)\n"},{"title":"  有以下程序   main()\n{ int i=0,s=0;\n  for\n(;;)\n  {\n   \nif(i==3||i==5) continue;\n   \nif (i==6) break;\n   \ni++;\n   \ns+=i;\n  };\n \nprintf(\"%d\\n\",s);\n}   程序运行后的输出结果是(  )。  ","choices":["\n10\n","\n13\n","\n21\n","\n程序进入死循环\n"],"correct_choice":"\n程序进入死循环\n"},{"title":"若定义int a[2][3]={1,2,3,4,5,6};则值为4的数组元素是","choices":["\na[0][0]\n","\na[1][0]\n","\na[1][1]\n","\na[2][1]\n"],"correct_choice":"\na[1][0]\n"},{"title":"如果没有为一个类定义任何构造函数的情况下，下列描述正确的是（        ）","choices":["\n编译器总是自动创建一个不带参数的构造函数\n","\n这个类没有构造函数\n","\n这个类不需要构造函数\n","\n该类不能通过编译\n"],"correct_choice":"\n编译器总是自动创建一个不带参数的构造函数\n"},{"title":"  程序进行编译时,不为形式参数分配存储空间。请问这句话的说法是正确的吗？  ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"  i最后等于多少? \nint i = 1;\nint j = i++;\nif((i>j++) && (i++ == j)) i+=j;\n","choices":["\n3\n","\n5\n","\n6\n","\n7\n"],"correct_choice":"\n5\n"},{"title":"  下面程序的输出是什么？ \nint main(void)\n {\n     int a[5] = {1, 2, 3, 4, 5};\n     int *ptr = (int *)(&a + 1);\n     printf(\"%d,%d\", *(a + 1), *(ptr - 1));\n     return 0;\n }\n","choices":["\n2 1\n","\n2 5\n","\n1 2\n","\n5 2\n"],"correct_choice":"\n2 5\n"},{"title":"  有以下程序 \n#include < stdio.h >\nmain( )\n{\n    char a[5][10] ={ \"one\", \"two\", \"three\", \"four\", \"five\"};\n    int i,j;\n    char t; \n    for ( i=0;i<2;i++)\n       for ( j=i+1;j<5;j++ )\n            if ( a[i][0] >a [j][0] )\n            {\n                 t =a[i][0];\n                 a[i][0] =a[j][0];\n                 a[j][0] =t;\n            }\n  puts(a[1]);\n}\n  程序运行后的输出结果是？ ","choices":["\nowo\n","\nfwo\n","\ntwo\n","\nfix\n"],"correct_choice":"\nfwo\n"},{"title":"在C++, 下列哪一个可以做为对象继承之间的转换","choices":["\nstatic_cast\n","\ndynamic_cast\n","\nconst_cast\n","\nreinterpret_cast\n"],"correct_choice":"\ndynamic_cast\n"},{"title":"  有以下程序 \n#include <stdio.h>\nmain(){\n    int i=0;\n    i=～i;\n    printf(\"%d\\n\",i);\n｝\n  程序运行后的输出结果是? ","choices":["\n8\n","\n0\n","\n1\n","\n-1\n"],"correct_choice":"\n-1\n"},{"title":"若要求在if后一对圆括号中表示a不等于0的关系，则能正确表示这一关系的表达式为______。","choices":["\na<>0\n","\n!a\n","\na=0\n","\na\n"],"correct_choice":"\na\n"},{"title":"哪个操作符不能作为类成员函数被重载？","choices":["\n?：\n","\n++\n","\n[]\n","\n==\n","\n*\n"],"correct_choice":"\n?：\n"},{"title":"下面代码的输出结果是?\nint main(){\n        int z,x = 5,y = -10,a = 4,b = 2;\n        z = x++ - --y * b/a;\n        printf(\"%d\\n\",z);\n        return 0;\n}\n","choices":["\n5\n","\n6\n","\n10\n","\n11\n","\n12\n"],"correct_choice":"\n10\n"},{"title":"\n  以下能对二维数组a进行正确初始化的语句是（）\n","choices":["\nint ta[2][]={{0,1,2},{3,4,5}};\n","\nint ta[][3]={{0,1,2},{3,4,5}};\n","\nint ta[2][4]={{0,1,2},{3,4},{5}};\n","\nint ta[][3]={{0,,2},{},{3,4,5}};\n"],"correct_choice":"\nint ta[][3]={{0,1,2},{3,4,5}};\n"},{"title":"下面是一段c程序：\nvoid foo(int b[][3])\n{\n   \n++b;\n   \nb[1][1]=9;\n}\nvoid main()\n{\n  \nint a[3][3]={{1,2,3},{4,5,6},{7,8,9}};\n  \nfoo(a); \n  \nprintf(“%d”,a[2][1]);\n}\n这段程序的输出是（）","choices":["\n8\n","\n9\n","\n7\n","\n以上均不对\n"],"correct_choice":"\n9\n"},{"title":"  有如下程序段： \nchar ch=-1;\nprintf(“%02x,%02x”,ch,(unsigned char)ch);\n  则输出： ","choices":["\n-1,-1\n","\nff,ff\n","\nffffffff,ff\n","\nff,ffffffff\n"],"correct_choice":"\nffffffff,ff\n"},{"title":"char* getmemory(void)\n{ \n    char p[]=”hello world”;\n    return p;\n}\nvoid test(void)\n{ \n    char *str=NULL;\n    str=getmemory(); printf(str);\n} \n\n  请问运行Test 函数会有什么样的结果？ ","choices":["\n出错\n","\n输出\"hello world\"\n","\n输出空\"\"\n","\n输出乱码\n"],"correct_choice":"\n输出乱码\n"},{"title":"下面哪些调用转换支持可变长度参数","choices":["\ncdecl\n","\nstdcall\n","\npascal\n","\nfastcal\n"],"correct_choice":"\ncdecl\n"},{"title":"  下述程序有什么问题？ \n#include   <string.h>\n#include   <stdio.h> \n#include   <stdlib.h> \nvoid getmemory(char*p)  {    \n    p=(char *) malloc(100);    \n    strcpy(p,\"hello world\");  \n}  \nint main( ) \n{    \n    char *str=NULL;    \n    getmemory(str);    \n    printf(\"%s\\n\",str);   \n    free(str);    \n    return 0;    \n} \n","choices":["\n正常输出'hello world\"\n","\n错误的操作\n","\n输出\"烫烫烫\"\n","\n程序崩溃\n"],"correct_choice":"\n错误的操作\n"},{"title":"  以下代码是否完全正确，执行可能得到的结果是____。 \n\n  class A{\n   int i;\n};\nclass B{\n   A *p;\npublic:\n   B(){p=new A;}\n   ~B(){delete p;}\n};\nvoid sayHello(B b){\n}\nint main(){\n   B b;\n   sayHello(b);\n}\n","choices":["\n程序正常运行\n","\n程序编译错误\n","\n程序崩溃\n","\n程序死循环\n"],"correct_choice":"\n程序崩溃\n"},{"title":"\n  一个C++语言程序是由\n  函数组成。说法是否正确？\n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"  假 设 所 有 变 量 均 为 整 型 , 则 表 达 式(a=2,b=3,b++,a+b)的值是5。请问这句话的说法是正确的吗？  ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"  经过下列的语句 int j,a[10],*p;定义后,下列语句中合法的是（）。  ","choices":["\np=a;\n","\np=a[5];\n","\np=a[2]+2;\n","\np=&(j+2);\n"],"correct_choice":"\np=a;\n"},{"title":"  不是 E-R 图中基本元素的有（）。 ","choices":["\n实体\n","\n属性\n","\n联系\n","\n关系\n"],"correct_choice":"\n关系\n"},{"title":"  以下程序段的功能是（） \n\n     ……  \n     int a[] = {4, 0 , 2, 3, 1}, i, j, t;  \n     for (i = 1; i < 5; i++)  \n     {  \n  t = a[i];  \n  j = i - 1;  \n  while (j >= 0 && t > a[j])  \n  {  \n  a[j+1] = a[j];  \n  j--;  \n  }  \n  a[j+1] = t;  \n     }  \n","choices":["\n对数组 a 进行插入排序(升序)\n","\n对数组 a 进行插入排序(降序)\n","\n对数组 a 进行选择排序(升序)\n","\n对数组 a 进行选择排序(降序)\n"],"correct_choice":"\n对数组 a 进行插入排序(降序)\n"},{"title":"若已有定义：int a=2，b=3，c=4；则表达式！（a+b）-c+1||c+b/2的值是（        ）","choices":["\n-2\n","\n-1\n","\n0\n","\n1\n"],"correct_choice":"\n1\n"},{"title":"\n  if(x!=y) cin>>x else cin>>y;if语句形式是否正确？\n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"C\n语言源程序的基本单位是（ ）\n","choices":["\n过程\n","\n函数\n","\n子程序\n","\n标识符\n"],"correct_choice":"\n函数\n"},{"title":"假定 char *p 指向的字符串为 \"string\" ，则 cout<< p+3 的输出结果为（  ）。","choices":["\nstring\n","\nring\n","\ning\n","\ni\n"],"correct_choice":"\ning\n"},{"title":"  下面程序段的输出结果是（） \n\n     char c[5] = {'a','b','\\0','c','\\0'};  \n     printf(\"%s\", c);  \n","choices":["\n'a''b'\n","\nab\n","\nab c\n","\n没有正确答案\n"],"correct_choice":"\nab\n"},{"title":"  假定有类AB，有相应的构造函数定义，能正确执行 \nAB a(4),b(5),c[3],*p[2]={&a,&b};\n  语句，请问执行完此语句后共调用该类的构造函数次数为___ ","choices":["\n5\n","\n4\n","\n3\n","\n9\n"],"correct_choice":"\n5\n"},{"title":"关于CSingleLock，下面说法错误的是？","choices":["\n主要是同步多个线程对一个数据类的同时访问。\n","\nCSingleLock有RAII的好处。\n","\nCSingleLock对象需要有一个从CSyncObject派生的对象存在。\n","\nCSingleLock必须要全部显示的进行unLock操作\n"],"correct_choice":"\nCSingleLock必须要全部显示的进行unLock操作\n"},{"title":"下列程序，若输入字符串abc，则函数f的功能是将字符串abc转换为*abc输出，请为横线处选择合适的程序（      ）\nvoid f(char str[5])\n{\n    int i=strlen(str)-1; \n    while(i>=0) {\n        str[i+1]=str[i];i--;\n    }\n     _________________;\n    printf(\"%s\\n\",str);\n}\n","choices":["\nstr[i+1]='*'\n","\nstr[i]='*'\n","\nstr[1]='*'\n","\nstr[i-1]='*'\n"],"correct_choice":"\nstr[i+1]='*'\n"},{"title":"整数int i = 0xFE78DA45; int k = 0xAC3189B2;则i^k的值为（）","choices":["\n0x524953f7\n","\n0xAC308800\n","\n0xFE79DBF7\n","\n0X0000001\n"],"correct_choice":"\n0x524953f7\n"},{"title":"\n下列给定程序中，函数fun的功能是：把形参a所指数组中的最小值放在元素a[0]中，接着把a所指数组中的最大值放在a[1]元素中;再把a所指数组元素中的次小值放在a[2]中，把a索取数组元素中的次大值放在a[3]，以此类推。 \n 例如:若a所指数组中的数据最初排列为：9,1,4,2,3,6,5,8,7;按规则移动后，数据排列为:1,9,2,8,3,7,4,6,5。形参n中存放a所指数组中数据的个数。\n 规定fun函数中的max存放的当前所找的最大值,px存放当前所找最大值得下标。\n请在程序的下画线处填入正确的内容并将下画线删除，使程序得出正确的结果。 \n  试题程序。 \n#include<stdio.h>\n#define N 9\nvoid fun(int a[ ], int n)\n{\n    int i, j, max, min, px, pn, t;\n    for (i = 0; i < n - 1; i += 2)\n    {\n\n        max = min = __;\n        px = pn = i;\n        for (j = i + 1; j < n; j++)\n        {\n\n            if (max <  __)\n            {\n                max = a[j];\n                px = j;\n            }\n\n            if (min > __ )\n            {\n                min = a[j];\n                pn = j;\n            }\n        }\n        if (pn != i)\n        {\n            t = a[i];\n            a[i] = min;\n            a[pn] = t;\n            if (px == i)\n                px = pn;\n        }\n        if (px != i + 1)\n        {\n            t = a[i + 1];\n            a[i + 1] = max;\n            a[px] = t;\n        }\n    }\n}\nint main( )\n{\n    int b[N] = {9, 1, 4, 2, 3, 6, 5, 8, 7};\n    printf(\"\\nThe original data:\\n\");\n    for (int i = 0; i < N; i++)\n        printf(\"% 4d\", b[i]);\n    printf(\"\\n\");\n    fun(b, N);\n    printf(\"\\nThe data after mocinng \\n\");\n    for (int i = 0; i < N; i++)\n        printf(\"% 4d\", b[i]);\n    printf(\"\\n\");\n}\n\n","choices":["\n0 a[i] a[i]\n","\na[i] a[j] a[j]\n","\n0 a[j] a[j]\n","\na[i] a[i] a[i]\n"],"correct_choice":"\na[i] a[j] a[j]\n"},{"title":"如下函数的f(1)的值为()\nint f(int n){ \n    static int i=1;\n     if(n>=5)\n         return n;\n     n=n+i;\n     i++;\n     return f(n);\n}\n\n  \n","choices":["\n5\n","\n6\n","\n7\n","\n8\n"],"correct_choice":"\n7\n"},{"title":"  如下程序 \n\n\tvoid main()\n{\n    float a = 1;\n    cout << boolalpha << ((int)a == (int &)a);\n    float b = 0;\n    cout << boolalpha << ((int)b == (int &)b);\n}\n\n\n\n  该程序输出结果为 ","choices":["\ntruetrue\n","\nfalsefalse\n","\ntruefalse\n","\nfalsetrue\n"],"correct_choice":"\nfalsetrue\n"},{"title":"  有函数定义： \nvoid test(int a){} \nvoid test(float a){} \n  则以下调用错误的是： ","choices":["\ntest(1);\n","\ntest(‘c’);\n","\ntest(2+’d’)；\n","\ntest(0.5)；\n"],"correct_choice":"\ntest(0.5)；\n"},{"title":"下列关于C语言中指针的说法错误的是：___","choices":["\n指针的值是一个地址\n","\n非法指针是指该指针的值不是一个已经分配的内存地址\n","\n两个指向同类型地址的指针之间做减法一般是没有意义的\n","\n指针的指针占用的内存空间和其他指针占用的内存空间相同\n"],"correct_choice":"\n非法指针是指该指针的值不是一个已经分配的内存地址\n\n两个指向同类型地址的指针之间做减法一般是没有意义的\n"},{"title":"以下哪些做法是不正确或者应该极力避免的：【多选】（ ）","choices":["\n构造函数声明为虚函数\n","\n派生关系中的基类析构函数声明为虚函数\n","\n构造函数中调用虚函数\n","\n析构函数中调用虚函数\n"],"correct_choice":"\n构造函数声明为虚函数\n\n构造函数中调用虚函数\n\n析构函数中调用虚函数\n"},{"title":"C语言主要是借助以下哪种手段来实现程序模块化？","choices":["\n定义函数\n","\n定义常量和外部变量\n","\n使用丰富的数据类型\n","\n使用三种基本结构语句\n"],"correct_choice":"\n定义函数\n"},{"title":"\n  对语句：int a[10]={6,7,8,9,10};理解正确的是___________\n\n\n  \n","choices":["\n将5个初值依次赋给a[1]至a[5]\n","\n将5个初值依次赋给a[0]至a[4]\n","\n将5个初值依次赋给a[6]至a[10]\n","\n数组长度与初值个数不同，此语句不正确\n"],"correct_choice":"\n将5个初值依次赋给a[0]至a[4]\n"},{"title":"下列关于构造函数的描述正确的是?","choices":["\n构造函数可以声明返回类型\n","\n构造函数不可以用private修饰\n","\n构造函数必须与类名相同\n","\n构造函数不能带参数\n"],"correct_choice":"\n构造函数必须与类名相同\n"},{"title":"  语句 while(!E);中的表达式!E 等价于（）。 ","choices":["\nE==0\n","\nE!=1\n","\nE!=0\n","\nE==1\n"],"correct_choice":"\nE==0\n"},{"title":"假定 AA 为一个类，int a() 为该类的一个成员函数，若该成员函数在类定义体外定义，则函数头为（   ）。","choices":["\nint AA::a()\n","\nint AA:a()\n","\nAA::a()\n","\nAA::int a()\n"],"correct_choice":"\nint AA::a()\n"},{"title":"for 循环语句能够被改写为（     ）语句","choices":["\n复合\n","\nif\n","\nswitch\n","\nwhile\n"],"correct_choice":"\nwhile\n"},{"title":"\n  下面选项中正确的赋值语句是(设 char\n      a[5],*p＝a;)（ ）\n  \n","choices":["\np=\"abcd\";\n","\na=\"abcd\";\n","\n*p=\"abcd\";\n","\n*a=\"abcd\";\n"],"correct_choice":"\np=\"abcd\";\n"},{"title":"int *p = &n;，那么*p的值是（）","choices":["\np的值\n","\np的地址\n","\nn的值\n","\nn的地址\n"],"correct_choice":"\nn的值\n"},{"title":"int (*s[10])(int) 表示的是什么？","choices":["\n指针数组，每个指针指向长度为1的int数组\n","\n指针数组，每个指针指向长度为10的int数组\n","\n函数指针数组，每个指针指向一个int func(int* param)的函数。\n","\n函数指针数组，每个指针指向一个int func(int param)的函数。\n"],"correct_choice":"\n函数指针数组，每个指针指向一个int func(int param)的函数。\n"},{"title":"关于\"while(条件表达式)循环体\",以下叙述正确的是?(假设循环体里面没有break,continue，return，goto等等语句)","choices":["\n循环体的执行次数总是比条件表达式的执行次数多一次\n","\n条件表达式的执行次数总是比循环体的执行次数多一次\n","\n条件表达式的执行次数与循环体的执行次数一样\n","\n条件表达式的执行次数与循环体的执行次数无关\n"],"correct_choice":"\n条件表达式的执行次数总是比循环体的执行次数多一次\n"},{"title":"不能把字符串\"HELLO!\"赋给数组b的语句是（）","choices":["\nchar b[10]={'H'，'E'，'L'，'L'，'O'，'!'，'\\0'};\n","\nchar b[10];b=\"HELLO!\";\n","\nchar b[10];strcpy(b，\"HELLO!\");\n","\nchar b[10]=\"HELLO!\";\n"],"correct_choice":"\nchar b[10];b=\"HELLO!\";\n"},{"title":"  以下对C语言的”指针“描述不正确的是： ","choices":["\n32位系统下任何类型指针的长度都是4个字节\n","\n指针的数据类型声明的是指针实际指向内容的数据类型\n","\n野指针是指向未分配或者已释放的内存地址\n","\n当使用free释放掉一个指针内容后，指针变量的值被置为NULL\n"],"correct_choice":"\n当使用free释放掉一个指针内容后，指针变量的值被置为NULL\n"},{"title":"  下面程序运行的结果是（）。 \n#include<stdio.h>\nvoid add(int *p)\n{\n\t(*p)++;\n\tprintf(\"%d\",*p);\n\tif (*p>5)\n\t{\n\t\treturn;\n\t}\n\tadd(p);\n}\nint main()\n{\n\tint i=0;\n\tadd(&i);\n\treturn 0;\n}","choices":["\n12345\n","\n123456\n","\n111111\n","\n未知\n"],"correct_choice":"\n123456\n"},{"title":"一个类有基类、内部有一个其他类的成员对象，构造函数的执行顺序是怎样的? ","choices":["\n基类-成员对象-自己的\n","\n基类-自己的-成员对象\n","\n成员对象-基类-自己的\n"],"correct_choice":"\n基类-成员对象-自己的\n"},{"title":" 下列选项中，会导致用户进程从用户态切换到内核的操作是?\n  I. 整数除以零  \n  II. sin( )函数调用    \n  III. read系统调用 ","choices":["\n仅 I、II\n","\n仅 I、III\n","\n仅 II 、III\n","\nI、II和III\n"],"correct_choice":"\n仅 I、III\n"},{"title":"下面哪种情况下,B不能隐式转换为A?","choices":["\nclass B:public A{}\n","\nclass A:public B{}\n","\nclass B{operator A();}\n","\nclass A{A(const B&);}\n"],"correct_choice":"\nclass A:public B{}\n"},{"title":"unsigned short A = 10; \n printf(\"~A = %u\\n\", ~A); \n char c = 128; \n printf(\"c=%d\\n\", c);\n 输出多少？","choices":["\n10   128\n","\n-11 -128\n","\n4294967285   -128\n","\n-11 128\n"],"correct_choice":"\n4294967285   -128\n"},{"title":"哪个操作符不能被重载?","choices":["\n, (逗号)\n","\n()\n","\n. (点)\n","\n[]\n","\n->\n"],"correct_choice":"\n. (点)\n"},{"title":"32位机器上，有三个类A B C定义如下, 请确定sizeof(A) sizeof(B) sizeof(C)的大小顺序.\nstruct A{\n    A() {}\n    ~A() {}\n    int m1;\n    int m2;\n};\nstruct B:A{\n    B() {}\n    ~B() {}\n    int m1;\n    char m2;\n    static char m3;\n};\nstruct C{\n    C() {}\n    virtual~C() {}\n    int m1;\n    short m2;\n};\n","choices":["\nA=B=C\n","\nA<B<C\n","\nA=C<B\n","\nA<C<B\n"],"correct_choice":"\nA<C<B\n"},{"title":"以下程序输出是____。\n#include <iostream> \nusing namespace std; \nint main(void) \n{ \n    const int a = 10; \n    int * p = (int *)(&a); \n    *p = 20; \n    cout<<\"a = \"<<a<<\", *p = \"<<*p<<endl; \n    return 0; \n} ","choices":["\n编译阶段报错运行阶段报错\n","\na = 10, *p = 10\n","\na = 20, *p = 20\n","\na = 10, *p = 20\n","\na = 20, *p = 10\n"],"correct_choice":"\na = 10, *p = 20\n"},{"title":"关于派生类，以下说法正确的有","choices":["\n从基类接收成员。\n","\n调整从基类接收的成员\n","\n在声明派生类时增加成员，它体现了派生类对基类功能的扩充。\n","\n在声明派生类时，还要自己定义派生类的构造函数。\n"],"correct_choice":"\n从基类接收成员。\n\n调整从基类接收的成员\n\n在声明派生类时增加成员，它体现了派生类对基类功能的扩充。\n\n在声明派生类时，还要自己定义派生类的构造函数。\n"},{"title":"以下多线程对int型变量x的操作，哪几个需要进行同步（）?","choices":["\nx=y\n","\n++x\n","\nx=1\n","\nx++\n"],"correct_choice":"\nx=y\n\n++x\n\nx++\n"},{"title":"C++\n中，关于\nnew\n运算符的错误的描述是？","choices":["\n使用new运算符创建的对象使用完成后会自动销毁并回收\n","\n使用运算符new创建对象数组时必须定义初始值\n","\n使用运算符new创建对象时，会调用类的构造函数\n","\n运算符new可以用来动态创建对象和对象数组\n"],"correct_choice":"\n使用new运算符创建的对象使用完成后会自动销毁并回收\n\n使用运算符new创建对象数组时必须定义初始值\n"},{"title":"定义了一维 int 型数组 a[10] 后，下面错误的引用是（）","choices":["\na[0] = 1;\n","\na[0] = 5*2;\n","\na[10] = 2;\n","\na[1] = a[2] * a[0];\n"],"correct_choice":"\na[10] = 2;\n"},{"title":"\n  设有定义: double array[10]; 表达式  sizeof(array)/sizeof(array[0])的结果是\n  array数组中元素个数。说法是否正确？\n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"\n  设有以下定义，值为5的枚举常量是（ ）。\n\n\n  enum week{sun\n\n  ，mon=4，tue，wed，thu，fri，sat}\n    w； \n","choices":["\ntue\n","\nsat\n","\nfri\n","\nthu\n"],"correct_choice":"\ntue\n"},{"title":"\n  C++语言的if语句嵌套时,if与else的配对关系是\n  每个else总是与它上面的最近的if配对。说法是否正确？\n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"\n   已知：类A中一个成员函数说明如下：\n\n\n   void Set(A&a);\n\n\n   其中，A&的含义是( )。\n\n","choices":["\n指向类A的指针为a\n","\n将a的地址值赋给变量Set\n","\na是类A对象的引用，用来作函数Set（）的参数\n","\n变量A与a按位与作为函数Set( )的参数\n"],"correct_choice":"\na是类A对象的引用，用来作函数Set（）的参数\n"},{"title":"  for(表达式1;;表达式3)可理解为 for(表达式1;1;表达式3)。请问这句话的说法是正确的吗？  ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"  以下程序运行后的输出结果是（）？   main()\n{ int p[7]={11,13,14,15,16,17,18};\n  int\ni=0,j=0;\n \nwhile(i<7 && p[i]%2==1) j+=p[i++];\n \nprintf(\"%d\\n\",j);\n}","choices":["\n23\n","\n24\n","\n25\n","\n26\n"],"correct_choice":"\n24\n"},{"title":"\n  选择表达式\n  11|10\n  的结果（本题数值均为十进制）\n","choices":["\n11\n","\n10\n","\n8\n","\n2\n"],"correct_choice":"\n11\n"},{"title":"大文件表空间中只可以包含一个数据文件。","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"  下面的程序的输出是什么？ \n#include<stdio.h>\n\nint main(void)\n{\n int n;\n char y[10] = \"ntse\";\n char *x = y;\n n = strlen(x);\n *x = x[n];\n x++;\n printf(\"x=%s\\n\",x);\n printf(\"y=%s\\n\",y);\n return 0;\n}\n\n\n","choices":["\nx=atse,y=\n","\nx=tse,y=\n","\nx=atse,y=e\n","\nx=tse,y=e\n"],"correct_choice":"\nx=tse,y=\n"},{"title":"using namespace std;\nclass Base\n{\n    int x;\n    public:\n        Base(int b): x(b) {}\n        virtual void display()\n        {\n            cout << x << endl;\n        }\n};\nclass Derived: public Base\n{\n    int y;\n    public:\n        Derived(int d): Base(d), y(d) {}\n        void display()\n        {\n            cout << y << endl;\n        }\n};\nint main()\n{\n    Base b(2);\n    Derived d(3);\n    b.display();\n    d.display();\n    Base *p = &d;\n    p->display();\n    system(\"pause\");\n    return 0;\n}\n  上面程序的输出结果是什么？ ","choices":["\n2 2 3\n","\n3 2 2\n","\n2 3 3\n","\n2 3 2\n"],"correct_choice":"\n2 3 3\n"},{"title":"C++是不是类型安全的？","choices":["\n是\n","\n不是\n"],"correct_choice":"\n不是\n"},{"title":"c++中，声明const int i,是在哪个阶段做到 i只可读的？","choices":["\n编译\n","\n链接\n","\n运行\n","\n以上都不对\n"],"correct_choice":"\n编译\n"},{"title":"class P\n{\nprivate:\n\tint ival;\npublic:\n\tP();\n\t~P();\n\tint GetVal(){\n\t\treturn ival;\n\t};\n\tvirtual int SetVal(int val)\n\t{\n\t\tival=val;\n\t};\n};\n  在32位编译器下sizof(P)为() ","choices":["\n4\n","\n8\n","\n12\n","\n16\n"],"correct_choice":"\n8\n"},{"title":"  若有定义  \ntypedef char T[10] ; \nT * a ; \n  上述定义中a的类型与下面选项中完全相同的是? \n\n  \n","choices":["\nchar a [ 10 ] ;\n","\nchar ( *a) [ 10 ] ;\n","\nchar * a ;\n","\nchar *a [ 10 ] ;\n"],"correct_choice":"\nchar ( *a) [ 10 ] ;\n"},{"title":"  程序出错在什么阶段？（ ） \n #include<iostream>\n using namespace std;\n int main(int argc, char * * argv) {\n     cout << \"welcome to sogou\" << endl;\n     return 0;\n }\n","choices":["\n编译阶段出错\n","\n运行阶段出错\n","\n编译和运行都出错\n","\n程序运行正常\n"],"correct_choice":"\n程序运行正常\n"},{"title":"  在64位操作系统上，如下数据结构占用的存储空间大小为多少字节 \nstruct A{\n   unsigned int a;\n   char b[2];\n   double c;\n   short d;\n}\n","choices":["\n12\n","\n24\n","\n20\n","\n16\n"],"correct_choice":"\n24\n"},{"title":"C++将父类的析构函数定义为虚函数，下列正确的是哪个？","choices":["\n释放父类指针时能正确释放子类对象\n","\n释放子类指针时能正确释放父类对象\n","\n这样做是错误的\n","\n以上全错\n"],"correct_choice":"\n释放父类指针时能正确释放子类对象\n"},{"title":"  代码可以通过编译吗？如果不能应该如何修改？ \ntemplate<class T> class Foo{\n        T tVar;\n    public:\n        Foo(T t) : tVar(t) { }\n};\n\ntemplate<class T> class FooDerived:public Foo<T>\n{\n};\n\nint main()\n{\n    FooDerived<int> d(5);\n    return 0;\n}\n\n","choices":["\n代码可以正确通过编译。\n","\n编译错误，FooDerived是一个继承模板类的非模板类，它的类型不能改变。\n","\n编译错误，tVal变量是一个不确定的类型。\n","\n编译错误，可以在FooDerived类中添加一个构造函数解决问题。\n"],"correct_choice":"\n编译错误，可以在FooDerived类中添加一个构造函数解决问题。\n"},{"title":"C++中关于堆和栈的说法，哪个是错误的:","choices":["\n堆的大小仅受操作系统的限制，栈的大小一般一般较小\n","\n在堆上频繁的调用new/delete容易产生内存碎片，栈没有这个问题\n","\n堆和栈都可以静态分配\n","\n堆和栈都可以动态分配\n"],"correct_choice":"\n堆和栈都可以静态分配\n"},{"title":"  分析一下这段程序的输出 \n#include<iostream>\n using namespace std;\n class B\n {\n public:\n     B()\n     {\n         cout << \"default constructor\" << \" \";\n     }\n     ~B()\n     {\n         cout << \"destructed\" << \" \";\n     }\n     B(int i): data(i)\n     {\n         cout << \"constructed by parameter\" << data << \" \";\n     } \n     private: int data;\n }; \n B Play( B b)\n {\n     return b;\n } \n int main(int argc, char *argv[])\n {\n     B temp = Play(5);\n     return 0;\n }\n","choices":["\nconstructed by parameter5  destructed  destructed\n","\nconstructed by parameter5  destructed\n","\ndefault constructor\"  constructed by parameter5 destructed\n","\ndefault constructor\"  constructed by parameter5 destructed  destructed\n"],"correct_choice":"\nconstructed by parameter5  destructed  destructed\n"},{"title":"struct s\n{\n    int x: 3;\n    int y: 4;\n    int z: 5;\n    double a;\n}\n 求sizeof(s)","choices":["\n16\n","\n32\n","\n20\n","\n24\n"],"correct_choice":"\n16\n"},{"title":"在C++中，为了让某个类只能通过new来创建（即如果直接创建对象，编译器将报错），应该（）","choices":["\n将构造函数设为私有\n","\n将析构函数设为私有\n","\n将构造函数和析构函数均设为私有\n","\n没有办法能做到\n"],"correct_choice":"\n将析构函数设为私有\n"},{"title":"  下列哪两个是等同的 \n\n  \n        int b;\n        1.const int *a = &b;\n        2.const * int a = &b;\n        3.const int* const a = &b;\n        4.int const* const a = &b;\n  \n","choices":["\n1，4\n","\n1，2\n","\n3，4\n","\n2，3\n"],"correct_choice":"\n3，4\n"},{"title":"下面描述中，错误的是（）","choices":["\n基类定义的public成员在公有继承的派生类中可见，也能在类外被访问\n","\n基类定义的public和protected成员在私有继承的派生类中可见，在类外可以被访问\n","\n基类定义的public和protected成员在保护继承的派生类中不可见\n","\n基类定义的protected成员在protected继承的派生类中可见，也能在类外被访问\n"],"correct_choice":"\n基类定义的public和protected成员在私有继承的派生类中可见，在类外可以被访问\n\n基类定义的public和protected成员在保护继承的派生类中不可见\n\n基类定义的protected成员在protected继承的派生类中可见，也能在类外被访问\n"},{"title":"  C 语言中的整型常量有3种表示方法。请问这句话的说法是正确的吗？ ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"  有以下代码：    struct A\n{\n    bool b;\n    int arr[2];\n    int i;\n    int j;\n};\nint main()\n{\n    A a;\n    a.b = false;\n    a.arr[0] = 1;\n    a.arr[1] = 2;\n    a.i = 20;\n    a.j = 30;\n    *(a.arr + 1) = 40;\n    A*p = 0;\n    unsigned int q = (unsigned int)(&p->i));\n    (*(int*)((char*)&a +q)) = -50;\n     return 0;\n}          当main函数返回之前，请问以下哪些说法是错误的：（    ）      ","choices":["\na，b的值是false\n","\narr[0]的值是1\n","\na.i的值是20\n","\na.j的值是30\n"],"correct_choice":"\na.i的值是20\n"},{"title":"  若有条件表达式 (exp)?a++:b--,则以下表达式中能完全等价于表达式(exp)的是（）。  ","choices":["\n(exp==0)\n","\n(exp!=0)\n","\n(exp==1)\n","\n(exp!=1)\n"],"correct_choice":"\n(exp!=0)\n"},{"title":"  变量p为指针变量,若p=&a,下列说法不正确的是（）。  ","choices":["\n&*p==&a\n","\n*&a==a\n","\n(*p)++==a++\n","\n*(p++)==a++\n"],"correct_choice":"\n(*p)++==a++\n"},{"title":"  若有以下程序 \n#include < stdio. h > \nvoid f( int x)\n{\n    if(x > = 10)\n    { \n        printf( \"%d - \",x%10); f(x/10 );\n    }\n    else\n        printf( \" % d\" , x);\n}\nmain()\n{ \n    int z = 123456;\n    f(z);\n}\n  则程序的输出结果是? ","choices":["\n6-5-4-3-2-1-\n","\n6-5-4-3-2-1\n","\n1-2-3-4-5-6\n","\n1-2-3-4-5-6-\n"],"correct_choice":"\n6-5-4-3-2-1\n"},{"title":"  执行下列程序后,其输出结果是（）。  main()\n{int a=9;\na+=a-=a+a;\nprintf(\"%d\\n\",a);\n} ","choices":["\n18\n","\n9\n","\n-18\n","\n-9\n"],"correct_choice":"\n-18\n"},{"title":"下列哪个语句没有开辟可容纳5个整数的空间？","choices":["\nint arr[5];\n","\nint arr(5);\n","\nint *p = new int[5];\n","\nstd :: vector v(5);\n"],"correct_choice":"\nint arr(5);\n"},{"title":"  若 ch 为 char 型变量,k 为 int 型变量(已知字符 a 的 ASCII 十进制代码为97)，则以下程序段的执行结果是（）。     ch='a'; k=12; printf(\"%x,%o,\",ch,ch,k);    printf(\"k=%%d\\n\",k); ","choices":["\n因变量类型与格式描述符的类型不匹配,输出无定值\n","\n输出项与格式描述符个数不符,输出为零值或不定值\n","\n61,141,k=%d\n","\n61,141,k=%12\n"],"correct_choice":"\n61,141,k=%d\n"},{"title":"以下代码\nchar *ptr; \nchar myString[] = \"abcdefg\"; \nptr = myString; \nptr += 5;\n\n 代码执行之后ptr指向的内容是？","choices":["\nCompiler error\n","\nf\n","\nefg\n","\ndefg\n"],"correct_choice":"\nf\n"},{"title":"下列关于一个类的静态成员的描述中，不正确的是","choices":["\n该类的对象共享其静态成员变量的值\n","\n静态成员变量可被该类的所有方法访问\n","\n该类的静态方法能访问该类的静态成员变量\n","\n该类的静态数据成员变量的值不可修改\n"],"correct_choice":"\n该类的静态数据成员变量的值不可修改\n"},{"title":"#include<iostream>\nusing namespace std;\nclass TestClass{\n\tchar x;\npublic:\n\tTestClass() { cout << 'A'; }\n\tTestClass(char c) { cout << c; }\n\t~TestClass() { cout << 'B'; }\n};\nint main() {\n\tTestClass p1, *p2;\n\tp2 = new TestClass('X');\n\tdelete p2;\n\treturn 0;\n}\n  执行这个程序的结果是（）","choices":["\nXB\n","\nAXBB\n","\nAAXB\n","\nAAXBBB\n"],"correct_choice":"\nAXBB\n"},{"title":"下列关于C/C++的宏定义，不正确的是（）","choices":["\n宏定义不检查参数正确性，会有安全隐患\n","\n宏定义的常量更容易理解，如果可以使用宏定义常量的话，要避免使用const常量\n","\n宏的嵌套定义过多会影响程序的可读性，而且很容易出错\n","\n相对于函数调用，宏定义可以提高程序的运行效率\n"],"correct_choice":"\n宏定义的常量更容易理解，如果可以使用宏定义常量的话，要避免使用const常量\n"},{"title":"采用函数重载的目的在于","choices":["\n实现共享\n","\n节约空间\n","\n提高速度\n","\n使用方便，提高可靠性\n"],"correct_choice":"\n使用方便，提高可靠性\n"},{"title":"  若有以下定义和赋值语句，则与&s[i][j]等价的是（） \nint s[2][3] = {0}, (*p)[3], i, j;\np = s;\ni = j = 1;\n\n","choices":["\n*(*(p+i)+j)\n","\n*(p[i]+j)\n","\n*(p+i)+j\n","\n(*(p+i))[j]\n"],"correct_choice":"\n*(p+i)+j\n"},{"title":"在重载一个运算符为成员函数时，其参数表中没有任何参数，这说明该运算符是 （  ）。","choices":["\n无操作数的运算符\n","\n二元运算符\n","\n前缀一元运算符\n","\n后缀一元运算符\n"],"correct_choice":"\n前缀一元运算符\n"},{"title":"  看以下代码： \nclass A \n{ \n    public: \n    ~A(); \n}; \nA::~A() \n{ \n    printf(\"delete A \"); \n}\nclass B : public A \n{ \n    public: \n    ~B(); \n}; \nB::~B() \n{ \n    printf(\"delete B \"); \n} \n  请问执行以下代码\nA *pa = new B(); \ndelete pa; \n  输出的串是（） ","choices":["\ndelete A\n","\ndelete B\n","\ndelete B delete A\n","\ndelete A delete B\n"],"correct_choice":"\ndelete A\n"},{"title":"在32位cpu上选择缺省对齐的情况下，有如下结构体定义：\nstruct A{\n\tunsigned a : 19;\n\tunsigned b : 11;\n    unsigned c : 4;\n\tunsigned d : 29;\n    char index;\n};\n则sizeof（struct A）的值为（）","choices":["\n9\n","\n12\n","\n16\n","\n20\n"],"correct_choice":"\n16\n"},{"title":"\n  float 类型（即 IEEE754 单精度浮点数格式）能表示的最大整数是（ ）。\n  \n    \n  \n","choices":["\n2^126-2^103\n","\n2^127-2^104\n","\n2^127-2^103\n","\n2^128-2^104\n"],"correct_choice":"\n2^128-2^104\n"},{"title":"  编译和执行如下c语言代码,系统将会输出什么? \n#include<stdio.h>\nint main()\n{\n\tchar c='0';\n\tprintf(\"%d %d\",sizeof(c),sizeof(char));\n\treturn 0;\n}","choices":["\n1 4\n","\n2 2\n","\n1 1\n","\n2 1\n"],"correct_choice":"\n1 1\n"},{"title":"  以下方法中哪些是内存管理的方法（）?  ","choices":["\n垃圾回收（GC）\n","\n反射\n","\n多态\n","\n引用计数\n"],"correct_choice":"\n垃圾回收（GC）\n\n反射\n\n引用计数\n"},{"title":"下面有关static类变量和实例变量的描述，正确的有？","choices":["\nstatic类变量又叫静态成员变量，它不需要创建对象就可以已经在内存中存在了\n","\n在创建实例对象的时候，内存中会为每一个实例对象的每一个非静态成员变量开辟一段内存空间，用来存储这个对象所有的非静态成员变量值\n","\nstatic类变量是所有对象共有，其中一个对象将它值改变，其他对象得到的就是改变后的结果\n","\n实例变量则属对象私有，某一个对象将其值改变，不影响其他对象\n"],"correct_choice":"\nstatic类变量又叫静态成员变量，它不需要创建对象就可以已经在内存中存在了\n\n在创建实例对象的时候，内存中会为每一个实例对象的每一个非静态成员变量开辟一段内存空间，用来存储这个对象所有的非静态成员变量值\n\nstatic类变量是所有对象共有，其中一个对象将它值改变，其他对象得到的就是改变后的结果\n\n实例变量则属对象私有，某一个对象将其值改变，不影响其他对象\n"},{"title":"std::vector::iterator重载了下面哪些运算符？","choices":["\n++\n","\n>>\n","\n*（前置）\n","\n==\n"],"correct_choice":"\n++\n\n*（前置）\n\n==\n"},{"title":"\n  下列\n  main\n  （）函数执行后的结果是（）\n\n\n  \n    \n  \n","choices":["\n17\n","\n15\n","\n16\n","\n1\n"],"correct_choice":"\n16\n"},{"title":"\n  表达式strlen（\"std\\n007\\1\\\\\"）的值是10 \n","choices":["\nTURE\n","\nFAULT\n"],"correct_choice":"\nFAULT\n"},{"title":"  有如下程序，输入数据：12345M678＜cR＞后（<CR>表示回车），x的值是（） 。        #include<stdio.h>        main(){        int x;        float y;        scanf(\"%3d%f\",&x,&y);        }     ","choices":["\n12345\n","\n123\n","\n45\n","\n345\n"],"correct_choice":"\n123\n"},{"title":"以下叙述中正确的是（）","choices":["\n对于逻辑表达式：a++ || b++，设a的值为1，则求解表达式的值后，b的值会发生改变\n","\n对于逻辑表达式：a++ && b++，设a的值为0，则求解表达式的值后，b的值会发生改变\n","\nelse不是一条独立的语句，它只是if语句的一部分\n","\n关系运算符的结果有三种：0，1，-1\n"],"correct_choice":"\nelse不是一条独立的语句，它只是if语句的一部分\n"},{"title":"  以下程序的输出结果是（ ）。   main()\n{ int\na=4,b=5,c=0,d;\nd=!a&&!b||!c;\nprintf(\"%d\\n\",d);\n}","choices":["\n1\n","\n0\n","\n非0的数\n","\n-1\n"],"correct_choice":"\n1\n"},{"title":"\n  能正确表达字母c为大写字母的C语言表达式是__________（）\n\n\n  \n","choices":["\nc>=’A’ and c<=’Z’\n","\nc>=’A’ || c<=’Z’\n","\nc>=’A’ or c<=’Z’\n","\nc>=’A’ && c<=’Z’\n"],"correct_choice":"\nc>=’A’ && c<=’Z’\n"},{"title":"  unsigned 和 void 在 C 中都是保留字。请问这句话的说法是正确的吗？ ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"  下面的代码输出是（）       ","choices":["\n1 4\n","\n4 4\n","\n1 2\n","\n4 8\n"],"correct_choice":"\n4 8\n"},{"title":"  下列程序的输出结果是（）。  main()\n{ int x=1,y=0,a=0,b=0;\nswitch(x)\n{\ncase 1:switch(y)\n{\ncase\n0:a++;break;\ncase\n1:b++;break;\n}\ncase 2:a++;b++;break;\ncase 3:a++;b++;break;\n}\nprintf(\"a=%d,b=%d\\n\",a,b);\n} ","choices":["\na=1,b=0\n","\na=2,b=1\n","\na=1,b=1\n","\na=2,b=2\n"],"correct_choice":"\na=2,b=1\n"},{"title":"int func(int a){\n  int b;\n  switch(a){\n  case 1:b=100;\n  case 2:b=200;\n  case 3:b=250;\n  default:b=0; }\n  return b;\n}\n func(1)的值是多少？","choices":["\n100\n","\n200\n","\n250\n","\n0\n"],"correct_choice":"\n0\n"},{"title":"  以下的C程序代码片段运行后c和d的值分别是多少() \n\n  int a =1,b =2;\n\n\n  int c,d;\n\n\n  c =(a&b)&&a;\n\n\n  d =(a&&b)&a;\n","choices":["\n0,0\n","\n0,1\n","\n1,0\n","\n1,1\n"],"correct_choice":"\n0,1\n"},{"title":"下列叙述正确的是：","choices":["\n预处理命令行必须位于源文件的开头\n","\n在源文件的一行上可以有多条预处理命令\n","\n宏名必须用大写字母表示\n","\n宏替换不占用程序运行时间\n"],"correct_choice":"\n宏替换不占用程序运行时间\n"},{"title":"关于中间件特点的描述.不正确的是（）","choices":["\n中间件运行于客户机/服务器的操作系统内核中，提高内核运行效率\n","\n中间件应支持标准的协议和接口\n","\n中间件可运行于多种硬件和操作系统平台上\n","\n跨越网络,硬件，操作系统平台的应用或服务可通过中间件透明交互\n"],"correct_choice":"\n中间件运行于客户机/服务器的操作系统内核中，提高内核运行效率\n"},{"title":"若定义了int m=1,n=2;在执行了--m&&n++;++m||n++;这2条语句后，n的值为？","choices":["\n2\n","\n3\n","\n4\n","\n1\n"],"correct_choice":"\n2\n"},{"title":"  若有以下程序段 \nchar str[4][12]={\"aa\", \"bbb\", \"cccc\", \"d\"},*strp[4];\nint i;\nfor(i=0;i<4;i++) \n    strp[i]=str[i];\n  不能正确引用字符串的选项是 ","choices":["\nstr[0]\n","\nstrp\n","\nstrp[3]\n","\n* strp\n"],"correct_choice":"\nstrp\n"},{"title":"以下关于面向对象的描述错误的是：","choices":["\n面向对象的基本特性是封装，继承和多态\n","\n构造函数不可以是虚函数，析构函数可以是虚函数\n","\n子类重新定义父类虚函数的方法叫做重载\n","\n多态是为了接口重用，封装和继承是为了代码重用\n"],"correct_choice":"\n子类重新定义父类虚函数的方法叫做重载\n"},{"title":"  下面C程序的输出结果: \nint i=0,a=1,b=2,c=3;\ni=++a||++b||++c;\nprintf(\"%d %d %d %d\",i,a,b,c);","choices":["\n1 2 2 3\n","\n1 2 3 4\n","\n3 2 3 4\n","\n3 3 3 4\n"],"correct_choice":"\n1 2 2 3\n"},{"title":"  若有以下程序 \n#include <stdio.h>\nint f(int a［ ］,int n)\n{\n    if(n > 1)\n    {\n        int t;\n        t=f(a, n-1);\n        return t > a[ n -1 ] ？ t：a［n-1］;\n    }\n    else\n        return a[0];\n}\nmain()\n{ \n    int a［ ］= {8,2,9,1,3,6,4,7,5};\n    printf(\"%d\\n\", f(a, 9));\n}\n  则程序的输出结果是? ","choices":["\n9\n","\n1\n","\n8\n","\n5\n"],"correct_choice":"\n9\n"},{"title":"  请问下面的程序一共输出多少个“-”？ \nint main(void)\n{\n    int i;\n    for (i = 0; i < 2; i++) { \n        fork(); \n        printf(\"-\"); \n    } \n    return 0; \n} \n","choices":["\n2\n","\n4\n","\n6\n","\n8\n"],"correct_choice":"\n8\n"},{"title":"下面说法错误的是()","choices":["\n在组合时,为了保证成员对象被正确清除,在组合类的析构函数中需要显式调用其成员对象的析构函数\n","\n在类的继承层次中,可以自动进行向上和向下类型转换.而且都是安全的\n","\n构造函数可以重载,析构函数不能重载\n","\nC++的派生类如果要覆盖一个继承到的成员函数,在基类中需要将该函数声明为virtual\n"],"correct_choice":"\n在组合时,为了保证成员对象被正确清除,在组合类的析构函数中需要显式调用其成员对象的析构函数\n\n在类的继承层次中,可以自动进行向上和向下类型转换.而且都是安全的\n"},{"title":"  以下哪个选项是使用select函数检查读超时的正确用法（）  ","choices":["\nif (select(sockfd + 1,&fs,NULL,NULL,&timeout) == 0)\n","\nif (select(sockfd,NULL,&fs,NULL,&timeout) == 0)\n","\nif (select(sockfd + 1,NULL,&fs,NULL,&timeout) == 0)\n","\nif (select(sockfd ,&fs,NULL,NULL,&timeout) == 0)\n"],"correct_choice":"\nif (select(sockfd + 1,&fs,NULL,NULL,&timeout) == 0)\n"},{"title":"  以下程序的输出结果为（） \n\n     #include <stdio.h>  \n  \n    \n  \n     void main()  \n     {  \n  int b[3][3] = {0, 1, 2, 0, 1, 2, 0, 1, 2}, i, j, t = 1;  \n  for (i = 0; i < 3; i++)  \n  for (j = i; j <= i; j++)  \n  t += b[i][b[j][i]];  \n  printf(\"%d\\n\", t);  \n     }  \n","choices":["\n1\n","\n2\n","\n3\n","\n4\n"],"correct_choice":"\n4\n"},{"title":"  int (*p)[6]; 它的含义为（）。 ","choices":["\n具有6个元素的一维数组\n","\n定义了一个指向具有6个元素的一维数组的指针变量\n","\n指向整型指针变量\n","\n指向6个整数中的一个的地址\n"],"correct_choice":"\n定义了一个指向具有6个元素的一维数组的指针变量\n"},{"title":"设x和y均为逻辑值，则x ||       y为假的条件是x和y( ) ","choices":["\n均为真\n","\n其中一个为真\n","\n均为假\n","\n其中一个为假\n"],"correct_choice":"\n均为假\n"},{"title":"\n  C++语言本身没有输入输出语句。说法是否正确？\n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"  用C语言编写的代码程序(  )。 ","choices":["\n可立即执行\n","\n是一个源程序\n","\n经过编译即可执行\n","\n经过编译解释才能执行\n"],"correct_choice":"\n是一个源程序\n"},{"title":"  有函数int func(int i)的实现为 \nint func(int i)\n{\n    if (i > 1)\n        return i * func(i - 1);\n    else\n        return 1;\n}\n\n\t\n\n\n  请问函数调用func(5)的返回值是多少（）","choices":["\n5\n","\n15\n","\n20\n","\n120\n"],"correct_choice":"\n120\n"},{"title":"\n\n  假设变量a,b均为整型，表达式(a=5,b=2,a>b?a++:b++,a+b)的值是（ ）\n  \n","choices":["\n7\n","\n8\n","\n9\n","\n2\n"],"correct_choice":"\n8\n"},{"title":"\n  下列静态数据成员的特性中，错误的是（）\n","choices":["\n引用静态数据成员时，要在静态数据成员名前加<类名>和作用域符号\n","\n说明静态数据成员时前边要加关键字static来修饰\n","\n静态数据成员在类体外进行初始化\n","\n静态数据成员不是所有对象所共有的\n"],"correct_choice":"\n静态数据成员不是所有对象所共有的\n"},{"title":"  下面这段代码的输出结果为： \n#include<stdio.h>\nvoid change(int*a, int&b, int c)\n{\n      c=*a;\n      b=30;\n      *a=20;\n}\nint main ( )\n{\n      int a=10, b=20, c=30;\n      change(&a,b,c);\n      printf(“%d,%d,%d,”,a,b,c)；\n      return 0；\n }","choices":["\n20，30，30\n","\n10，20，30\n","\n20,30，10\n","\n10,30，30\n"],"correct_choice":"\n20，30，30\n"},{"title":"\n  在C语言中，若有定义：int a[4][10](其中0<=i<4,0<=j<10);则下列选项中对数组元素a[i][j]引用错误的是（）\n","choices":["\n*(a+i)+j\n","\n*(&a[0][0]+10*i+j)\n","\n*(a[i]+j)\n","\n*(*(a+i)+j)\n"],"correct_choice":"\n*(a+i)+j\n"},{"title":"\n  int *p[4]\n  与选择项中的\n  说明\n  （）\n  等价\n","choices":["\nint p[4]\n","\nint *p\n","\nint *(p[4])\n","\nint (*p)[4]\n"],"correct_choice":"\nint *(p[4])\n"},{"title":"在Linux 系统中，在运行一个程序时，程序中未初始化的全局变量会被加载到以下哪个内存段中?","choices":["\nBSS\n","\nTEXT\n","\nDATA\n","\nSTACK\n"],"correct_choice":"\nBSS\n"},{"title":"\n  1.\n  对下面的程序段\n\n\n  \n    \n  \n\n\n  \n    \n    \n  \n\n\n  \n    \n    \n  \n\n\n  \n\n\n  \n    \n  \n\n\n  编译运行后，程序输出结果是（）\n","choices":["\nCB::f1() CC::f2()\n","\nCB::f1() CB::f2()\n","\nCB::f1() CA::f2()\n","\nCA::f1() CC::f2()\n"],"correct_choice":"\nCB::f1() CB::f2()\n"},{"title":"写出下列程序在X86上的运行结果 \nstruct mybitfields\n{\n    unsigned short a : 4;\n    unsigned short b : 5;\n    unsigned short c : 7;\n} test\n\nvoid main(void)\n{\n    int i;\n    test.a = 2;\n    test.b = 3;\n    test.c = 0;\n\n    i = *((short *)&test);\n    printf(\"%d\\n\", i);\n}","choices":["\n30\n","\n50\n","\n60\n","\n20\n"],"correct_choice":"\n50\n"},{"title":"How many times is f() called when calculating f(10)? int f(int x) { \n    if(x <= 2) \n        return 1; \n    return f(x - 2) + f(x - 4) + 1; \n}","choices":["\n14\n","\n18\n","\n20\n","\n24\n","\nNone of the above\n"],"correct_choice":"\nNone of the above\n"},{"title":"字长为6位的二进制有符号，其最小值为多少？","choices":["\n-64\n","\n-63\n","\n-32\n","\n-31\n"],"correct_choice":"\n-32\n"},{"title":"Which of the following calling convention(s) support(s) support\nvariable-length parameter(e.g. printf)?","choices":["\ncdecl\n","\nstdcall\n","\npascal\n","\nfastcall\n"],"correct_choice":"\ncdecl\n"},{"title":"下列对函数double add(int a , int b)进行重载，正确的是（）","choices":["\nint add(int a ,int b ,int c)\n","\nint add(double a , double b)\n","\ndouble add(double a , double b)\n","\nint add(int a , int b)\n"],"correct_choice":"\nint add(int a ,int b ,int c)\n\nint add(double a , double b)\n\ndouble add(double a , double b)\n"},{"title":"  有定义语句： \nint b;\nchar c[10];\n  则正确的输入语句是______。 ","choices":["\nscanf(\"%d%s\",&b,&c);\n","\nscanf(\"%d%s\",&b,c);\n","\nscanf(\"%d%s\",b,c);\n","\nscanf(\"%d%s\",b,&c);\n"],"correct_choice":"\nscanf(\"%d%s\",&b,&c);\n\nscanf(\"%d%s\",&b,c);\n"},{"title":"下列关于虚函数的说法正确的是（）","choices":["\n在构造函数中调用类自己的虚函数，虚函数的动态绑定机制还会生效\n","\n在析构函数中调用类自己的虚函数，虚函数的动态绑定机制还会生效\n","\n静态函数不可以是虚函数\n","\n虚函数可以声明为inline\n"],"correct_choice":"\n静态函数不可以是虚函数\n\n虚函数可以声明为inline\n"},{"title":"\n\n  设a和b均为double型变量，且a=5.5、b=2.5，则表达式(int)a+b/b的值是（  ）\n","choices":["\n6.500000\n","\n6            b/b=1\n","\n5.500000\n","\n6.000000\n"],"correct_choice":"\n6.000000\n"},{"title":"下面一段代码的输出结果是 void f ( char* c, char d ){\n    *c = *c + 1;\n    d = d + 1;\n    cout<< *c << d; \n} \nvoid main( ){ \n    char a = 'A' , b = 'a'; \n    f ( &b, a); \n    cout<<a<<b<<endl;\n}\n","choices":["\nBaBa\n","\naBaB\n","\nAbAb\n","\nbBAb\n"],"correct_choice":"\nbBAb\n"},{"title":"  下面程序的运行结果是（ ）   。           #include<stdio.h>           main()           {int num=0;           while(num<=2)           {num++;           printf(“%d ,num);           }           }      ","choices":["\n1\n","\n1 2\n","\n1 2 3\n","\n1 2 3  4\n"],"correct_choice":"\n1 2 3\n"},{"title":"假设已经有定义 “const char *name = \"chen\";”，下面语句中错误的是（    ）","choices":["\nname[3] = 'q';\n","\nname = \"lin\";\n","\nname = new char[5];\n","\nname = new char('q');\n"],"correct_choice":"\nname[3] = 'q';\n"},{"title":"  C语言字符串以\\0结束，\\0在内存中的表示为（）?  ","choices":["\n\\0由\\和0两个字符组成\n","\n在内存中实际表示为0\n","\nASCII码为0×2A\n","\n\\0不同的操作系统表示方法不一样，依赖实现\n"],"correct_choice":"\n在内存中实际表示为0\n"},{"title":"\n  表示关系12<=x<=y的C语言表达式为：（ ）\n","choices":["\n(12<=x)&(x<=y)\n","\n(12<=x)&&(x<=y)\n","\n(12<=x)|(x<=y)\n","\n(12<=x)||(x<=y)\n"],"correct_choice":"\n(12<=x)&&(x<=y)\n"},{"title":"  以下程序的输出结果是（）。  main()\n{int i,j,k,a=3,b=2;\ni=(--a==b++)?--a:++b;\nj=a++;k=b;\nprintf(\"i=%d,j=%d,k=%d\\n\",i,j,k);\n} ","choices":["\ni=2,j=1,k=3\n","\ni=1,j=1,k=2\n","\ni=4,j=2,k=4\n","\ni=1,j=1,k=3\n"],"correct_choice":"\ni=1,j=1,k=3\n"},{"title":"在定义 int a[3][4][2]; 后，第 20 个元素是（）","choices":["\na[2][1][1]\n","\na[1][0][1]\n","\na[2][0][1]\n","\na[2][2][1]\n"],"correct_choice":"\na[2][1][1]\n"},{"title":"  设 C 语言中，int 类型数据占4个字节，则short 类型数据占（）。  ","choices":["\n1个字节\n","\n2个字节\n","\n4个字节\n","\n8个字节\n"],"correct_choice":"\n2个字节\n"},{"title":"  请选择下面代码的输出结果 \nint main(int argc,char*argv[])\n{\n    int a=10;\n    int b=4;\n    int c=a/b;\n    int d=c*a*b++;\n    std:cout<<d<<std::endl;\n    return 0;\n}","choices":["\n60\n","\n80\n","\n100\n","\n125\n"],"correct_choice":"\n80\n"},{"title":"void swap(int &a,int &b)\n{\n     int temp;\n     temp=a;\n     a=b;\n     b=temp;\n     cout<<a<<’ ‘<<b<<’\\n’;\n}\n\nint main(){\n    \n    int x=1;\n    int y=2;\n    swap(x,y);\n    cout<<x<<’ ‘<<y<<’\\n’;\n    return 0;\n}\n\n 上面程序输出的是？","choices":["\n2 1 1 2\n","\n2 1 2 1\n","\n1 2 2 1\n","\n1 2 1 2\n"],"correct_choice":"\n2 1 2 1\n"},{"title":"下面有关java和c++的描述，错误的是？","choices":["\njava是一次编写多处运行，c++是一次编写多处编译\n","\nc++和java支持多继承\n","\nJava不支持操作符重载，操作符重载被认为是c++的突出特征\n","\njava没有函数指针机制，c++支持函数指针\n"],"correct_choice":"\nc++和java支持多继承\n"},{"title":"有以下程序，其执行结果是________。 char fun( char x, char y )\n{\n if ( x )\n return(y);\n}\n\n\nint main()\n{\n int a = 'θ', b = '1', c = '2';\n printf( \"%c\\n\", fun( fun( a, b ), fun( b, c ) ) );\n}\n\n","choices":["\n函数调用出错\n","\n2\n","\n0\n","\n1\n"],"correct_choice":"\n2\n"},{"title":"\n  词法分析器用于识别（）\n","choices":["\n句子\n","\n句型\n","\n单词\n","\n生产式\n"],"correct_choice":"\n单词\n"},{"title":"下面关于一个类的静态成员描述中,不正确的是()","choices":["\n静态成员变量可被该类的所有方法访问\n","\n该类的静态方法只能访问该类的静态成员函数\n","\n该类的静态数据成员变量的值不可修改\n","\n子类可以访问父类的静态成员\n","\n静态成员无多态特性\n"],"correct_choice":"\n该类的静态数据成员变量的值不可修改\n"},{"title":"以下多线程对int型变量x的操作,哪个不需要进行同步()","choices":["\n++x\n","\nx=y\n","\nx++\n","\nx=1\n"],"correct_choice":"\nx=1\n"},{"title":"\n  以下程序的输出结果是（）\n\n\n  #include <stdio.h>\n\n\n  int main() {\n\n\n   char str[]=”ABCD”, *p=str;\n\n\n   printf(“%d\\n”, *(p+4));\n\n\n   return 0;\n\n\n  };\n","choices":["\n68\n","\n0\n","\n字符’D’的地址\n","\n不确定的值\n"],"correct_choice":"\n0\n"},{"title":"\n  设有以下定义程序\n  ;\n  则以下合法的调用语句是（）\n\n\n  \n    \n  \n","choices":["\nobj3.show3();\n","\nobj2.show2();\n","\nobj1.show1();\n","\nobj3.show1();\n"],"correct_choice":"\nobj3.show3();\n\nobj2.show2();\n\nobj1.show1();\n"},{"title":"两个线程并发执行以下代码，假设a是全局变量，初始值是1，那么以下输出中（）是可能的。 void foo ( )\n{\n  ++a;\n  printf(\"%d\",a);\n}","choices":["\n3_2_\n","\n2_3_\n","\n3_3_\n","\n2_2_\n"],"correct_choice":"\n3_2_\n\n2_3_\n\n3_3_\n\n2_2_\n"},{"title":"两个线程并发执行以下代码，假设a是全局变量，初始为1，那么以下输出______是可能的？ void foo(){\n    a=a+1;\n    printf(\"%d \",a);\n}\n","choices":["\n3 2\n","\n2 3\n","\n3 3\n","\n2 2\n"],"correct_choice":"\n3 2\n\n2 3\n\n3 3\n\n2 2\n"},{"title":"  在linux+gcc下,关于以下代码,正确的是() \nstd::string& test_str()\n{\n   std::string str=\"test\";\n   return str;\n}\nint main()\n{\n   std::string& str_ref=test_str();\n   std::cout<<str_ref<<std::endl;\n   return 0;\n}","choices":["\n编译警告\n","\n返回局部变量的引用,运行时出现未知错误\n","\n正常编译且运行\n","\n把代码里的&都去掉之后,程序可以正常运行\n"],"correct_choice":"\n编译警告\n\n返回局部变量的引用,运行时出现未知错误\n\n把代码里的&都去掉之后,程序可以正常运行\n"},{"title":"  下面哪些属于使用\"常引用\"的原因? ","choices":["\n提高程序的效率\n","\n节省存储空间\n","\n保护传递给函数的数据不在函数中被改变\n","\n以上都不正确\n"],"correct_choice":"\n提高程序的效率\n\n节省存储空间\n\n保护传递给函数的数据不在函数中被改变\n"},{"title":"所谓私有成员是指只有类中所提供的成员函数才能直接使用它们，任何类以外的函数对它们的访问都是非法的。","choices":["\n是\n","\n否\n"],"correct_choice":"\n否\n"},{"title":"下列关于功能性注释不正确的说法是()","choices":["\n功能性注释嵌在源程序中，用于说明程序段或语句的功能以及数据的状态\n","\n注释用来说明程序段，需要在每一行都要加注释\n","\n可使用空行或缩进，以便很容易区分注释和程序\n","\n修改程序也应修改注释\n"],"correct_choice":"\n注释用来说明程序段，需要在每一行都要加注释\n"},{"title":"  对两个字符数组 a 和 b 进行初始化 char a[]=\"ABCDEF\";char b[ ]={'A','B','C','D','E','F'};  则以下叙述正确的是（ ）  ","choices":["\na与b数组完全相同\n","\na与b长度相同\n","\na和b中都存放字符串\n","\na和b占用内存大小不同\n"],"correct_choice":"\na和b占用内存大小不同\n"},{"title":"  考虑函数原型void test(int a,int b=7,char* p=”*”)下面的调用中，属于不合法调用的是（）？  ","choices":["\ntest(6,’$’)\n","\ntest(5,”8”)\n","\ntest(0,0,0)\n","\ntest(5)\n"],"correct_choice":"\ntest(5,”8”)\n"},{"title":"  动态联编是在运行时选定调用的成员函数的。 ","choices":["\n是\n","\n否\n"],"correct_choice":"\n是\n"},{"title":"  有以下程序   main()\n{   \nint  i=1,j=2,k=3;\n    \nif(i++==1&&(++j==3||k++==3))\n       \nprintf(\"%d  %d  %d\\n\",i,j,k);\n}   程序运行后的输出结果是(   )   。  ","choices":["\n1  2  3\n","\n2  3  4\n","\n2  2  3\n","\n2  3  3\n"],"correct_choice":"\n2  3  3\n"},{"title":"  下列数据中，为字符串常量的是（）。 ","choices":["\nA\n","\n\"house\"\n","\nHow do you do.\n","\n$abc\n"],"correct_choice":"\n\"house\"\n"},{"title":"  如果想使一个数组中全部元素的值为0，可以写成int a[10]={0*10};请问这句话的说法是正确的吗？  ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"  表达式，0x13&0x17的值是（）。 ","choices":["\n0x17\n","\n0x13\n","\n0xf8\n","\n0xec\n"],"correct_choice":"\n0x13\n"},{"title":"所有的函数在定义它的程序中都是可见的。","choices":["\n是\n","\n否\n"],"correct_choice":"\n否\n"},{"title":"对于int a[1]，可以用a++来指向数组的第二个元素。","choices":["\n是\n","\n否\n"],"correct_choice":"\n否\n"},{"title":"  有以下程序 \n#include <stdio.h>\nint fun( int x )\n{ \n    int p;\n    if (x == 0｜｜ x == 1 ) \n        return(3);\n    p = x - fun( x – 2 );\n    return(p);\n｝\nmain(){\n    printf (\"%d\\n\",fun(9));\n}\n  程序运行后的输出结果是 ","choices":["\n9\n","\n5\n","\n10\n","\n7\n"],"correct_choice":"\n7\n"},{"title":"  有以下程序 \n#include<stdio. h>\nmain()\n{ \n    char *s=\"12134\";\n    int k=0, a=0;\n    while(s[k+1])\n    { \n       k++;\n       if(k%2= =0)\n       {\n            a=a+(s[k]-'0'+1);\n            continue;    \n       }\n       a=a+(s[k]-'0');\n    }\n    printf(\"k=%d a=%d\\n\",k,a);\n}\n\n  程序运行后的输出结果是? ","choices":["\nk=5 a=15\n","\nk=4 a=12\n","\nk=6 a=11\n","\nk=3 a=14\n"],"correct_choice":"\nk=4 a=12\n"},{"title":"\n  以下描述不正确的有\n","choices":["\ntry块不可以省略\n","\n可以使用多重catch块\n","\nfinally块可以省略\n","\ncatch块和finally块可以同时省略\n"],"correct_choice":"\ncatch块和finally块可以同时省略\n"},{"title":"  若有以下程序 \n#include<stdio.h>\nmain(){\n    int c;\n    c=10^5;\n    printf(\"%d\\n\",c);\n｝\n  则程序的输出结果是？ ","choices":["\n5\n","\n15\n","\n10000\n","\n105\n"],"correct_choice":"\n15\n"},{"title":"  以下程序的输出结果为 \n#include \"stdio.h\"\nint func(int x, int y)\n{\n    return (x + y);\n}\nint main()\n{\n    int a = 1, b = 2, c = 3, d = 4, e = 5;\n    printf(\" %d\\n\", func((a + b, b + c, c + a), (d, e)));\n    \n    return 0;\n}\n","choices":["\n15\n","\n5\n","\n9\n","\n出错\n"],"correct_choice":"\n9\n"},{"title":"\n  以下程序的输出结果是：\n\n\n  void  main()\n\n\n  {\n\n  int x = 0, y = 5, z = 3; \nwhile(z-->0 && ++x<5) \n{ \ny= y - 1; \n} \nprintf(\"%d, %d, %d\\n\", x, y, z); \n\n  }\n","choices":["\n2,2,0\n","\n3,2,-1\n","\n4,3,-1\n","\n5,-2,-5\n"],"correct_choice":"\n3,2,-1\n"},{"title":"  函数x的定义如下,问x(x(8))需要调用几次函数x(int n)? \nint x(int n){\n\tcnt++;\n\tif (n<=3)\n\t{\n\t\treturn 1;\n\t}\n\telse\n\t{\n\t\treturn x(n-2)+x(n-4)+1;\n\t}\n}","choices":["\n16\n","\n18\n","\n20\n","\n22\n"],"correct_choice":"\n18\n"},{"title":"  空格处应填写（）。 \n#include <iostream>\nusing namespace std;\n\nclass A\n{\n    public:\n        int m;\n        int* p;\n};\n\nint main()\n{\n    A s;\n    s.m = 10;\n    cout<<s.m<<endl; //10\n    s.p = &s.m;\n    () = 5;\n    cout<<s.m<<endl; //5\n    return 0;\n} \n\n  \n    \n  \n\n","choices":["\ns.p = 5\n","\ns->p = 5\n","\ns.*p = 5\n","\n*s.p = 5\n"],"correct_choice":"\n*s.p = 5\n"},{"title":"一个C语言程序在一台32位机器上运行。程序中定义了三个变量xyz，其中x和z是int型，y为short型。当x=127，y=-9时，执行赋值语句z=x+y后，xyz的值分别是_________。","choices":["\nx=0000007FH，y=FFF9H，z=00000076H\n","\nx=0000007FH，y=FFF9H，z=FFFF0076H\n","\nx=0000007FH，y=FFF7H，z=FFFF0076H\n","\nx=0000007FH，y=FFF7H，z=00000076H\n"],"correct_choice":"\nx=0000007FH，y=FFF7H，z=00000076H\n"},{"title":"T是一个数据类型，关于std::vector::at 和 std::vector::operator[] 描述正确的是：","choices":["\nat总是做边界检查， operator[] 不做边界检查.\n","\nat 不做边界检查， operator[] 做边界检查.\n","\nat和operator[] 是一样的\n"],"correct_choice":"\nat总是做边界检查， operator[] 不做边界检查.\n"},{"title":"\n 下列给定程序中，函数fun的功能是:求ss所指字符串数组中长度最短的字符串所在的行下标，作为函数值返回，并把其串长放在形参n所指的变量中。ss所指字符串数数组中共有M个字符串，且串长小于N。 \n  请在程序的下画线处填入正确的内容并将下画线删除，使程序得出正确的结果。 \n  试题程序。 \n#define M 5\n #define N 20\n int fun(char(* ss)[N], int *n)\n {\n     int i, k = 0, len = N;\n     for (i = 0; i < ______; i++)\n     {\n         len = strlen(ss[i]);\n         if (i == 0)\n             *n = len;\n         if (len ____ * n)\n         {\n             *n = len;\n             k = i;\n         }\n     }\n     return ( _____ );\n }\n main( )\n {\n     char ss[M][N] = {\"shanghai\", \"guangzhou\", \"beijing\", \"tianjing\", \"chongqing\"};\n     int n, k, i;\n     printf(\"\\nThe originalb stringsare:\\n\");\n     for (i = 0; i < M; i++)\n         puts(ss[i]);\n     k = fun(ss, &n);\n     printf(\"\\nThe length of shortest string is: % d\\n\", n);\n     printf(\"\\nThe shortest string is: % s\\n\", ss[k]);\n }\n","choices":["\nN，< ，k\n","\nN， >，k\n","\nM，<，k\n","\nM，>，k\n"],"correct_choice":"\nM，<，k\n"},{"title":"下列关于 clone 和 fork 的区别描述正确的有？","choices":["\nclone和fork最大不同在于fork不再复制父进程的栈空间，而是自己创建一个新的。\n","\nclone和fork最大不同在于clone不再复制父进程的栈空间，而是自己创建一个新的。\n","\nclone是fork的升级版本，不仅可以创建进程或者线程，还可以指定创建新的命名空间（namespace）、有选择的继承父进程的内存、甚至可以将创建出来的进程变成父进程的兄弟进程等等\n","\nfork是clone的升级版本，不仅可以创建进程或者线程，还可以指定创建新的命名空间（namespace）、有选择的继承父进程的内存、甚至可以将创建出来的进程变成父进程的兄弟进程等等\n"],"correct_choice":"\nclone是fork的升级版本，不仅可以创建进程或者线程，还可以指定创建新的命名空间（namespace）、有选择的继承父进程的内存、甚至可以将创建出来的进程变成父进程的兄弟进程等等\n"},{"title":"\n  如下代码的输出结果是（）\n  \n\n\n  \n    \n  \n","choices":["\n3\n","\n4\n","\n9\n","\n10\n"],"correct_choice":"\n9\n"},{"title":"struct st\n{\n\tint *p;\n\tint i;\n\tchar a;\n};\nint sz=sizeof(struct st);\n  如下C程序,在64位处理器上运行后sz的值是什么? ","choices":["\n24\n","\n20\n","\n16\n","\n14\n","\n13\n","\n12\n"],"correct_choice":"\n16\n"},{"title":"  以下程序的输出结果是（）？   main() \n {int s,i;\n for(s=0,i=1;i<3;i++,s+=i);\n printf(\"%d\\n\",s);\n}","choices":["\n1\n","\n3\n","\n5\n","\n7\n"],"correct_choice":"\n5\n"},{"title":"  以下程序运行后的输出结果是（）？   main()\n{ int\na[4][4]={{1,2,3,4},{5,6,7,8},{11,12,13,14},{15,16,17,18}};\n  int\ni=0,j=0,s=0;\n \nwhile(i++<4)\n  {\n   \nif(i==2||i==4) continue;\n   \nj=0;\n   \ndo{ s+= a[i][j]; j++; } while(j<4);\n  }\n \nprintf(\"%d\\n\",s);\n}","choices":["\n90\n","\n91\n","\n92\n","\n94\n"],"correct_choice":"\n92\n"},{"title":"\n  C\n  语言中最简单的数据类型包括（  ）\n","choices":["\n整型、实型、逻辑型\n","\n整型、实型、字符型\n","\n整型、字符型、逻辑型\n","\n整型、实型、逻辑型、字符型\n"],"correct_choice":"\n整型、实型、字符型\n"},{"title":"\n  关于私有访问控制符\n  private\n  修饰的成员变量，以下说法正确的是（）\n","choices":["\n可以三种类所引用：该类自身、与它在同一包中的其他类，在其他包中的该类的子类\n","\n可以被两种类访问和引用：该类本身、该类的所有子类\n","\n只能被该类自身所访问和修改\n","\n只能被同一个包中的类访问\n"],"correct_choice":"\n只能被该类自身所访问和修改\n"},{"title":"  设 C 语言中,int 类型数据占4个字节,则short 类型数据占（）。  ","choices":["\n1个字节\n","\n2个字节\n","\n4个字节\n","\n8个字节\n"],"correct_choice":"\n2个字节\n"},{"title":"  int max(int x,y) {  }。    定义是否正确？ ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"  用户定义的函数不可以调用的函数是（）。 ","choices":["\n非整型返回值的\n","\n本文件外的\n","\nmain 函数\n","\n本函数下面定义的\n"],"correct_choice":"\nmain 函数\n"},{"title":"设有定义char str[]=\"abcde\",则\ncout<<str;\n能正确输出字符串","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"  输出以下结果： \n#define add(a,b) a+b\nint main() { \n printf(\"%d\\n\",3 * add(4,7)); \n return 0;\n}\n\n","choices":["\n33\n","\n19\n","\n25\n","\n49\n"],"correct_choice":"\n19\n"},{"title":"  若有以下程序 \n#include <stdio. h>\nmain( )\n{ \n    int a = 0,b = 0,c = 0,d; \n    c = (a + = b,,b + = a);     / * 第4行 * /\n    d = c;        / * 第5行 * /\n    ;         / * 第6行 * /\n    ;printf(\"%d,%d,%d\\n\",a,b,c);/ * 第7行 * /\n}\n   编译时出现错误,你认为出错的是 ","choices":["\n第4行\n","\n第5行\n","\n第6行\n","\n第7行\n"],"correct_choice":"\n第4行\n"},{"title":"  下面程序的输出结果为多少(32位机器上)？ \nvoid Func(char str_arg[2])\n{\n    int m = sizeof(str_arg); \n    int n = strlen(str_arg); \n    printf(\"%d\\n\", m);\n    printf(\"%d\\n\", n);\n}\nint main(void)\n{\n    char str[] = \"Hello\";\n    Func(str);\n}\n\n","choices":["\n5 5\n","\n5 4\n","\n4 5\n","\n4 4\n"],"correct_choice":"\n4 5\n"},{"title":"给定3个int类型的正整数x，y，z，对如下4组表达式判断正确的选项（）\nint a1=x+y-z; int b1=x*y/z;\nint a2=x-z+y; int b2=x/z*y;\nint c1=x<<y>>z; int d1=x&y|z;\nint c2=x>>z<<y; int d2=x|z&y;\n","choices":["\na1一定等于a2\n","\nb1一定等于b2\n","\nc1一定等于c2\n","\nd1一定等于d2\n"],"correct_choice":"\na1一定等于a2\n"},{"title":"\n  能把函数处理结果的二个数据返回给主调函数，在下面的方法中不正确的是（）\n","choices":["\nreturn这二个数\n","\n形参用数组\n","\n形参用二个指针\n","\n用二个全局变量\n"],"correct_choice":"\nreturn这二个数\n"},{"title":"  下列代码的输出为： \nclass CParent \n{\n    public: virtual void Intro()\n    {\n        printf( \"I'm a Parent, \" ); Hobby();\n    }\n    virtual void Hobby()\n    {\n        printf( \"I like football!\" );\n    }\n}; \nclass CChild : public CParent { \n    public: virtual void Intro()\n    {\n        printf( \"I'm a Child, \" ); Hobby();\n    }\n    virtual void Hobby()\n    {\n       printf( \"I like basketball!\\n\" );\n    }\n}; \nint main( void )\n{\n    CChild *pChild = new CChild(); \n    CParent *pParent = (CParent *) pChild; \n    pParent->Intro(); \n    return(0);\n}\n\n\n\n","choices":["\nI'm a Parent， I like football!\n","\nI'm a Parent， I like basketball!\n","\nI'm a Child， I like basketball!\n","\nI'm a Child， I like football!\n"],"correct_choice":"\nI'm a Child， I like basketball!\n"},{"title":"#include<iostream>\nusing namespace std;\n\nclass Base\n{\npublic:\n    virtual int foo(int x)\n    {\n        return x * 10;\n    }\n\n    int foo(char x[14])\n    {\n        return sizeof(x) + 10;\n    }\n};\n\nclass Derived: public Base\n{\n    int foo(int x)\n    {\n        return x * 20;\n    }\n\n    virtual int foo(char x[10])\n    {\n        return sizeof(x) + 20;\n    }\n} ;\n\nint main()\n{\n    Derived stDerived;\n    Base *pstBase = &stDerived;\n\n    char x[10];\n    printf(\"%d\\n\", pstBase->foo(100) + pstBase->foo(x));\n\n    return 0;\n}\n\n 在32位环境下，以上程序的输出结果是？","choices":["\n2000\n","\n2004\n","\n2014\n","\n2024\n"],"correct_choice":"\n2014\n"},{"title":"  有如下一段程序： \nint f1(float);\nint f2(char);\nint f3(float);\nint f4(float);\nint (*pf)(float);\n  则以下不合法的是:() ","choices":["\nint (*p)(float)=&f1;\n","\npf=&f4;\n","\npf=&f2;\n","\npf=f3;\n"],"correct_choice":"\npf=&f2;\n"},{"title":"  函数作用：将整型数组p中n个数据增大 \nvoid increment_ints (int p [ ], int n) \n{ \n  assert(p != NULL);  /* 确保p不为空指针 */ \n  assert(n >= 0);  /* 确保n不为负数 */ \n  while (n)  /* 循环n次. */ \n  { \n    *p++;          /* 增大p*/ \n    p++, n--;      /* p指向下一位，n减1 */ \n  } \n}\n  以上代码的实现有错误，下面哪句话的表述是正确的？","choices":["\n*p++使得p在解引用之前增大，应该改为(*p)++\n","\n数组的值是一个不能改变的值，所以p不能直接被修改。应该使用一个和p相关联的指针来完成这个操作。\n","\nwhile循环的条件必须是一个布尔类型的表达式，表达式应该为n!=0.\n","\np不应该定义为变长的数组，参数中不应该包含参数n。\n"],"correct_choice":"\n*p++使得p在解引用之前增大，应该改为(*p)++\n"},{"title":"  下面程序段的输出结果是  char *p1 = ”123”, *p2 = ”ABC”, str[50] = “xyz”;\nstrcpy(str + 2, strcat(p1, p2));\nprintf(“%s\\n”, str);\n ","choices":["\nxyz123ABC\n","\nz123ABC\n","\nxy123ABC\n","\n出错\n"],"correct_choice":"\n出错\n"},{"title":"  32位机器上定义如下结构体： \n struct xx\n {\n     long long _x1;\n     char _x2;\n     int _x3;\n     char _x4[2];\n     static int _x5;\n };\n int xx::_x5;\n\n请问sizeof(xx)的大小是()\n","choices":["\n19\n","\n20\n","\n15\n","\n24\n"],"correct_choice":"\n24\n"},{"title":"  若有 \nchar st1[12]= \"Yes\", st2[5]= \"No\", st3[7]= \"Or\";\n  , 则执行下列语句，输出结果是_________。 \ncout<< strcat(strcat(st1,st3), st2);\n","choices":["\nYesOrNo\n","\nOr No\n","\nNo\n","\nOr\n"],"correct_choice":"\nYesOrNo\n"},{"title":"以下叙述不正确的是（）","choices":["\n一个C源程序可由一个或多个函数组成\n","\n一个C源程序必须包含一个main函数\n","\nC程序的基本组成单位是函数\n","\n在C程序中，注释说明只能位于一条语句的后面\n"],"correct_choice":"\n在C程序中，注释说明只能位于一条语句的后面\n"},{"title":"  设 char 型变量 x 中的值为10100111，则表达式(2+x)^(~3)的值是（）。  ","choices":["\n10101001\n","\n10101000\n","\n11111101\n","\n01010101\n"],"correct_choice":"\n01010101\n"},{"title":"\n  'a'代表一个字符常量,占一个字节.这句话是否正确\n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"  以下对枚举类型名的定义中正确的是（）。 ","choices":["\nenum a={sum,mon,tue};\n","\nenum a {sum=9,mon=-1,tue};\n","\nenum a={\"sum\",\"mon\",\"tue\"};\n","\nenum a {\"sum\",\"mon\",\"tue\"};\n"],"correct_choice":"\nenum a {sum=9,mon=-1,tue};\n"},{"title":"  在 C 语言中，引用数组元素时，其数组下标的数据类型允许是（）。  ","choices":["\n整型常量\n","\n整型表达式\n","\n整型常量或整型表达式\n","\n任何类型的表达式\n"],"correct_choice":"\n整型常量或整型表达式\n"},{"title":"\n  关于虚函数的描述中，（ ）是正确的。\n","choices":["\n虚函数是一个static类型的成员函数\n","\n虚函数是一个非成员函数\n","\n基类中说明了虚函数后，派生类中将其对应的函数可不必说明为虚函数\n","\n派生类的虚函数与基类的虚函数具有不同的参数个数和类型\n"],"correct_choice":"\n基类中说明了虚函数后，派生类中将其对应的函数可不必说明为虚函数\n"},{"title":"  a=(b=4)+(c=6) 是一个合法的赋值表达式。请问这句话的说法是正确的吗？  ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"  设有定义语句     int x[6]={2,4,6,8,5,7},*p=x,i;     要求依次输出x数组6个元素中的值，不能完成此操作的语句是(   )。  ","choices":["\nfor(i=0;i<6;i++) printf(\"%2d\",*(p++));\n","\nfor(i=0;i<6;i++) printf(\"%2d\",*(p+i));\n","\nfor(i=0;i<6;i++) printf(\"%2d\",*p++);\n","\nfor(i=0;i<6;i++) printf(\"%2d\",(*p)++);\n"],"correct_choice":"\nfor(i=0;i<6;i++) printf(\"%2d\",(*p)++);\n"},{"title":"\n  以下\n  C\n  语言指令：\n\n\n   int a[5] = {1,3,5,7,9};\n\n\n   int *p = (int *)(&a+1);\n\n\n   printf(“%d,%d”,*(a+1)\n  ，\n  *(p-1));\n\n\n  运行结果是什么？\n","choices":["\n2,1\n","\n3,1\n","\n3,9\n","\n运行时崩溃\n"],"correct_choice":"\n3,9\n"},{"title":"  以下定义语句中正确的是(   )。  ","choices":["\nchar a='A'b='B';\n","\nfloat a=b=10.0;\n","\nint a=10,*b=&a;\n","\nfloat *a,b=&a;\n"],"correct_choice":"\nint a=10,*b=&a;\n"},{"title":"类的私有成员可在何处访问（         ）","choices":["\n通过子类的对象访问\n","\n本类及子类的成员函数中\n","\n通过该类对象访问\n","\n本类的成员函数中\n"],"correct_choice":"\n本类的成员函数中\n"},{"title":"  char *p=\"girl\";的含义是定义字符型指针变量 p，p 的值是字符串\"girl\"。请问这句话的说法是正确的吗？  ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"  假定所有变量均已正确定义，下列程序段运行后 x 的值是（）。   k1=1;\nk2=2;\nk3=3;\nx=15;\nif(!k1) x--;\nelse if(k2) x=4;\nelse x=3;","choices":["\n14\n","\n4\n","\n15\n","\n3\n"],"correct_choice":"\n4\n"},{"title":"\n  如下语句通过算术运算和逻辑运算之后\n  i\n  和\n  j\n  的结果是（）\n\n         int i=0;\n         int j=0;\n         if((++i>0)||(++j>0))\n         {\n         //打印出i和j的值。\n         }","choices":["\ni=0;j=0\n","\ni=1;j=1\n","\ni=0;j=1\n","\ni=1;j=0\n"],"correct_choice":"\ni=1;j=0\n"},{"title":"以下选项中函数形参不是指针的是？","choices":["\nfun( int ﹡a )｛…｝\n","\nfun( int a [ 10 ] ) ｛…｝\n","\nfun( int &p ) ｛…｝\n","\nfun( int p［ ］) ｛…｝\n"],"correct_choice":"\nfun( int &p ) ｛…｝\n"},{"title":"  若有一下程序 \n#include<stdio.h>\nmain(){\n    int b=10,a=－11;\n    a%=b%=4;\n    printf(\"%d %d\\n\",a,b);\n｝\n    则程序的输出结果是？ ","choices":["\n1 2\n","\n－1 2\n","\n－1 －2\n","\n1 －2\n"],"correct_choice":"\n－1 2\n"},{"title":"  假定x=65530，下面函数的返回值是多少？（ ）  int func(x)\n{\n    int countx=0;\n    while(x)\n    {\n        countx++;\n        x=x&(x-1);\n    }\n    return countx;\n} ","choices":["\n100\n","\n14\n","\n20\n","\n16\n"],"correct_choice":"\n14\n"},{"title":"\n  运行以下C语言代码，输出的结果是（）\n\n\n  \n","choices":["\nstra  tra  ra\n","\nstra  strb  strc\n","\ns  t  r\n","\ns  s  s\n"],"correct_choice":"\nstra  tra  ra\n"},{"title":"  如下代码，result变量的输出结果是多少？ \n#include<iostream>\nusing namespace std;\nint i=1;\nclass MyCls{\npublic:\n\tMyCls():m_nFor(m_nThd),m_nSec(i++),m_nFir(i++),m_nThd(i++){\n\t\tm_nThd=i;\n\t}\n\tvoid echo(){\n\t\tcout<<\"result:\"<<m_nFir+m_nSec+m_nThd+m_nFor<<endl;\n\t}\nprivate:\n\tint m_nFir;\n\tint m_nSec;\n\tint m_nThd;\n\tint &m_nFor;\n};\nint main()\n{\n\tMyCls oCls;\n\toCls.echo();\n\treturn 0;\n}","choices":["\n10\n","\n11\n","\n9\n","\n12\n","\n8\n"],"correct_choice":"\n11\n"},{"title":"Fill the blanks inside class definition class Test \n{ \n    public: \n        ____ int a; \n        ____ int b; \n    public: \n        Test::Test(int _a , int _b) : a( _a ) \n        { \n             b = _b; \n        } \n}; \nint Test::b; \nint main(void) \n{ \n    Test t1(0 , 0) , t2(1 , 1); \n    t1.b = 10; \n    t2.b = 20; \n    printf(\"%u %u %u %u\",t1.a , t1.b , t2.a , t2.b); \n    return 0; \n}  \n  Running result : 0 20 1 20","choices":["\nstatic/const\n","\nconst/static\n","\n--/static\n","\nconststatic/static\n","\nNone of above\n"],"correct_choice":"\nconst/static\n\n--/static\n"},{"title":"下列程序的运行结果是3，5，请为横线处选择合适的程序（      ）\n#include<stdio.h>\n struct S\n {\n    int n;\n    char c[10];\n } *p;\n main()\n { \n    struct S a[3]={{3,\"abc\"},{5,\"def\"},{7,\"ghi\"}};\n    p=a;\n    printf(\"%d,\",(*p).n);\n    printf(\"%d\\n\",___________);\n } \n","choices":["\n(++p)->n\n","\n(a+1)->n\n","\np++->n\n","\n(p+1)->n\n"],"correct_choice":"\n(++p)->n\n\n(a+1)->n\n\n(p+1)->n\n"},{"title":"保护成员和私有成员的区别在于把保护成员的访问范围扩展到派生类中。","choices":["\n是\n","\n否\n"],"correct_choice":"\n是\n"},{"title":"如果一个类至少有一个纯虚函数，那么就称该类为（        ）","choices":["\n抽象类\n","\n虚基类\n","\n派生类\n","\n以上都不对\n"],"correct_choice":"\n抽象类\n"},{"title":"  十进制数50表示成符合C语言规定的八进制数为________。  ","choices":["\n20\n","\n32\n","\n62\n","\n062\n"],"correct_choice":"\n062\n"},{"title":"\n  在C++语言程序中\n  函数的定义不可以嵌套,但函数的调用可以嵌套。说法是否正确？\n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"\n  定义一个输入文件流对象,并打开d盘du文件夹下的abc.dat文件方法是:\n\n\n  ifstream fin;\n\n\n  fin.open(\"d:\\du\\abc.dat\");\n\n  是否正确？ ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"  若有下列定义，则对 a 数组元素地址的正确引用是（）。     int a[5],*p=a;     ","choices":["\n*(p+5)\n","\n*p+2\n","\n*(a+2)\n","\n*&a[5]\n"],"correct_choice":"\n*(a+2)\n"},{"title":"\n  C\n  语言程序由函数组成,它的主函数必须在其它函数之前,函数内可以嵌套定义函数。\n\n\n  \n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"执行如下程序代码后， int a = 0, c = 0;\ndo\n{\n    --c;\n    a = a - 1;\n}\nwhile ( a > 0 );\n  c的值是（ ） \n  \n","choices":["\n0\n","\n1\n","\n-1\n","\n死循环\n"],"correct_choice":"\n-1\n"},{"title":"  设有以下宏定义： \n#define N 3\n#define Y(n)((N+1)*n)\n  则执行语句：z=2*(N+Y(5+1))\n  ；后，\n  z\n  的值为：\n","choices":["\n38\n","\n42\n","\n48\n","\n54\n"],"correct_choice":"\n48\n"},{"title":"  若MyClass为一个类，执行 \nMyClass a[4]，*p[5]；\n  语句时会自动调用该类构造函数的次数是 ","choices":["\n2\n","\n5\n","\n4\n","\n9\n"],"correct_choice":"\n4\n"},{"title":"Initialize integer i as 0, what's the value of i after the following\noperation?i += i > 0 ? i++ : i--;","choices":["\n-2\n","\n-1\n","\n0\n","\n1\n","\n2\n"],"correct_choice":"\n-1\n"},{"title":"  下面程序的输出结果是？ \n\n  #include<iostream.h>\nvoid main(){\n    int n[][3]={10,20,30,40,50,60};\n    int (*p)[3];\n    p=n;\n    cout<<p[0][0]<<\",\"<<*(p[0]+1)<<\",\"<<(*p)[2]<<endl;\n}\n","choices":["\n10,30,60\n","\n10,30,50\n","\n10,20,30\n","\n20,40,60\n"],"correct_choice":"\n10,20,30\n"},{"title":"std::vector::iterator   没有重载下面哪个运算符 ","choices":["\n==\n","\n++\n","\n*\n","\n>>\n"],"correct_choice":"\n>>\n"},{"title":"  如果有一个类是 myClass , 关于下面代码正确描述的是: \nmyClass::~myClass(){\ndelete this;\nthis = NULL;\n}","choices":["\n正确，我们避免了内存泄漏\n","\n它会导致栈溢出\n","\n无法编译通过\n","\n这是不正确的，它没有释放任何成员变量。\n"],"correct_choice":"\n无法编译通过\n"},{"title":"int* pint = 0; \npint += 6; \ncout << pint << endl;\n  以上程序的运行结果是： ","choices":["\n12\n","\n72\n","\n24\n","\n0\n","\n6\n","\n任意数\n"],"correct_choice":"\n24\n"},{"title":"  关于 return 语句,下列正确的说法是（）。 ","choices":["\n在主函数和其他函数中均可出现\n","\n必须在每个函数中出现\n","\n可以在同一个函数中出现多次\n","\n只能在除主函数之外的函数中出现一次\n"],"correct_choice":"\n在主函数和其他函数中均可出现\n\n可以在同一个函数中出现多次\n"},{"title":"关于函数输入参数的正确描述都有哪些?() ","choices":["\n始终用const限制所有指向只读输入参数的指针和引用\n","\n值传递只用于原始类型(int,float...)的输入参数\n","\n优先按const的引用取得其他用户定义类型的输入\n","\n如果函数需要修改其参数副本,则可以考虑通过值传递代替通过引用传递\n"],"correct_choice":"\n始终用const限制所有指向只读输入参数的指针和引用\n\n优先按const的引用取得其他用户定义类型的输入\n\n如果函数需要修改其参数副本,则可以考虑通过值传递代替通过引用传递\n"},{"title":"Which of the following statements are true?","choices":["\nWe can create a binary tree from given inorder and preorder traversal sequences.\n","\nWe can create a binary tree from given preorder and postorder traversal sequences.\n","\nFor an almost sorted array, insertion sort can be more effective than Quicksort.\n","\nSuppose T(n) is the runtime of resolving a problem with n elements, T(n) = Θ(1) if n = 1; T(n) = 2T(n/2) + Θ(n) if > 1; so T(n) is Θ(n log n).\n","\nNone of the above.\n"],"correct_choice":"\nWe can create a binary tree from given inorder and preorder traversal sequences.\n\nFor an almost sorted array, insertion sort can be more effective than Quicksort.\n\nSuppose T(n) is the runtime of resolving a problem with n elements, T(n) = Θ(1) if n = 1; T(n) = 2T(n/2) + Θ(n) if > 1; so T(n) is Θ(n log n).\n"},{"title":"若有以下程序段\ndouble x =5.16894;\nprintf(\"%f\\n\",(int)(x * 1000+0.5)/(double)1000 );\n 则程序段的输出结果是","choices":["\n5.170000\n","\n5.175000\n","\n5.169000\n","\n5.168000\n"],"correct_choice":"\n5.169000\n"},{"title":"  有以下程序           #include <stdio.h>       main()       {       int  x;       for( x=3; x<6; x++ )       printf( (x%2 ) ? (\"*%d\")       :(\"#%d\"),x);       printf(\"\\n\");       }        则程序的输出结果是（）  ","choices":["\n*3#4*5\n","\n#3*4#5\n","\n*3*4#5\n","\n*3#4#5\n"],"correct_choice":"\n*3#4*5\n"},{"title":"\n  int a[2][]={{1,2},{3,4}}\n  不能正确定义二维数组。说法是否正确？\n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"C++的虚函数必须是类的一个成员，而不允许是类的友元。","choices":["\n是\n","\n否\n"],"correct_choice":"\n是\n"},{"title":"  在for语句中,循环次数只由变量来控制的.说法是否正确？   ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"  以下数据中，不正确的数值或字符常量是（）。  ","choices":["\nc\n","\n66\n","\n0xaa\n","\n50\n"],"correct_choice":"\nc\n"},{"title":".h头文件中的ifndef/define/endif 的作用？","choices":["\n防止重复引用\n","\n规范化代码\n","\n标志被引用文件内容中可以被共享的代码\n","\n以上都不正确\n"],"correct_choice":"\n防止重复引用\n"},{"title":"在为传统面向对象语言的程序做单元测试的时候,经常用到mock对象。Mock对象通过反射数。请问反射最大程度破坏了面向对象的以下哪个特性？","choices":["\n封装\n","\n多态\n","\n继承\n","\n抽象\n"],"correct_choice":"\n封装\n"},{"title":"#include <stdio.h>\nint main()\n{  \n   int a=1,b=2,c=3,d=0;\n   if(a == 1 && b++==2)\n   if(b!=2||c--!=3)\n       printf(\"%d,%d,%d\\n\" ,a,b,c);\n   else \n       printf(\"%d,%d,%d\\n\" ,a,b,c);\n   else \n       printf(\"%d,%d,%d\\n\" ,a,b,c);\n   return 0;\n}\n  下面程序输出是什么？ ","choices":["\n1，2，3\n","\n1，3，2\n","\n3，2，1\n","\n1，3，3\n"],"correct_choice":"\n1，3，3\n"},{"title":"  有以下程序 \n#include < stdio. h >\nint a = l, b=2;\nvoid funl( int a, int b )\n{ \n    printf( \"%d %d \",a, b ); \n}\nvoid fun2()\n{ \n    a=3; b =4;\n}\nmain()\n{\n    funl(5,6) ; \n    fun2();\n    printf( \"%d %d\\n\",a,b );\n｝\n  程序运行后的输出结果是? ","choices":["\n5 6 1 2\n","\n3 4 5 6\n","\n1 2 5 6\n","\n5 6 3 4\n"],"correct_choice":"\n5 6 3 4\n"},{"title":"下列哪种说法是正确的（ ）","choices":["\n实例方法可直接调用超类的实例方法\n","\n实例方法可直接调用超类的类方法\n","\n实例方法可直接调用其他类的实例方法\n","\n实例方法可直接调用本类的类方法\n"],"correct_choice":"\n实例方法可直接调用本类的类方法\n"},{"title":"全局变量可不可以声明在可被多个.C文件包含的头文件中？","choices":["\n可以\n","\n不可以\n"],"correct_choice":"\n可以\n"},{"title":"\n  int f(int x)\n    return ((x>2) ? x*f(x-1) : 3);\n}\nint i;\ni=f(f(2)):\n\n  执行如上函数后. i的值为（） ","choices":["\n30\n","\n无限递归\n","\n9\n","\n2160\n"],"correct_choice":"\n9\n"},{"title":"  如下代码输出结果是什么？ \n#include<stdio.h>\nchar buffer[6] = {0};\nchar *mystring(){   \n    char *s = \"Hello world\";\n    for(int i = 0;i<(sizeof(buffer) - 1);i++){\n    buffer[i] = *(s+i);\n    }\n    return buffer;\n}\nint main(int args,char**argv){\n    printf(\"%s\\n\",mystring());\n    return 0;\n}\n","choices":["\nHello\n","\nHello World!\n","\nHell\n","\n以上全都不正确\n"],"correct_choice":"\nHello\n"},{"title":"  下面代码会输出什么 \n\n  int main(int argc,char**argv){\n    int a[4]={1,2,3,4};\n    int*ptr=(int*)(&a+1);\n    printf(“%d”,*(ptr-1));\n}\n","choices":["\n1\n","\n2\n","\n3\n","\n4\n"],"correct_choice":"\n4\n"},{"title":"  以下程序用来统计文件中字符的个数(函数feof 用以检查文件是否结束,结束是返回非零) \n#include<stdio.h>\nmain()\n{ \n    FILE *fp; \n    long num=0;\n    fp=fopen(\"fname.dat\", \"r\" );\n    while (________) \n    { \n        fgetc( fp );\n        num++ ;\n    }\n    printf( \" num= % d\\n\",num);\n    fclose( fp );\n}\n  下面选项中,填入横线处不能得到正确结果的是? ","choices":["\nfeof( fp )= =NULL\n","\n! feof( fp )\n","\nfeof(fp)\n","\nfeof( fp ) == 0\n"],"correct_choice":"\nfeof(fp)\n"},{"title":"void func(char *p)\n{\n    p=p+1;\n}\nint main()\n{\n    char s[]={'1','2','3','4'};\n    func(s);\n    printf(\"%c\",*s);\n    return 0;\n}\n  以下程序执行后的输出结果为（） ","choices":["\n2\n","\n编译错误\n","\n1\n","\n无法确定\n"],"correct_choice":"\n1\n"},{"title":"  若有以下程序 \n#include<stdio.h>\nmain()\n{ \nint s=0,n;\nfor(n=0;n<4;n++)\n{ \n    switch(n)\n    { \n        default：s+=4;\n        case 1：s+=1;break;\n        case 2：s+=2;break;\n        case 3：s+=3;\n     }\n}\nprintf(\"%d\\n\",s);\n}\n  则程序的输出结果是? ","choices":["\n10\n","\n11\n","\n13\n","\n15\n"],"correct_choice":"\n11\n"},{"title":"union Test\n {\n    char a[4];\n    short b;\n };\n Test test;\n test.a[0]=256;\n test.a[1]=255;\n test.a[2]=254;\n test.a[3]=253;\n printf(\"%d\\n\",test.b);\n 问题：在80X86架构下，输出什么值？","choices":["\n-128\n","\n-256\n","\n128\n","\n256\n"],"correct_choice":"\n-256\n"},{"title":"  请找出下面代码中的所有错误。说明：以下代码是把一个字符串倒序，如“abcd”倒序后变为“dcba”。 \n1 #include \"string.h\"\n2 int main() \n3 {\n4    char *src = \"hello,world\";\n5    char *dest = NULL;\n6    int len = strlen(src);\n7    dest = (char *)malloc(len);\n8    char *d = dest;\n9    char *s = src[len];\n10   while (len-- != 0)\n11      *d++ = *s--;\n12   printf(\"%s\", dest);\n13   return 0;\n14     \n15}\n","choices":["\n第7行要为'\\0'分配一个空间\n","\n第9行改成char * s = &src[len-1]\n","\n第12行前要加上*d = '\\0'\n","\n第13行前要加上free(dest)释放空间\n"],"correct_choice":"\n第7行要为'\\0'分配一个空间\n\n第9行改成char * s = &src[len-1]\n\n第12行前要加上*d = '\\0'\n\n第13行前要加上free(dest)释放空间\n"},{"title":"  下面是折半查找的实现，data是按升序排列的数据，x是查找下标，y是查找的上标， \n  v是查找的数值，返回v在data的索引，若没找到返回-1。代码不正确是____。 \npublic int bsearch(int[] data, int x, int y, int v) {\n    int m;\n    while(x<y){ //1\n        m = x + (y-x)/2; //2\n        if(data[m] == v) return m; //3\n        else if(data[m] > v) y = m; //4\n        else x = m; //5\n    }\n    return -1; //6\n}","choices":["\n1\n","\n2\n","\n3\n","\n4\n","\n5\n","\n6\n"],"correct_choice":"\n1\n\n4\n\n5\n"},{"title":"  阅读下面代码：  class B\n{\npublic:\n   virtual void Fun(){}\n};\nclass D: public B\n{\npublic:\n   void Fun(){}\n};\nD dd;\nB* pb = &dd;\nD* pd = &dd;\npb->Fun();\npd->Fun();   上述例程调用的Fun函数顺序为？（    ） ","choices":["\nB::Fun, D::Fun\n","\nB::Fun, B::Fun\n","\nD::Fun, D::Fun\n","\nD::Fun, B::Fun\n"],"correct_choice":"\nD::Fun, D::Fun\n"},{"title":"\n  下列代码之后的结果为（）\n\n\n  \n    \n  \n\n\n  \n    \n  \n\n\n  \n    \n  \n","choices":["\nabccf\n","\nacdff\n","\nabcde\n","\nadcee\n"],"correct_choice":"\nadcee\n"},{"title":"  以下程序运行后的输出结果是（）。        \nmain()\n{ \nint a=3,b=4,c=5,t=99;\n        \nif(b<a && a<c) t=a;a=c;c=t;\n        \nif(a<c && b<c) t=b;b=a;a=t;\n        \nprintf(\"%d %d %d\\n\",a,b,c);\n}","choices":["\n5399\n","\n4599\n","\n5499\n","\n3599\n"],"correct_choice":"\n4599\n"},{"title":"  在 Turbo C 中，整型数据在内存中占2个字节。请问这句话的说法是正确的吗？  ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"\n   已知：print( )函数是一个类的常成员函数，它无返回值，下列表示中，（ ）是正确的\n","choices":["\nvoid print( ) const\n","\nconst void print( );\n","\nvoid const print( );\n","\nvoid print(const);\n"],"correct_choice":"\nvoid print( ) const\n"},{"title":"  变量z执行结果是（） \nint a=5, b=6, c=12;\nint z= (a * b -c ) / a;\n","choices":["\n6\n","\n3\n","\n4\n","\n5\n"],"correct_choice":"\n3\n"},{"title":"int main()\n{\n    unsigned char i = 1;\n    i -= 4;\n    printf(“the value of i is: % d”, i);\n}\n\n  请问i的值是： ","choices":["\n253\n","\n254\n","\n255\n","\n256\n"],"correct_choice":"\n253\n"},{"title":"  有以下程序 \n#include <stdio.h > \nmain()\n{ \n    double x=2.0,y;\n    if(x<0.0)y=0.0;\n    else if((x<5.0)&&(! x)) y=1.0/(x+2.0);\n    if(x<10.0)y=1.0/x;\n    else  y=10.0;\n    printf(\"％f\\n\",y);\n}\n  程序运行后的输出结果是 ","choices":["\n0.000000\n","\n0.250000\n","\n0.500000\n","\n1.000000\n"],"correct_choice":"\n0.500000\n"},{"title":"  下面程序段包含4个函数,其中具有隐含this指针的是() \nint f1();\nclass T\n{\n    public:static int f2();\n    private:friend int f3();\n    protect:int f4();\n};","choices":["\nf1\n","\nf2\n","\nf3\n","\nf4\n"],"correct_choice":"\nf4\n"},{"title":"  如果A,B,C为布尔型变量，“^”和“v”分别代表布尔类型的“与”和“或”，下面那一项是正确的（） \n\n     I.A^(BvC)=(A^B)v(A^C)  \n     II.Av(B^C)=(AvB)^(AvC)  \n     III.(B^A)vC=Cv(A^B)  \n\n","choices":["\n只有I\n","\n只有II\n","\n只有I和II\n","\nI,II,III；\n"],"correct_choice":"\nI,II,III；\n"},{"title":"  若有以下程序 \n#include <stdio.h>\nmain( )\n{ \n    FILE * fp;\n    int i,a[6]={1,2,3,4,5,6},k;\n    fp = fopen(\"data.dat\",\"w+\");\n    for (i=0;i<6;i++)\n    { \n        fseek(fp,0L,0); \n        fprintf(fp,\"%d\\n\",a[i]); \n        rewind (fp);\n        fscanf(fp,\"%d\",&k);\n    }\n       fclose(fp);\n       printf(\"%d\\n\",k);\n} \n  则程序的输出结果是? ","choices":["\n123456\n","\n1\n","\n6\n","\n21\n"],"correct_choice":"\n6\n"},{"title":"一个类的友元函数能够访问类的","choices":["\n私有成员\n","\n保护成员\n","\n公有成员\n","\n所有成员\n"],"correct_choice":"\n所有成员\n"},{"title":"  下面程序会输出什么： \n\n  static int a=1;\nvoid fun1(void)\n{ \n    a=2;\n}\nvoid fun2(void)\n{\n    int a=3;\n}\nvoid fun3(void)\n{\n    static int a=4;\n}\nint main()\n{\n  printf(“%d”,a);\n  fun1( );\n  printf(“%d”,a);\n  fun2( );\n  printf(“%d”，a）；   \n  fun3( )\n  printf(“%d”,a); \n}\n","choices":["\n1 2 3 4\n","\n1 2 2 2\n","\n1 2 2 4\n","\n1 1 1 4\n"],"correct_choice":"\n1 2 2 2\n"},{"title":"以下字符串定义与赋值中，正确的是（）","choices":["\nchar s[80] = {\"A\", \"B\" ,\"C\"}\n","\nchar s[80]; s = {'A', 'B','C'}\n","\nchar s[80]; s = \"ABC\";\n","\nchar s[80] =\"ABC\";\n"],"correct_choice":"\nchar s[80] =\"ABC\";\n"},{"title":"*p++ 自增p 还是 p 所指向的变量?","choices":["\n先自增p\n","\n先自增p所指向的变量\n","\n和机器相关\n"],"correct_choice":"\n先自增p\n"},{"title":"\n  以下代码实现了从表中删除重复项的功能，请选择其中空白行应填入的正确代码（）\n\ntemplate<typename T>\nvoid removeDuplicates(list<T> &aList)\n{\n\tT curValue;\n\tlist<T>::iterator cur, p;\n\tcur = aList.begin();\n\twhile (cur != aList.end())\n\t{\n\t\tcurValue = *cur;\n\t\t//空白行\n\t\twhile (p != aList.end())\n\t\t{\n\t\t\tif (*p == curValue)\n\t\t\t{\n\t\t\t\t//空白行\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tp++;\n\t\t\t}\n\t\t}\n\t}\n}\n \n\n\n  \n","choices":["\np=curr+1;aList.erase(p++);\n","\np=++curr;aList.erase(p++);\n","\np=curr+1;aList.erase(p);\n","\np=++curr;aList.erase(p);\n"],"correct_choice":"\np=++curr;aList.erase(p++);\n"},{"title":"  下面程序输出是什么 \nint main()\n{\n\tbool first=true;\n\tint sum=0;\n\tint value;\n\tunsigned short i=0xFFFF;\n\tfor (;i>=0;--i)\n\t{\n\t\tif (first)\n\t\t{\n\t\t\tvalue=65536;\n\t\t\tsum+=value%3;\n\t\t\tfirst=false;\n\t\t}\n\t\telse{\n\t\t\tsum+=--value%3;\n\t\t\tif (value<=0)\n\t\t\t{\n\t\t\t\tcout<<sum<<\",\"<<i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}","choices":["\n1,65535\n","\n65535,65535\n","\n65535,65536\n","\n65535,1\n","\n65536,65535\n"],"correct_choice":"\n65536,65535\n"},{"title":"  下列程序编译时会出现错误，请根据行号选择错误位置( ) \n\n  #include <iostream>\nusing namespace std;\nclass A{\n  int a1;\nprotected:\n  int a2;\npublic:\n  int a3;\n};\nclass B: public A{\n  int b1;\nprotected:\n  int b2;\npublic:\n  int b3;\n};\nclass C:private B{\n  int c1;\nprotected:\n  int c2;\npublic:\n  int c3;\n};\nint main(){\n  B obb;\n  C obc;\n  cout<<obb.a1;//1\n  cout<<obb.a2;//2\n  cout<<obb.a3;//3\n  cout<<obc.b1;//4\n  cout<<obc.b2;//5\n  cout<<obc.b3;//6\n  cout<<obc.c3;//7\n  return 0;\n}\n","choices":["\n1,2\n","\n2,5,7\n","\n3,4,7\n","\n4,5,6\n"],"correct_choice":"\n1,2\n\n4,5,6\n"},{"title":"  在以下给出的表达式中，与 do--while(E)语句中的(E)不等价的表达式是（）。  ","choices":["\n(!E==0)\n","\n(E>0||E<0)\n","\n(E==0)\n","\n(E!=0)\n"],"correct_choice":"\n(E==0)\n"},{"title":"#include <iostream>\nusing namespace std;\nint f(int n){\n  if (n==1)\n    return 1;\n    else\n    return (f(n-1)+n*n*n);\n}\nint main(){\n  int s=f(3);\n  cout<<s<<endl;\n  return 0;\n}\n  运行结果是？ ","choices":["\n8\n","\n9\n","\n27\n","\n36\n"],"correct_choice":"\n36\n"},{"title":"下面选项中关于\n\"\n文件指针\n\"\n概念的叙述正确的是（）","choices":["\n文件指针是程序中用FILE定义的指针变量\n","\n文件指针就是文件位置指针，表示当前读写数据的位置\n","\n文件指针指向文件在计算机中的存储位置\n","\n把文件指针传给fscanf函数，就可以向文本文件中写入任意的字符\n"],"correct_choice":"\n文件指针是程序中用FILE定义的指针变量\n"},{"title":"  以下正确的叙述有（  ）\n  \n","choices":["\n在 C 程序中，每行只能写一条语句\n","\n在 C 程序中，一条语句只写在一行上\n","\n在 C 程序中，多条语句必须写在多行上\n","\n在 C 程序中，多条语句可以写在一行上\n"],"correct_choice":"\n在 C 程序中，多条语句可以写在一行上\n"},{"title":"若用数组名作为函数调用的实参，传递给形参的是（   ）","choices":["\n数组的首地址\n","\n数组中第一个元素的值\n","\n数组中全部元素的值\n","\n数组元素的个数\n"],"correct_choice":"\n数组的首地址\n"},{"title":"C 语言程序中的基本功能模块为（   ）。","choices":["\n表达式\n","\n标识符\n","\n语句\n","\n函数\n"],"correct_choice":"\n函数\n"},{"title":"当说明一个结构体变量时系统分配给它的内存是（        ）","choices":["\n各成员所需内存的总和\n","\n结构中第一个成员所需内存量\n","\n成员中占内存量最大者所需的容量\n","\n结构中最后一个成员所需内存量\n"],"correct_choice":"\n各成员所需内存的总和\n"},{"title":"若有以下定义语句double a[8]，*p=a；int i=5；对数组元素错误的引用是（        ）","choices":["\n*a\n","\na[5]\n","\n*（p+1）\n","\np[8]\n"],"correct_choice":"\np[8]\n"},{"title":"下面关于typedef char *String_t; 和#define String_d char * 这两句在使用上的区别描述错误的是？","choices":["\ntypedef char *String_t 定义了一个新的类型别名，有类型检查\n","\n#define String_d char * 只是做了个简单的替换，无类型检查\n","\n前者在预编译的时候处理，后者在编译的时候处理\n","\n同时定义多个变量的时候有区别，主要区别在于这种使用方式String_t a,b; String_d c,d; a,b ,c 都是char*类型，而d 为char 类型\n"],"correct_choice":"\n前者在预编译的时候处理，后者在编译的时候处理\n"},{"title":"64位系统下，*p=NULL和*p=new char[100]， sizeof(p)各为多少？","choices":["\n4,4\n","\n4,8\n","\n8,4\n","\n8,8\n"],"correct_choice":"\n8,8\n"},{"title":"  下面程序输出结果为？ \n#include<iostream.h>\n#define SUB(X,Y) (X)*Y\nint main(){\n    int a=3,b=4;\n    cout<<SUB（a++,++b);\n    return 0;\n}","choices":["\n15\n","\n16\n","\n20\n","\n12\n"],"correct_choice":"\n15\n"},{"title":"  以下prim函数的功能是分解质因数。括号内的内容应该为？ \nvoid prim(int m, int n)\n {\n     if (m >= n)\n     {\n         while (        ) n++;\n         (     );\n         prim(m, n);\n         cout << n << endl;\n     }\n }\n","choices":["\nm/n   m/=n\n","\nm/n   m%=n\n","\nm%n m%=n\n","\nm%n m/=n\n"],"correct_choice":"\nm%n m/=n\n"},{"title":"short a[10] = {0};sizeof(a)返回:()","choices":["\n2\n","\n20\n","\n4\n","\n10\n"],"correct_choice":"\n20\n"},{"title":"void Test(void)\n{\n    char *str = (char *) malloc(100);\n    strcpy(str, “hello”);\n    free(str);\n    if (str != NULL)\n    {\n        strcpy(str, “world”);\n        printf(str);\n    }\n}\n  请问运行Test函数会有什么样的结果？","choices":["\nhello\n","\nworld\n","\nhelloworld\n","\n未定义行为\n"],"correct_choice":"\n未定义行为\n"},{"title":"若PAT是一个类，则程序运行时，语句“PAT(*ad)[3];”调用PAT的构造函数的次数是（ ）。","choices":["\n2\n","\n3\n","\n0\n","\n1\n"],"correct_choice":"\n0\n"},{"title":"\n  下面的程序中，\n  int32-t\n  表示一个有符号的\n  32\n  位整数，程序的入口是\n  main\n  函数，问最终\n  res\n  的结果是多少？\n\n\n  \n    \n    \n  \n","choices":["\n–(2^31+2^30+…+2^2+2^1+2^0)\n","\n0\n","\n-1\n","\n程序会死循环\n"],"correct_choice":"\n程序会死循环\n"},{"title":"Consider the following definition of a recursive function, power, that\nwill perform exponentiation. int power(int b, int e) { \n    if (e == 0) \n        return 1; \n    if (e %2 == 0) \n        return power (b * b, e / 2); \n    return b * power(b * b, e / 2); \n}\n Asymptotically (渐进地) in terms of the exponent e, the number of calls to\npower that occur as a result of the call power(b, e) is","choices":["\nlogarithmic\n","\nlinear\n","\nquadratic\n","\nexponential\n"],"correct_choice":"\nlogarithmic\n"},{"title":"阅读下面代码，程序会打印出来的值是？\n#include <stdio.h>\nvoid f(char**p){\n      *p +=2;\n}\nmain()\n{\n    char *a[] = {\"123\",\"abc\",\"456\"},**p;\n    p = a;\n    f(p);\n    printf(\"%s\\r\\n\",*p);\n}","choices":["\n123\n","\nabc\n","\n456\n","\n3\n"],"correct_choice":"\n3\n"},{"title":"下面有关C++类说法正确的是()","choices":["\n对基类成员的访问必须是无二义性的\n","\n基类的公有成员在派生类中仍然是公有的\n","\nthis指针保证基类保护成员在子类中可以被访问\n","\n派生类一般都用公有派生\n"],"correct_choice":"\n对基类成员的访问必须是无二义性的\n\n派生类一般都用公有派生\n"},{"title":"\n  创建对象时系统自动调用相应的构造函数为对象初始化.这句话是否正确 \n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"  如果定义如下类：    class Empty{}    请选择编译器为之生成的函数有哪些？ （    ）        Empty() { … }    Empty(const Empty& rhs){ … }    Empty& operator=(const Empty& rhs) { … }    ~Empty() { … } ","choices":["\n124\n","\n1234\n","\n123\n","\n14\n"],"correct_choice":"\n1234\n"},{"title":"  以下程序的输出结果是（ ）。   main()\n{ char\ncf[3][5]={\"AAAA\",\"BBB\",\"CC\"};\nprintf(\"\\\"%s\\\"\\n\",ch[1]);\n}","choices":["\n\"AAAA\"\n","\n\"BBB\"\n","\n\"BBBCC\"\n","\n\"CC\"\n"],"correct_choice":"\n\"BBB\"\n"},{"title":"  在C++里，堆中存储的数据是（）  ","choices":["\n局部变量\n","\n函数返回值\n","\n函数参数\n","\nnew和malloc申请的内存\n"],"correct_choice":"\nnew和malloc申请的内存\n"},{"title":"  \"++\"运算符的优先级比\"+\"运算符的优先低。请问这句话的说法是正确的吗？  ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"单链表必须从第一个数据元素开始访问表中的其它数据元素。（    ）","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"  以下程序段的输出结果为（）。    for(i=4;i>1;i--)    for(j=1;j<i;j++)    putchar('#');     ","choices":["\n无\n","\n######\n","\n#\n","\n###\n"],"correct_choice":"\n######\n"},{"title":"在C++中使用流进行输入输出，其中用于屏幕输出的对象是（        ）","choices":["\ncerr\n","\ncin\n","\ncout\n","\ncfile\n"],"correct_choice":"\ncout\n"},{"title":"  32位环境下,给定结构体\n\n\n  Struct A\n\n\n  {\n\n\n   Char t:4;\n\n\n   Char k:4;\n\n\n   Unsigned short i:8;\n\n\n   Unsigned long m;\n\n\n  };\n\n\n  问\n  sizeof\n  （\n  A\n  ）\n  =_____;\n","choices":["\n7\n","\n6\n","\n8\n","\n上述答案都不对\n"],"correct_choice":"\n8\n"},{"title":"  假定变量I,f,d数据类型分别为int,float和double(int用补码表示，float和double分别用IEEE754单精度和双精度浮\n  点数据格式表示)，已知i=785,f=1.5678e^3,d=1.5e^100若在32位机器\n  中执行下列关系表达式，则结果为真是（）\n\n\n     (I)i==(int)(float)I  \n     (II)f==(float)(int)f      \n     (III)f==(float)(double) f      \n     (IV)(d+f)-d==f  \n","choices":["\n仅I和II\n","\n仅I和III\n","\n仅II和III\n","\n仅III和IV\n"],"correct_choice":"\n仅I和III\n"},{"title":"  下列代码的运行结果是（）    void main()\n{\n    Stack S;\n    Char x,y;\n    InitStack(S);\n    x='n';y='g';\n    Push(S,x);Push(S,'i');Push(S,y);\n    Pop(S,x);Push(S,'r');Push(S,'t');Push(S,x);\n    Pop(S,x);Push(S,' s');\n    while(!StackEmpty(S)){Pop(S,y);printf(y);};\n        Printf(x);\n} ","choices":["\ngstrin\n","\nstring\n","\nsrting\n","\nstirng\n"],"correct_choice":"\nstring\n"},{"title":"  有如下程序段： \nchar a[] = \"xyz\", b[] = {'x', 'y', 'z'};\nif (strlen(a) > strlen(b))\n    printf(\"a > b\\n\");\nelse\n    printf(\"a <= b\\n\");\n\n\n  则程序输出： ","choices":["\na>b\n","\na<=b\n","\n编译不通过\n","\n以上都不对\n"],"correct_choice":"\na<=b\n"},{"title":"  如果类的定义如下，则以下代码正确并且是良好编程风格的是： \nclass Object\n{\n  public:\n    virtual ~Object() {}\n    //…\n};\n\n","choices":["\nstd::auto_ptr<Object> pObj(new Object);\n","\nstd::vector<std::auto_ptr<Object*> > object_vector;\n","\nstd::auto_ptr<Object*> pObj(new Object);\n","\nstd::vector<std::auto_ptr<Object> > object_vector;\n"],"correct_choice":"\nstd::auto_ptr<Object> pObj(new Object);\n"},{"title":"假设在一个 32 位 little endian 的机器上运行下面的程序，结果是多少？\n#include <stdio.h>\nint main(){\n  long long a = 1, b = 2, c = 3; \n  printf(\"%d %d %d\\n\", a, b, c);  \n return 0;\n}","choices":["\n1,2,3\n","\n1,0,2\n","\n1,3,2\n","\n3,2,1\n"],"correct_choice":"\n1,0,2\n"},{"title":"通用多态是指","choices":["\n强制多态和包含多态\n","\n重载多态和强制多态\n","\n参数多态和重载多态\n","\n包含多态和参数多态\n"],"correct_choice":"\n包含多态和参数多态\n"},{"title":"下面的说法那个正确 #define NUMA 10000000\n#define NUMB 1000\nint a[NUMA], b[NUMB];\n \nvoid pa()\n{\n    int i, j;\n    for(i = 0; i < NUMB; ++i) \n        for(j = 0; j < NUMA; ++j) \n            ++a[j]; \n} \nvoid pb() \n{ \n    int i, j; \n    for(i = 0; i < NUMA; ++i) \n        for(j = 0; j < NUMB; ++j) \n            ++b[j]; \n} \n","choices":["\npa 和 pb 运行的一样快\n","\npa 比 pb 快\n","\npb 比 pa 快\n","\n无法判断\n"],"correct_choice":"\npb 比 pa 快\n"},{"title":"  C 语言的注释定界符是（）。 ","choices":["\n{ }\n","\n[ ]\n","\n\\* *\\\n","\n/* */\n"],"correct_choice":"\n/* */\n"},{"title":"  在C语言中，char型数据在内存中的存储形式是（）  。 ","choices":["\n补码\n","\n反码\n","\n源码\n","\nASCII码\n"],"correct_choice":"\nASCII码\n"},{"title":"  下面程序的功能是什么? \nmain()\n{ \n    long num=0;\n    FILE *fp:\n    if((fp=fopen(\"fname.dat\",\"r\"))==NULL)\n    {\n        printf(\"Can’t open the file! \");\n        exit(0):\n     }\n     while(!feof(fp))\n     { \n        fgetc(fp);\n        num++；\n     }\n     printf(\"num=%d\\n\",num)；\n     fclose(fp)；\n}\n\n\n","choices":["\n拷贝文件\n","\n统计文件的字符数\n","\n统计文件的单词数\n","\n统计文件的行数\n"],"correct_choice":"\n统计文件的字符数\n"},{"title":"  若 ch 为 char 型变量，k 为 int 型变量（已知字符 a 的 ASCII 十进制代码为97），     则以下程序段的执行结果是（）。    ch='a'; k=12; printf(\"%x,%o,\",ch,ch,k);    printf(\"k=%%d\\n\",k);     ","choices":["\n因变量类型与格式描述符的类型不匹配，输出无定值\n","\n输出项与格式描述符个数不符，输出为零值或不定值\n","\n61,141,k=%d\n","\n61,141,k=%12\n"],"correct_choice":"\n61,141,k=%d\n"},{"title":"  下列字符序列中,不可用作 C 语言标识符的是（）。  ","choices":["\nb70\n","\n#ab\n","\nsymbol\n","\na_1\n"],"correct_choice":"\n#ab\n"},{"title":"\n  当输入数值数据时,对于整型变量只能输入整型值;对于实型变量只能输入实型值。\n\n\n  以上叙述是否正确？\n\n\n  \n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"一个C程序的执行是从（）","choices":["\n本程序的main函数开始，到main函数结束\n","\n本程序文件的第一个函数开始，到本程序文件的最后一个函数结束\n","\n本程序的main函数开始，到本程序文件的最后一个函数结束\n","\n本程序文件的第一个函数开始，到本程序的main函数结束\n"],"correct_choice":"\n本程序的main函数开始，到main函数结束\n"},{"title":"面向对象程序设计中，对象=（   ）","choices":["\n对象+消息\n","\n数据结构+算法\n","\n函数+调用\n","\n输入+处理+输出\n"],"correct_choice":"\n对象+消息\n"},{"title":"在C++中，下列不正确的转义字符是（  ）","choices":["\n'\\\\'\n","\n'074'\n","\n'\\t'\n","\n'\\0'\n"],"correct_choice":"\n'074'\n"},{"title":"在C语言中，设有数组定义：char arrays[]=\"China\"；则数组array所占用的空间为（）。","choices":["\n4个字节\n","\n5个字节\n","\n6个字节\n","\n7个字节\n"],"correct_choice":"\n6个字节\n"},{"title":"以下关于函数调用的说法哪个是正确的？","choices":["\n传值后对形参的修改会改变实参的值\n","\n传地址后实参和形参指向不同的对象\n","\n传引用后形参和实参是不同的对象\n","\n以上都不对\n"],"correct_choice":"\n以上都不对\n"},{"title":"判断下述语句的对错：MFC中CString是类型安全的类。\n","choices":["\n对\n","\n错\n"],"correct_choice":"\n对\n"},{"title":"\n  下面这个\n  C++\n  进程运行时，描述正确的是（）\n\n\n  \n    \n    \n  \n","choices":["\n保存在堆中的数据有：*b,*obj;保存在栈中的数据有：c,lhs,rhs,obj2,aa\n","\n保存在堆中的数据有：*b,*obj;保存在栈中的数据有：str,c,lhs,rhs,obj2,aa\n","\n保存在堆中的数据有：*b,*obj2;保存在栈中的数据有：c,lhs,rhs,obj,aa\n","\n保存在堆中的数据有：*b,*obj,*str;保存在栈中的数据有：c,lhs,rhs, aa\n"],"correct_choice":"\n保存在堆中的数据有：*b,*obj;保存在栈中的数据有：c,lhs,rhs,obj2,aa\n"},{"title":"  写出下列代码的输出内容（） \n#include<stdio.h>\nint inc(int a)\n{\n   return (++a);\n}\nint multi(int *a,int *b,int *c)\n{ \n  return (*c=*a* *b);\n}\ntypedef int (*FUNC1)(int in);\ntypedef int (*FUNC2)(int*,int*,int*);\nvoid show(FUNC2 fun,int arg1,int *arg2)\n{\n  FUNC1 p=&inc;\n  int temp=p(arg1);\n  fun(&temp,&arg1,arg2);\n  printf(\"%d\\n\",*arg2);\n}\nint main()\n{ \n   int a;\n   show(multi,10,&a);\n   return 0;\n}","choices":["\n100\n","\n110\n","\n120\n","\n0\n"],"correct_choice":"\n110\n"},{"title":"有如下程序段：\nvoid GetMemeory(char* p)\n{\n    p = (char*) malloc (100);\n｝\nvoid test()\n{\n    char *str=NULL;\n    GetMemory(str);\n    strcpy(str,”Thunder”);\n    strcat(str+2, “Downloader”);\n    printf(str);\n}\n 请问运行Test函数结果是：","choices":["\nThunder Downloader\n","\nunder Downloader\n","\nThunderownloader\n","\n程序崩溃\n"],"correct_choice":"\n程序崩溃\n"},{"title":"int Function(unsigned int n) {\n\t\n\t\tn = (n & 0x55555555) + ((n >> 1) & 0x55555555);\n\t\tn = (n & 0x33333333) + ((n >> 2) & 0x33333333);\n\t\tn = (n & 0x0f0f0f0f) + ((n >> 4) & 0x0f0f0f0f);\n\t\tn = (n & 0x00ff00ff) + ((n >> 8) & 0x00ff00ff);\n\t\tn = (n & 0x0000ffff) + ((n >> 16) & 0x0000ffff);\n\n\t\treturn n;\n}\n\n  输入参数为197时，函数返回多少？","choices":["\n2\n","\n3\n","\n4\n","\n5\n"],"correct_choice":"\n4\n"},{"title":"通过TCP协议建立连接的两方，如果一方突然发生故障（比如断电）断开了连接，那么一下说法错误的是（）?","choices":["\nTCP协议会自动检测连接是否断开，经过一段时间后另外一段会收到TCP连接断开的通知\n","\n如果设置了TCP_KEEPALIVE，那么对端能够马上收到断开的信息\n","\n可以自己实现心跳检测的方法来确定对方是不是已经断开连接\n","\n另外一方能够马上知道连接已经断开\n"],"correct_choice":"\nTCP协议会自动检测连接是否断开，经过一段时间后另外一段会收到TCP连接断开的通知\n\n如果设置了TCP_KEEPALIVE，那么对端能够马上收到断开的信息\n\n另外一方能够马上知道连接已经断开\n"},{"title":"对类成员访问权限的控制，是通过设置成员的访问控制属性实现的，下列不是访问控制属性的是(    ) \n","choices":["\n公有类型\n","\n私有类型\n","\n保护类型\n","\n友元类型\n"],"correct_choice":"\n友元类型\n"},{"title":"在C++语言中，以下说法正确的是（）","choices":["\n多态是通过虚表实现的\n","\n构造函数可以声明为虚函数\n","\n析构函数不可以声明为虚函数\n","\n抽象类中至少包含一个纯虚函数\n"],"correct_choice":"\n多态是通过虚表实现的\n\n抽象类中至少包含一个纯虚函数\n"},{"title":"字符串\"a+b=12\\n\"的长度为（   ）。","choices":["\n6\n","\n7\n","\n8\n","\n9\n"],"correct_choice":"\n7\n"},{"title":"\n  在C++中,一个程序无论由多少个源程序文件组成,其中有且仅有一个主函数main().说法是否正确？\n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"  有以下程序 \n#include<stdio.h>\nmain(){\n    char x=2,y=2,z;\n    z=(y<<1)&(x>>1);\n    printf(\"%d\\n\",z);\n｝\n  程序的输出结果是？ ","choices":["\n1\n","\n0\n","\n4\n","\n8\n"],"correct_choice":"\n0\n"},{"title":"\n  有\n  函数调用语句：\n  func(rec1,rec2+rec3,(rec4,rec5))\n  ；\n  ，此语句的实参数为\n  ________\n  （）\n\n\n  \n","choices":["\n3\n","\n4\n","\n5\n","\n有语法错误\n"],"correct_choice":"\n3\n"},{"title":"  若有 int i=10,j=2; 则执行完 i*=j+8;后 i 的值为28。请问这句话的说法是正确的吗？  ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"  以下程序段的运行结果是（） \n\n     char str[10] = \"output\";  \n     printf(\"\\\"%s\\\"\\n\", str);  \n","choices":["\noutput\n","\n\"output\"\n","\n\\\"output\\\"\n","\n编译错误\n"],"correct_choice":"\n\"output\"\n"},{"title":"  若 a 为 int 类型,且其值为3,则执行完表达式 a+=a-=a*a 后,a 的值是（）。  ","choices":["\n-3\n","\n9\n","\n-12\n","\n6\n"],"correct_choice":"\n-12\n"},{"title":"  若有以下程序 \nstruct st{ int n; struct st * nest; };\nstruct st a[3]={ 5,&a[1],7,&a[2],9, '\\0' },*p;\np=&a[0];\n  则以下选项中值为6的表达式是 ","choices":["\np->n\n","\n(*p).n\n","\np->n++\n","\n++(p->n )\n"],"correct_choice":"\n++(p->n )\n"},{"title":"下面代码的输出结果是？\nvoid main(void)\n{\n     int a[5]={1,2,3,4,5};\n     int *ptr=(int *)(&a+1);\n     printf(\"%d,%d\",*(a+1),*(ptr-1));\n}\n","choices":["\n1，2\n","\n2，4\n","\n2，5\n","\n出错\n"],"correct_choice":"\n2，5\n"},{"title":"int fun(int a){\n a^=(1<<5)-1;\n return a;\n}\n  fun(21)运行结果是() ","choices":["\n10\n","\n5\n","\n3\n","\n8\n"],"correct_choice":"\n10\n"},{"title":"  有一个如下的结构体： \nstruct A{\n long a1;\n short a2;\n int a3;\n int *a4;\n};\n  请问在64位编译器下用sizeof(struct A)计算出的大小是多少？ ","choices":["\n24\n","\n28\n","\n16\n","\n18\n"],"correct_choice":"\n24\n"},{"title":"char *p, *q;\np = (char*) malloc(sizeof(char) * 20);\nq = p;\nscanf(“%s %s”, p, q);\nprintf(“%s %s\\n”, p, q);\n  若从键盘输入：abc def， 则输出结果是","choices":["\ndef def\n","\nabc def\n","\nabc d\n","\nd d\n"],"correct_choice":"\ndef def\n"},{"title":"  某32位系统下, C++程序如下所示，sizeof 的值应为？ \nchar str[] = “http://www.renren.com”  （长度为21）\nchar *p = str ; \n\n  请计算 \nsizeof (str ) = ？（1）\nsizeof ( p ) = ？（2）\nvoid Foo ( char str[100]){\n    sizeof( str ) = ？（3）\n}\nvoid *p = malloc( 100 );\nsizeof ( p ) = ？（4）\n\n","choices":["\n22, 22, 100, 100\n","\n4, 4, 4, 4\n","\n22, 4, 4, 4\n","\n22, 4, 100, 4\n"],"correct_choice":"\n22, 4, 4, 4\n"},{"title":"下列关于C/C++的宏定义的说法中，不正确的是：","choices":["\n宏定义的常量更容易理解，如果可以使用宏定义常量的话，要避免使用 const常量\n","\n宏的嵌套定义过多会影响程序的可读性，而且很容易出错\n","\n相对于函数调用，宏定义可以提高程序的运行效率\n","\n宏定义不检查参数正确性，这样会有安全隐患\n"],"correct_choice":"\n宏定义的常量更容易理解，如果可以使用宏定义常量的话，要避免使用 const常量\n"},{"title":"对以下程序，正确的输出结果是() <stdio.h>#include <stdio.h>\n#define SUB(x,y) x-y \n#define ACCESS_BEFORE(element,offset,value) *SUB(&element, offset) = value \nint main() { \n    int array[10] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 }; \n    int i; \n    ACCESS_BEFORE(array[5], 4, 6); \n    printf(\"array: \"); \n    for (i = 0; i < 10; ++i) { \n        printf(\"%d\", array[i]); \n    } \n    printf(\"\\n\"); \n    return (0); \n}\n</stdio.h>","choices":["\narray: 1 6 3 4 5 6 7 8 9 10\n","\narray: 6 2 3 4 5 6 7 8 9 10\n","\n程序可以正确编译连接，但是运行时会崩溃\n","\n程序语法错误，编译不成功\n"],"correct_choice":"\n程序语法错误，编译不成功\n"},{"title":"下列 C 代码中，不属于未定义行为的有___","choices":["\nint i=0;i=(i++);\n","\nchar *p=”hello”;p[1]=’E’;\n","\nchar *p=”hello”;char ch=*p++;\n","\nint i=0;printf(“%d%d\\n”,i++,i--);\n","\n都是未定义行为\n","\n都不是未定义行为\n"],"correct_choice":"\nchar *p=”hello”;char ch=*p++;\n"},{"title":"C++中，关于new运算符的错误的描述是？\n","choices":["\n运算符new可以用来动态创建对象和对象数组\n","\n使用运算符new创建对象时，会调用类的构造函数\n","\n使用new运算符创建的对象使用完成后会自动销毁并回收\n","\n使用运算符new创建对象数组时必须定义初始值\n"],"correct_choice":"\n使用new运算符创建的对象使用完成后会自动销毁并回收\n\n使用运算符new创建对象数组时必须定义初始值\n"},{"title":"对重载函数形象的描述中，正确的是（）","choices":["\n参数的类型可能不同\n","\n参数的顺序可能不同\n","\n函数的返回值类型可能不同\n","\n参数的个数可能不同\n"],"correct_choice":"\n参数的类型可能不同\n\n参数的顺序可能不同\n\n函数的返回值类型可能不同\n\n参数的个数可能不同\n"},{"title":"  参照代码: \nclass ClassA\n{\n    public:\n    virtual ~ ClassA()\n    {\n    }\n    virtual void FunctionA()\n    {\n    }\n};\nclass ClassB\n{\n    public:\n    virtual void FunctionB()\n    {\n    }\n};\nclass ClassC: public ClassA, public ClassB\n{\n    public:\n};\nClassC aObject;\nClassA *pA = &aObject;\nClassB *pB = &aObject;\nClassC *pC = &aObject;\n\n  假设定义了ClassA* pA2,下面正确的代码是:","choices":["\npA2=static_cast<ClassA*>(pB);\n","\nvoid* pVoid=static_cast<void*>(pB);\npA2=static_cast<ClassA*>(pVoid);\n","\npA2=pB;\n","\npA2=static_cast<ClassA*>(static_cast<ClassC*>(pB));\n"],"correct_choice":"\nvoid* pVoid=static_cast<void*>(pB);\npA2=static_cast<ClassA*>(pVoid);\n\npA2=static_cast<ClassA*>(static_cast<ClassC*>(pB));\n"},{"title":"  下列运算符中优先级最高的是（）。 ","choices":["\n<\n","\n+\n","\n&&\n","\n!=\n"],"correct_choice":"\n+\n"},{"title":"\n  执行完下列语句段后，i值为：\n\n  int f(int x) {  \n      return ((x>0) ? x* f(x-1):2); \n  }  \n  int i ;  \n  i =f(f(1)); ","choices":["\n2\n","\n4\n","\n8\n","\n无限递归\n"],"correct_choice":"\n4\n"},{"title":"  以下程序能对两个整型变量的值进行交换。以下正确的说法是（        ） \n  main( ) \n  { \n  swap(int p,int q); \n  int a=10,b=20; \n  printf(\"(1)a=%d,b=%d\\n\",a,b); \n  swap(&a,&b); \n  printf(\"(2)a=%d,b=%d\\n\",a,b);} \n  swap(int p,int q){ \n  int t; \n  t=p;p=q;q=t; \n  } ","choices":["\n该程序完全正确\n","\n该程序有错，只要将语句swap（&a，&b）；中参数改为a，b即可\n","\n该程序有错，只要将swap（）函数中的参数p、q及t均定义为指针变量即可\n","\n以上说法都不正确\n"],"correct_choice":"\n以上说法都不正确\n"},{"title":"类的私有成员只能被类中的成员函数访问，任何类以外的函数对它们的访问都是非法的。","choices":["\nT\n","\nF\n"],"correct_choice":"\nF\n"},{"title":"\n  源程序中凡是行首以#标识的控制行都是预处理指令。以上描述是否正确？\n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"\n  按照标识符的要求，（ ）符号不能组成标识符。\n\n\n  \n","choices":["\n连接符\n","\n下划线\n","\n大小写字母\n","\n数字字符\n"],"correct_choice":"\n连接符\n"},{"title":"  有以下程序 \n#include <stdio.h>\nmain( )\n{\n    int a [ ] ＝｛10,20,30,40｝,﹡p ＝ a,i;\n    for(i ＝ 0;i <＝ 3;i + +)\n    {\n        a [i]＝﹡p;p + +;\n    }\n    printf(\"%d＼n\",a [2]);\n} \n  程序运行后的输出结果是？ ","choices":["\n10\n","\n20\n","\n30\n","\n40\n"],"correct_choice":"\n30\n"},{"title":"  int i,j,a[2][3];按照数组 a 的元素在内存的排列次序,不能将数1,2,3,4,5,6存入 a 数组的是（）。  ","choices":["\nfor(i=0;i<2;i++)for(j=0;j<3;j++)a[i][j]=i*3+j+1;\n","\nfor(i=0;i<3;i++)for(j=0;j<2;j++)a[j][i]=j*3+i+1;\n","\nfor(i=0;i<6;i++)a[i/3][i%3]=i+1;\n","\nfor(i=1;i<=6;i++)a[i][i]=i;\n"],"correct_choice":"\nfor(i=1;i<=6;i++)a[i][i]=i;\n"},{"title":"  在C语言中，形参的缺省存储类是（  ）。  ","choices":["\nauto\n","\nregister\n","\nstatic\n","\nextern\n"],"correct_choice":"\nauto\n"},{"title":"C++程序的基本模块为（    ）。","choices":["\n表达式\n","\n标识符\n","\n语句\n","\n函数\n"],"correct_choice":"\n函数\n"},{"title":"int i=10，j=10，k=3；k*=i+j\n  k最后的值是？ ","choices":["\n60\n","\n40\n","\n50\n","\n23\n"],"correct_choice":"\n60\n"},{"title":"以下程序打印的两个字符分别是（）\n\n1.typedef struct object object\n2.struct object\n3.{\n4.    char data[3];\n5.};\n6.\n7.int main(void)\n8.{\n9.    object obj_array[3]={{'a','b','c'},\n10.                     {'d','e','f'},\n11.                     {'g','h','i'}};\n12.    object*cur=obj_array;\n13.    printf(\"%c %c\\n\",*(char*)((char *)(cur)+2),*(char*)(cur+2));\n14.\n15.    return 0\n16.}\n\n","choices":["\nc g\n","\nb d\n","\ng g\n","\ng c\n"],"correct_choice":"\nc g\n"},{"title":"  有以下程序 \n#include <stdio. h>\nmain()\n{ \n    int a[ 3 ] = {0}, i , j, k = 2;\n    for( i = 0; i < k; i + +)\n    for( j = 0; j < k; j + +) \n        a[ j ] = a[ i ] + 1;\n    printf(\"%d\\n\" , a[ 1 ]);\n}\n  程序运行后的输出结果是？ ","choices":["\n0\n","\n1\n","\n2\n","\n3\n"],"correct_choice":"\n3\n"},{"title":"struct T {\n    char a;\n    int *d;\n    int b;\n    int c:16;\n    double e;\n};\nT *p;\n\n  在64位系统以及64位编译器下，以下描述正确的是","choices":["\nsizeof(p) == 24\n","\nsizeof(*p) == 24\n","\nsizeof(p->a) == 1\n","\nsizeof(p->e) == 4\n"],"correct_choice":"\nsizeof(p->a) == 1\n"},{"title":"  由一下程序 \n#include <stdio. h>\nint f( int x);\nmain()\n{ \n    int a, b = 0;\n    for ( a = 0; a < 3; a += 1)\n    { \n        b += f(a) ; \n        putchar('A'+b) ;\n    }\n}\nint f( int x)\n{ \n    return x*x + 1 ;\n}\n  程序运行后输出结果是？ ","choices":["\nABE\n","\nBCD\n","\nBDI\n","\nBCF\n"],"correct_choice":"\nBDI\n"},{"title":"  以下程序的运行结果是： \nint main(void){\n int m=5;\n if(m++>5)cout<<m<<endl;\n else cout<<--m;\n}","choices":["\n4\n","\n5\n","\n7\n","\n6\n"],"correct_choice":"\n5\n"},{"title":"以下不是double compare(int,int)的重载函数的是()","choices":["\nint compare(double,double)\n","\ndouble compare(double,double)\n","\ndouble compare(double,int)\n","\nint compare(int,int)\n"],"correct_choice":"\nint compare(int,int)\n"},{"title":"  若int\n  占\n  2\n  个字节，\n  char\n  占\n  1\n  个字节，\n  float\n  占\n  4\n  个字节，\n  sizeof(xc)\n  大小是：      \n  struct stu \n  { \n  union{ \n  char bj[5]; \n  int bh[2]; \n  } class; \n  char xm[8]; \n  float cj; \n  }xc; ","choices":["\n16\n","\n18\n","\n22\n","\n20\n"],"correct_choice":"\n20\n"},{"title":"  类成员函数的重载、覆盖和隐藏区别描述正确的有？ ","choices":["\n覆盖是指在同一个类中名字相同，参数不同\n","\n重载是指派生类函数覆盖基类函数，函数相同，参数相同，基类函数必须有virtual关键字\n","\n派生类函数与基类函数相同，但是参数不同，会\"隐藏\"父类函数\n","\n函数名字相同，参数相同，基类无virtual关键字的派生类的函数会\"隐藏\"父类函数\n"],"correct_choice":"\n派生类函数与基类函数相同，但是参数不同，会\"隐藏\"父类函数\n\n函数名字相同，参数相同，基类无virtual关键字的派生类的函数会\"隐藏\"父类函数\n"},{"title":"下列说法错误的有（ ）","choices":["\n在类方法中可用this来调用本类的类方法\n","\n在类方法中调用本类的类方法时可直接调用\n","\n在类方法中只能调用本类中的类方法\n","\n在类方法中绝对不能调用实例方法\n"],"correct_choice":"\n在类方法中可用this来调用本类的类方法\n\n在类方法中只能调用本类中的类方法\n\n在类方法中绝对不能调用实例方法\n"},{"title":"以下选项如果可以初始化正确,那么就会初始化正确,那么以下哪种语法在C++中初始化以后编译会错误？其中X为一C++类","choices":["\nconst  X * x\n","\nX const * x\n","\nconst X const * x\n","\nX * const x\n"],"correct_choice":"\nconst X const * x\n\nX * const x\n"},{"title":"  当n=5时，下列函数的返回值是： \nint foo(int n){\n if(n<2){\n   return n;\n}\n else\n   return 2*foo(n-1)+foo(n-2);\n}\n","choices":["\n5\n","\n11\n","\n29\n","\n10\n"],"correct_choice":"\n29\n"},{"title":"\n  在32位系统下下面程序输出的是？\n\n#include<stdio.h>\nunion uni\n {\n     int a;\n     char b;\n };\n struct str\n {\n     int a;\n     char b;\n };\n int main(int argc, char **argv)\n {\n     printf(\"%d %d\\n\", sizeof(union uni), sizeof(struct str));\n     return 0;\n }\n\n  \n","choices":["\n4 4\n","\n4 8\n","\n8 4\n","\n8 8\n"],"correct_choice":"\n4 8\n"},{"title":"  设 int x=1, y=1; 表达式(!x||y--)的值是（）。 ","choices":["\n0\n","\n1\n","\n2\n","\n-1\n"],"correct_choice":"\n1\n"},{"title":"以下说法中正确的是（ ）。","choices":["\nC++程序中的main()函数必须放在程序的开始部分\n","\nC++程序的入口函数是main函数\n","\n在C++程序中，要调用的函数必须在main()函数中\n"],"correct_choice":"\nC++程序的入口函数是main函数\n"},{"title":"\n  continue是C++语言中的关键字.这句话是否正确？\n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"  break 语句可用于循环体内,它将退出该循环体。请问这句话的说法是正确的吗？  ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"  下面选择中正确的赋值语句是（）。    (设 chara[5],*p=a;)  ","choices":["\np=\"abcd\";\n","\na=\"abcd\";\n","\n*p=\"abcd\";\n","\n*a=\"abcd\";\n"],"correct_choice":"\np=\"abcd\";\n"},{"title":"  若使用一维数组名作函数实参,则以下正确的说法是（）。  ","choices":["\n必须在主调函数中说明此数组的大小\n","\n实参数组类型与形参数组类型可以不匹配\n","\n在被调用函数中,不需要考虑形参数组的大小\n","\n实参数组名与形参数组名必须一致\n"],"correct_choice":"\n必须在主调函数中说明此数组的大小\n"},{"title":"下列选项中，能正确定义数组的语句是（）","choices":["\nint num[0..2008];\n","\nint num[]={2008};\n","\nint N = 2008;\nint num[N];\n","\n#define N 2008;\nint num[N];\n"],"correct_choice":"\nint num[]={2008};\n"},{"title":"假定下列 x 和 y 均为 int 型变量，则不正确的赋值为（    ）。","choices":["\nx+=y++\n","\nx++=y++\n","\nx=++y\n","\n++x=++y\n"],"correct_choice":"\nx++=y++\n"},{"title":"  以下程序的输出结果是？ \nint x = 1;\ndo{\t\n    printf(\"%2d\\n\",x++);\n}while(x--);","choices":["\n1\n","\n无任何输出\n","\n2\n","\n陷入死循环\n"],"correct_choice":"\n陷入死循环\n"},{"title":"若要定义一个只允许本源文件中所有函数使用的全局变量，则该变量需要使用的存储类型是（）","choices":["\nextern\n","\nregister\n","\nauto\n","\nstatic\n"],"correct_choice":"\nstatic\n"},{"title":"假设A为抽象类，下列声明（       ）是正确的","choices":["\nA fun(int);\n","\nA*p;\n","\nint fun(A);\n","\nA obj;\n"],"correct_choice":"\nA*p;\n"},{"title":"下列程序的运行结果是（      ） \n #include <stdio.h>\n main()\n { \n     struct t \n    { \n        int x; int *y;\n    }*p;\n    int a[]={1,2};\n    int b[]={3,4}; \n    struct t c[2]={5,a,6,b}; \n    p=c;\n    printf(\"%d,%d\",*(p->y),++(*p).x);\n }","choices":["\n2,6\n","\n1,5\n","\n2,5\n","\n1,6\n"],"correct_choice":"\n1,6\n"},{"title":"  下面的程序输出可能是什么? \nclass Printer{\n    public:\n        Printer(std::string name) {std::cout << name;}\n};\nclass Container{\n    public:\n        Container() : b(\"b\"), a(\"a\") {}\n    Printer a;\n    Printer b;\n};\nint main(){\n    Container c;\n    return 0;\n}","choices":["\n可能是 \"ab\" 或 \"ba\"。 依赖于具体的实现\n","\n一直都是 \"ba\"\n","\n一直都是 \"ab\"\n"],"correct_choice":"\n一直都是 \"ab\"\n"},{"title":"以下程序程序运行后的结果是（      ）\n #include<stdio.h>\n #define N 4\n void fun(int a[][N],int *p)\n { \n    int i;\n    for(i=0;i<N;i++) {\n        if(i<3) p[i]+=a[i][i]-a[i][N-i-2];\n        else p[i]+=a[i][i]-a[i][N-i];\n     }\n }\n main()\n {\n    int x[N][N]={{3,6,2,0},{2,8,7,9},{5,1,7,3},{9,5,3,7}},y[N]={3,5,8,6},i;\n    fun(x,y);\n    for(i=0; i<N; i++) \n      printf(\"%d \", y[i]);\n    printf(\"\\n\");\n }\n","choices":["\n4 5 8 10\n","\n-3 -1 1 3\n","\n4 5 10 8\n","\n1 3 -1 -3\n"],"correct_choice":"\n4 5 10 8\n"},{"title":"  在32位操作系统gcc编译器环境下，下面程序的运行结果为（） \n#include <iostream>\nusing namespace std;\nclass A {\npublic:\n    int b;\n    char c;\n    virtual void print() {\n        cout << \"this is father’s fuction! \" << endl;\n    }\n};\nclass B: A {\npublic:\n    virtual void print() {\n        cout << \"this is children’s fuction! \" << endl;\n    }\n};\nint main(int argc, char * argv[]) {\n    cout << sizeof(A) << \"\" << sizeof(B) << endl;\n    return 0;\n}\n\n","choices":["\n12 12\n","\n8 8\n","\n9 9\n","\n12 16\n"],"correct_choice":"\n12 12\n"},{"title":"C++语言中，下面描述中，正确的是()","choices":["\n一个基类的声明中有纯虚函数，该基类派生类一定不再是抽象类\n","\n函数类型不能作为重载函数的调用的依据\n","\n静态数据成员不是所有对象所公有的\n","\n内联函数在运行时是将该函数的目标代码插入每个调用该函数的地方\n"],"correct_choice":"\n函数类型不能作为重载函数的调用的依据\n"},{"title":"  头文件已经正常包含，以下代码在VS IDE上编译和运行结果是 \n\n  class A{\n    public:\n\tvoid test(){printf(\"test A\");}\n};\nint main(){\n    A*pA=NULL;\n    pA->test();\nreturn 0;\n}\n  \n","choices":["\n编译出错\n","\n程序运行奔溃\n","\n输出\"test A\"\n","\n输出乱码\n"],"correct_choice":"\n输出\"test A\"\n"},{"title":"  有以下表达式： \nint a=248, b=4;\nint const c=21;\nconst int *d=&a; \nint *const e=&b;\nint const * const f =&a; \n  请问下列表达式哪些会被编译器禁止? \n\n  \n","choices":["\n*c=32\n","\n*d=43\n","\ne=&a\n","\nf=0x321f\n","\nd=&b\n","\n*e=34\n"],"correct_choice":"\n*c=32\n\n*d=43\n\ne=&a\n\nf=0x321f\n"},{"title":"已知一函数中有下列变量定义，其中属于自动变量的有（）。","choices":["\ndouble k;\n","\nregister int i;\n","\nstatic char c;\n","\nauto long m;\n"],"correct_choice":"\ndouble k;\n\nauto long m;\n"},{"title":"用C++语法来看，下列的哪个赋值语句是正确的？","choices":["\nchar a=12\n","\nint a=12.0\n","\nint a=12.0f\n","\nint a=（int）12.0\n"],"correct_choice":"\nchar a=12\n\nint a=12.0\n\nint a=12.0f\n\nint a=（int）12.0\n"},{"title":"\n  return\n  不能作为合法的C用户定义标识符。表述是否正确？\n\n\n  \n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"若有 double *p,x[10];int i=5;使指针变量 p指向元素 x[5]的语句为（）。","choices":["\np=&x[i];\n","\np=x;\n","\np=x[i];\n","\np=&(x+i)\n"],"correct_choice":"\np=&x[i];\n"},{"title":"\n  指针函数是指函数的返回值为指针的函数.说法的是否正确？\n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"\n  设有说明:char w;int x;float y;double z;则表达式w*x+z-y\n  值的数据类型为\n  double。说法是否正确？\n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"  在 C 语言中,整型数据在内存中占2个字节。请问这句话的说法是正确的吗？  ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"\n  使用语句scanf(“a=%f,b=%d”,&a,&b);输入数据时，正确的数据输入是：（ ）\n","choices":["\na=2.2,b=3\n","\na=2.2 b=3\n","\n2.2 3\n","\n2.2,3\n"],"correct_choice":"\na=2.2,b=3\n"},{"title":"  若输入 ab，程序运行结果为（）。  main()\n{ static char a[3];\nscanf(\"%s\",a);\nprintf(\"%c,%c\",a[1],a[2]);\n} ","choices":["\na,b\n","\na,\n","\nb,\n","\n程序出错\n"],"correct_choice":"\nb,\n"},{"title":"若要以 读和写两种操作方式打开一个二进制文件，当文件不存在时返回打开失败信息，则选用的打开方式字符串为（   ）。","choices":["\n\"r+\"\n","\n\"ab+\"\n","\n\"rb+\"\n","\n\"wb+\"\n"],"correct_choice":"\n\"rb+\"\n"},{"title":"如有定义：char str[20];，能将从键盘输入的字符串“How are you”保存到 str 数组的语句是（）","choices":["\nscanf(\"%s\", str);\n","\nstr[] = getch();\n","\ngets(str);\n","\nstr = gets();\n"],"correct_choice":"\ngets(str);\n"},{"title":"函数是一种特殊的数据类型，这句话是否正确？","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"字符串“BeiJing”存储在计算机中，需要的字节数是（        ）","choices":["\n7\n","\n14\n","\n8\n","\n16\n"],"correct_choice":"\n8\n"},{"title":"C 语言源程序文件的缺省扩展名为 ( )","choices":["\ncpp\n","\nexe\n","\nobj\n","\nC\n"],"correct_choice":"\nC\n"},{"title":"  有以下程序 \n#include <stdio.h>\nmain( )\n{ \n    char c[2] [5]={ \"6934\", \"8254\"},* p[2];\n    int i, j, s=0;\n    for( i=0;i<2;i+ + ) \n        p[i] = c[i];\n    for( i=0;i<2;i+ + )  \n    for( j=0;p[i][j]>0 && p[i][j]<= '9';j+=2)\n      s = 10 * s + p[i][j] - '0';\n    printf(\"%d\\n\",s);\n} \n   程序的输出结果是? ","choices":["\n693825\n","\n69825\n","\n63825\n","\n6385\n"],"correct_choice":"\n6385\n"},{"title":"  关于引用与指针的区别，下面叙述错误的是： ","choices":["\n引用必须被初始化，指针不必。\n","\n指针初始化以后不能被改变，引用可以改变所指的对象。\n","\n删除空指针是无害的，不能删除引用。\n","\n不存在指向空值的引用，但是存在指向空值的指针。\n"],"correct_choice":"\n指针初始化以后不能被改变，引用可以改变所指的对象。\n"},{"title":"sizeof(char),sizeof(int),sizeof(double),sizeof(float)的值分别是（）","choices":["\n1 2 4 4\n","\n2 4 8 8\n","\n1 4 8 4\n","\n1 2 8 8\n"],"correct_choice":"\n1 4 8 4\n"},{"title":"  分析以下函数，该函数的功能是（） \n\n  void sca_from_file(int a[], int n, char fn[])\n{\n    FILE *fp;\n    int i;\n    fp = fopen(fn, \"r\");\n    for (i = 0; i < n; i++)\n    {\n        fscanf(fp, \"%d\", &a[i]);\n    }\n    fclose(fp);\n}\n\n\n  \n","choices":["\n打开文件fn，从文件中读出n个整数到数组a中\n","\n打开文件fn，将数组a的n个元素写到文件中\n","\n打开文件fn，从文件中读出n，再读n个整数到数组a中\n","\n打开文件fn，将n和数组a的n个元素依次写到文件中\n"],"correct_choice":"\n打开文件fn，从文件中读出n个整数到数组a中\n"},{"title":"C语言中5|7的结果是（）","choices":["\n1\n","\n3\n","\n5\n","\n7\n"],"correct_choice":"\n7\n"},{"title":"以下哪个选项一定可以将flag的第二个bit置0","choices":["\nflag&=~2\n","\nflag|=2\n","\nflag^=2\n","\nflag>>=2\n"],"correct_choice":"\nflag&=~2\n"},{"title":"  下列程序的打印结果是? \nchar p1[15]= \"abcd\",*p2= \"ABCD\", str[50]= \"xyz\"; \nstrcpy(str+2,strcat(p1+2,p2+1)); \nprintf(\"%s\",str);\n","choices":["\nxyabcAB\n","\nabcABz\n","\nABabcz\n","\nxycdBCD\n","\n运行出错\n"],"correct_choice":"\nxycdBCD\n"},{"title":"\n  有下列程序：\n\n\n  \n    \n    \n  \n\n\n  程序运行的输出结果为（）\n","choices":["\n123456789\n","\n9\n","\n1368\n","\n450\n"],"correct_choice":"\n1368\n"},{"title":"  下列程序段执行后，输出d的值为() \nvoid main()\n{\n   int a=1,b=0,c=-1,d=0;\n   d=++a||++b&&++c;\n   cout<<d<<endl;\n   return;\n}","choices":["\n1\n","\n2\n","\n3\n","\n0\n"],"correct_choice":"\n1\n"},{"title":"有这样一个类：\nclass Eye\n{\n    public:\n    void Look(void);\n};\n  现在希望定义一个Head类，也想实现Look的功能，应该使用()方法，实现代码重用。 ","choices":["\n继承\n","\n组合\n","\n模板\n","\n过滤\n"],"correct_choice":"\n组合\n"},{"title":"  有以下程序 \n#include <stdio.h > \nmain()\n{ \n    char a='H';\n    a=(a>'A'&& a<='Z') ?(a+32):a;\n    printf(\"％c\\n\",a);\n}\n  程序运行后的输出结果是? ","choices":["\nH\n","\nh\n","\nA\n","\na\n"],"correct_choice":"\nh\n"},{"title":"判断字符串 s1 是否大于字符串 s2，应当使用（）","choices":["\nif (s1 > s2)\n","\nif (strcmp(s1, s2))\n","\nif (strcmp(s2, s1)>0)\n","\nif (strcmp(s1, s2)>0)\n"],"correct_choice":"\nif (strcmp(s1, s2)>0)\n"},{"title":"\n  若有\n  C\n  语言表达式\n   2+3*4+7/3,\n  以下选项中叙述正确的执行顺序是（ ）。\n","choices":["\n先执行3*4得12，再执行7/3得2.5，最后执行2+12+2.5得16.5\n","\n先执行3*4得12，再执行2+12得14，再执行7/3得2，最后执行14+2得16\n","\n先执行7/3得2，再执行3*4得12，再执行12+2得14，最后执行2+14得16\n","\n先执行2+3得5，再执行5*4得20，再执行20+7得27，最后执行27/3得9\n"],"correct_choice":"\n先执行3*4得12，再执行2+12得14，再执行7/3得2，最后执行14+2得16\n"},{"title":"while（1）{x++;}，当x的取合适的初值时，可以避免死循环。","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"\n  设有语句int a=5,b; b=a>3&&0, a++;执行后变量b的值为__________（）\n\n\n  \n","choices":["\n5\n","\n6\n","\n0\n","\n1\n"],"correct_choice":"\n0\n"},{"title":"  以下描述正确的是（ ）   。  ","choices":["\n由于do-while循环中循环体语句只能是一条可执行语句，所以循环体内不能使用复合语句。\n","\ndo-while循环由do开始，用while结束，在while（表达式）后面不能写分号。\n","\n在do-while循环体中，一定要有能使while后面表达式的值变成零（“假”）的操作。\n","\ndo-while循环中，根据情况可以省略while。\n"],"correct_choice":"\n在do-while循环体中，一定要有能使while后面表达式的值变成零（“假”）的操作。\n"},{"title":"  下列程序的输出结果是（）。  main()\n{int a=7,b=5;\nprintf(\"%d\\n\",b=b/a);\n} ","choices":["\n0\n","\n5\n","\n1\n","\n不确定值\n"],"correct_choice":"\n0\n"},{"title":"  写出程序的运行结果 \n#include<iostream>\nusing namespace std;\n\nclass Base\n{\n    int x;\npublic:\n    Base(int b): x(b) {}\n    virtual void display()\n    {\n        cout << x;\n    };\n};\nclass Derived: public Base\n{\n    int y;\npublic:\n    Derived(int d): Base(d), y(d) {} void display()\n    {\n        cout << y;\n    }\n};\n\nint main()\n{\n    Base b(1);\n    Derived d(2);\n    Base *p = & d;\n    b.display();\n    d.display();\n    p->display();\n    return 0;\n\n}\n\n\n\n  \n\n\n  \n","choices":["\n121\n","\n222\n","\n122\n","\n运行出错\n"],"correct_choice":"\n122\n"},{"title":"  有如下程序，执行后输出的结果是(      ) \n#include <iostream.h>\nclass cla{\n    static int n;\n    public:\n     cla(){n++;}\n    ~cla(){n--;}\n    static int get_n(){return n;}\n};\nint cla::n= 0;\nint main()\n{\n   cla *p =new cla;\n   delete p;\n   cout<<\"n=\"<<cla::get_n()<<endl;\n   return 0;\n}","choices":["\nn=3\n","\nn=4\n","\nn=1\n","\nn=0\n"],"correct_choice":"\nn=0\n"},{"title":"下列哪个用法哪个是错误的()","choices":["\nint *a;\n","\nextern const int array[256];\n","\nconst int &ra;\n","\ntypedef void (*FUN)();\n"],"correct_choice":"\nconst int &ra;\n"},{"title":"float x 与“零值”比较的if语句为？","choices":["\nif (x == 0)\n","\nif (x < 0.00001f)\n","\nif (fabs(x) < 0.00001f) 或 if（Math.abs(x) < 0.00001f）\n","\nif (x > -0.00001f)\n"],"correct_choice":"\nif (fabs(x) < 0.00001f) 或 if（Math.abs(x) < 0.00001f）\n"},{"title":"在32位机器上，下列代码中\nclass A  \n {  \n      int i;  \n      union U  \n      {  \n          char buff[13];  \n          int i;  \n      }u;  \n      void foo() {    }  \n      typedef char* (*f)(void*);  \n      enum{red, green, blue} color;  \n }a;  \n\n  sizeof(a)的值是（） \n","choices":["\n20\n","\n21\n","\n22\n","\n24\n","\n非以上选项\n"],"correct_choice":"\n24\n"},{"title":"声明语句为 int a[3][4]; 下列表达式中与数组元素 a[2][1]等价的是?","choices":["\n*(a[2]+1)\n","\na[9]\n","\n*(a[1]+2)\n","\n*(*(a+2))+1\n"],"correct_choice":"\n*(a[2]+1)\n"},{"title":"下面关于虚函数的描述，错误的是","choices":["\n在成员函数声明的前面加上virtual修饰，就可把该函数声明为虚函数\n","\n基类中说明了虚函数后，派生类中对应的函数也必须说明为虚函数\n","\n虚函数可以是另一个类的友元函数，但不能是静态成员函数\n","\n基类中说明的纯虚函数在其任何需要实例化的派生类中都必须实现\n"],"correct_choice":"\n基类中说明了虚函数后，派生类中对应的函数也必须说明为虚函数\n"},{"title":"  开发C代码时,经常见到如下类型的结构体定义: \ntypedef struct list_t{\nstruct list_t *next;\nstruct list_t *prev;\nchar data[0];\n}list_t;\n  请问在32位系统中,sizeof(list_t)的值为? ","choices":["\n4byte\n","\n8byte\n","\n5byte\n","\n9byte\n"],"correct_choice":"\n8byte\n"},{"title":"  如下代码输出结果是什么？ \n#include<stdio.h>\nchar *myString()\n{\n    char buffer[6] = {0};\n    char *s = \"Hello World!\";\n    for (int i = 0; i < sizeof(buffer) - 1; i++)\n    {\n        buffer[i] = *(s + i);\n    }\n    return buffer;\n}\nint main(int argc, char **argv)\n{\n    printf(\"%s\\n\", myString());\n    return 0;\n}","choices":["\nHello\n","\nHello World!\n","\nWell\n","\n以上全部不正确\n"],"correct_choice":"\n以上全部不正确\n"},{"title":"  程序出错在什么阶段__？ \n\n  int main(void) {\n    http://www.taobao.com\n    cout << \"welcome to taobao\" << endl; \n}\n  \n\n\n  \n","choices":["\n预处理阶段出错\n","\n编译阶段出错\n","\n汇编阶段出错\n","\n链接阶段出错\n","\n运行阶段出错\n","\n程序运行正常\n"],"correct_choice":"\n程序运行正常\n"},{"title":"下列的模板说明中，正确的有（  ）","choices":["\ntemplate <typename T1, typename T2>\n","\ntemplate <class T1, T2>\n","\ntemplate <class T1, class T2>\n","\ntemplate <typename T1; typename T2>\n"],"correct_choice":"\ntemplate <typename T1, typename T2>\n\ntemplate <class T1, class T2>\n"},{"title":"  以下程序   main()\n{char\nstr[][10]={\"China\",\"Beijing\"},*p=str;\n \nprintf(\"%s\\n\",p+10);\n}   程序运行后的输出结果是(   )。  ","choices":["\nChina\n","\nBejing\n","\nng\n","\ning\n"],"correct_choice":"\nBejing\n"},{"title":"若有说明：int a[3][4];，则对 a 数组元素的正确引用是（）","choices":["\na[2][4]\n","\na[1,3]\n","\na[1+1][0]\n","\na(2)(1)\n"],"correct_choice":"\na[1+1][0]\n"},{"title":"  类 CBase 的定义如下： 在构造函数 CDerive 的下列定义中，正确的是（）         ","choices":["\nCDerive::CDerive(int a，int b，int c)：x(a),y(b),z(c){}\n","\nCDerive::CDerive(int a，int b，int c)：CBase(a),y(b),z(c){}\n","\nCDerive::CDerive(int a，int b，int c)：CBase(a),CDerive(b),z(c){}\n","\nCDerive::CDerive(int a，int b，int c)：x(a),CBase(b),z(c){}\n"],"correct_choice":"\nCDerive::CDerive(int a，int b，int c)：CBase(a),y(b),z(c){}\n"},{"title":"  输入字符数组的字符串长度应短于定义的字符数组个数,否则下标越界.这句话是否正确？   ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"  已知year为整型变量,不能使表达式(year%4==0&&year%100!=0)||year%400==0的值为\"真\"的数据是1990.是否正确？      ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"  有如下类声明： \n\n  \n\n  在构造函数XB的下列定义中，正确的是（    ） ","choices":["\nXB::XB(int a,int b):x(a),y(b){ }\n","\nXB::XB(int a,int b):XA(a),y(b){ }\n","\nXB::XB(int a,int b):x(a),XB(b){ }\n","\nXB::XB(int a,int b):XA(a),XB(b){ }\n"],"correct_choice":"\nXB::XB(int a,int b):XA(a),y(b){ }\n"},{"title":"  有以下程序   main()\n{ char a,b,c,d;\n  scanf(\"%c,%c,%d,%d\",&a,&b,&c,&d);\n \nprintf(\"c,%c,%c,%c\\n\",a,b,c,d);\n}   若运行时从键盘上输入：6,5,65,66<回车>。则输出结果是(   )。  ","choices":["\n6,5,A,B\n","\n6,5,65,66\n","\n6,5,6,5\n","\n6,5,6,6\n"],"correct_choice":"\n6,5,A,B\n"},{"title":"  有以下定义和语句     int a[3][2]={1,2,3,4,5,6,},*p[3];     p[0]=a[1];     则*(p[0]+1)所代表的数组元素是(   )。  ","choices":["\na[0][1]\n","\na[1][0]\n","\na[1][1]\n","\na[1][2]\n"],"correct_choice":"\na[1][1]\n"},{"title":"拷贝构造函数的作用是(    )","choices":["\n进行数据类型的转换\n","\n用对象调用成员函数\n","\n用对象初始化对象\n","\n用一般类型的数据初始化对象\n"],"correct_choice":"\n用对象初始化对象\n"},{"title":"某32位系统下, C++程序void *p = malloc( 100 ); sizeof (p) = ？","choices":["\n1\n","\n4\n","\n100\n","\n400\n"],"correct_choice":"\n4\n"},{"title":"  下面这段代码运行时会出现什么问题？ \nclass A\n{\npublic:\n    void f()\n    {\n        printf(\"A\\n\");\n    }\n};\n\nclass B: public A\n{\npublic:\n    virtual void f()\n    {\n        printf(\"B\\n\");\n    }\n};\n\nint main()\n{\n    A *a = new B;\n    a->f();\n    delete a;\n    return 0;\n}\n\n\t\n\n\n","choices":["\n没有问题，输出B\n","\n不符合预期的输出A\n","\n程序不正确\n","\n以上答案都不正确\n"],"correct_choice":"\n不符合预期的输出A\n"},{"title":"下列的模板声明中，其中几个是正确的（）\n1)template\n2)template<T1,T2>\n3)template<class T1,T2>\n4)template<class T1,class T2>\n5)template<typename T1,T2>\n6)template<typename T1,typename T2>\n7)template<class T1,typename T2>\n8)<typename T1,class T2>","choices":["\n2\n","\n3\n","\n4\n","\n5\n"],"correct_choice":"\n3\n"},{"title":"\n  下列程序的输出结果是（）\n\n\n  \n","choices":["\n10，30，60\n","\n20，40，60\n","\n10，20，30\n","\n10，30，50\n"],"correct_choice":"\n10，20，30\n"},{"title":"以下程序的打印结果是（）\n1.#include<iostream>\n2.using namespace std;\n3.\n4.void swap_int(int a , int b)\n5.{\n6.    int temp = a;\n7.    a = b;\n8.    b = temp;\n9.}\n10.\n11.void swap_str(char*a , char*b)\n12.{\n13.    char*temp = a;\n14.    a = b;\n15.    b = temp;\n16.}\n17.\n18.int main(void)\n19.{\n20.    int a = 10;\n21.    int b = 5;\n22.    char*str_a = \"hello world\";\n23.    char*str_b = \"world hello\";\n24.    swap_int(a , b);.\n25.    swap_str(str_a , str_b);\n26.    printf(\"%d %d %s %s\\n\",a,b,str_a,str_b);\n27.\n28.    return 0;\n29.}\n","choices":["\n10 5 hello world world hello\n","\n10 5 world hello hello world\n","\n5 10 hello world world hello\n","\n5 10 world hello hello world\n"],"correct_choice":"\n10 5 hello world world hello\n"},{"title":"  以下程序段的输出结果是 \nchar s[]=\"\\\\123456\\123456\\t\";\nprintf(\"%d\\n\",strlen(s));\n\n","choices":["\n12\n","\n13\n","\n16\n","\n以上都不对\n"],"correct_choice":"\n12\n"},{"title":"  下面哪些运算符不能被重载？（）  ","choices":["\n三目运算符“？：”\n","\n作用域运算符“：：”\n","\n对象成员运算符“.”\n","\n指针成员运算符“->”\n"],"correct_choice":"\n三目运算符“？：”\n\n作用域运算符“：：”\n\n对象成员运算符“.”\n"},{"title":"  Assume that the following variables are initialized correctly \n\n  \n\n  ,please choose the right statement about constusage:","choices":["\nconst int a; //const integer\n","\nint const a; //const integer\n","\nint const *a; //a pointer which point to const integer\n","\nconst int *a; //a const pointer which point to integer\n","\nint const *a; // a const pointer which point to integer\n"],"correct_choice":"\nconst int a; //const integer\n\nint const a; //const integer\n\nint const *a; //a pointer which point to const integer\n"},{"title":"以下数字在表示为double（8字节的双精度浮点数）时存在舍入误差的有（）。","choices":["\n2的平方根\n","\n10的30次方\n","\n0.1\n","\n0.5\n","\n100\n"],"correct_choice":"\n2的平方根\n\n10的30次方\n\n0.1\n"},{"title":"  判断 char 型变量 cl 是否为小写字母的正确表达式为（）。  ","choices":["\n’a’＜＝c1＜＝f’z’\n","\n(c1＞＝a)&&(c1＜＝z)\n","\n(‘a’＞=c1)  (‘z’＜＝c1)\n","\n(c1＞＝’a’)&&(c1＜＝’z’)\n"],"correct_choice":"\n(c1＞＝’a’)&&(c1＜＝’z’)\n"},{"title":"  下列等式正确的是（）？            ","choices":["\npA==pC&&pB!=pC\n","\npA==pC&&pB==pC\n","\npA!=pC&&pB!=pC\n","\npA!=pC&&pB==pC\n"],"correct_choice":"\npA==pC&&pB!=pC\n"},{"title":"  一个 C 语言程序是由（）。 ","choices":["\n一个主程序和若干子程序组成\n","\n函数组成\n","\n若干过程组成\n","\n若干子程序组成\n"],"correct_choice":"\n函数组成\n"},{"title":"  静态外部变量只在本文件内可用。请问这句话的说法是正确的吗？ ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"      数组说明 int array[][4]是否正确？  ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"C++语言不能定义字符串变量。","choices":["\n是\n","\n否\n"],"correct_choice":"\n否\n"},{"title":"  经过下列的语句 int j,a[10],*p;定义后，下列语句中合法的是（）。  ","choices":["\np=a;\n","\np=a[5];\n","\np=a[2]+2;\n","\np=&(j+2);\n"],"correct_choice":"\np=a;\n"},{"title":"for(int x = 0 , y = 0; !x && y <= 5 ; y++)语句执行循环的次数是多少次？","choices":["\n0\n","\n5\n","\n6\n","\n无数次\n"],"correct_choice":"\n6\n"},{"title":"  下列代码运行后变量a的值是多少？ \na = 5;\nb = 2;\na = a+1;\nresult = a + b;","choices":["\n7\n","\n1\n","\n8\n","\n5\n","\n6\n"],"correct_choice":"\n6\n"},{"title":"  假定 x 和 y 为 double 型，则执行 x=2 ； y=x+3/2； 后y的值为（）  ","choices":["\n3.500000\n","\n3\n","\n2.000000\n","\n3.000000\n"],"correct_choice":"\n3.000000\n"},{"title":"如何引用一个已经定义过的全局变量？","choices":["\n用引用头文件的方式\n","\n用extern关键字方式\n","\n使用static方式\n"],"correct_choice":"\n用extern关键字方式\n"},{"title":"内联可能会寻致二进制可执行文件尺寸变大吗？","choices":["\n是\n","\n错\n"],"correct_choice":"\n是\n"},{"title":"  下面C++程序的输出是_________。 \nvoid f(char * x)\n{\n    x++;\n    *x='a';\n}\nint main()\n{\n    char str [sizeof(\"hello\")];\n    strcpy(str, \"hello\");\n    f(str);\n    cout<<str;\n    return 0;\n}\n\n","choices":["\nhello\n","\nhallo\n","\nallo\n","\n以上都不是\n"],"correct_choice":"\nhallo\n"},{"title":"下列程序的运行结果是（      ）\n#include <stdio.h>\nint f1(int x) \n{ \n    return x+5; \n} \nint f2(int x) \n{ \n    return 2*x-1; \n} \nmain() \n{ \n    int (*p1)(int),(*p2)(int),(*t)(int), y1, y2; \n    p1=f1; p2=f2; \n    y1=p2(p1(1)); \n    t=p1; \n    p1=p2; \n    p2=t; \n    y2=p2(p1(2)); \n    printf(\"%d, %d\\n\",y1,y2);\n}\n","choices":["\n8,11\n","\n6,13\n","\n13,6\n","\n11,8\n"],"correct_choice":"\n11,8\n"},{"title":"设变量已正确定义，以下不能统计出一行中输入字符个数（不包含回车符）的程序段是","choices":["\nn=0;while(ch=getchar()!='\\n')n++;\n","\nn=0;while(getchar()!='\\n')n++;\n","\nfor(n=0;getchar()!='\\n';n++);\n","\nn=0;for(ch=getchar();ch!='\\n';n++);\n"],"correct_choice":"\nn=0;for(ch=getchar();ch!='\\n';n++);\n"},{"title":"在嵌套使用if语句时，C语言规定else总是______。","choices":["\n和之前与其具有相同缩进位置的if配对\n","\n和之前与其最近的if配对\n","\n和之前与其最近的且不带else的if配对\n","\n和之前的第一个if配对\n"],"correct_choice":"\n和之前与其最近的且不带else的if配对\n"},{"title":"  请找出下面程序中有哪些错误： \nint main()\n{\n   int i=10;\n   int j=1;\n   const int *p1;//(1)\n   int const *p2=&i; //(2)\n   p2=&j;//(3)\n   int *const p3=&i;//(4)\n   *p3=20;//(5)\n   *p2=30;//(6)\n   p3=&j;//(7)\nreturn 0;\n}","choices":["\n1,2,3,4,5,6,7\n","\n1,3,5,6\n","\n6,7\n","\n3,5\n"],"correct_choice":"\n6,7\n"},{"title":"从下列函数原形看，用GCC编译时，返回值类型为int的函数有？","choices":["\nchar F1(int n);\n","\nint F2(char n);\n","\nF3(int n);\n","\nint *F4(int n);\n"],"correct_choice":"\nint F2(char n);\n\nF3(int n);\n"},{"title":"请看一下这一段C++代码，如果编译后程序在windows下运行，则一下说话正确的是?\nchar*p1 = “123456”; \nchar*p2 = (char*)malloc(10);\n","choices":["\np1 和 p2都存在栈中\n","\np2指向的10个字节内存在栈中\n","\n堆和栈在内存中的生长方向是相反的\n","\n“123456”这6个字符存储在栈中\n"],"correct_choice":"\np1 和 p2都存在栈中\n\n堆和栈在内存中的生长方向是相反的\n"},{"title":"在C++语言中，若类C中定义了一个方法int f(int a，int b)，那么方法(       )不能与该方法同时存在于类C中。","choices":["\nint f(int x，int y)\n","\nint f(float a，int b)\n","\nfloat f(int x，float y)\n","\nint f(int x，float y)\n"],"correct_choice":"\nint f(int x，int y)\n"},{"title":"  有以下程序   main()\n{ char a='a',b;\n \nprint(\"%c,\",++a);\n \nprintf(\"%c\\n\",b=a++);\n}   程序运行后的输出结果是(   )。  ","choices":["\nb,b\n","\nb,c\n","\na,b\n","\na,c\n"],"correct_choice":"\nb,b\n"},{"title":"由C语言源程序文件编译而成的目标文件的默认扩展名为( ) ","choices":["\ncpp\n","\nc\n","\nexe\n","\nobj\n"],"correct_choice":"\nobj\n"},{"title":"  设有定义 \nchar str[ ] =\"Hello\";\n  则语句 \nprintf(\"%d %d\",sizeof(str),strlen(str));\n  的输出结果是? ","choices":["\n5 5\n","\n6 6\n","\n6 5\n","\n5 6\n"],"correct_choice":"\n6 5\n"},{"title":"对于\nwhile(!E)s;\n，若要执行循环体\ns\n，则\nE\n的取值应为（）","choices":["\nE等于1\n","\nE不等于0\n","\nE不等于1\n","\nE等于0\n"],"correct_choice":"\nE等于0\n"},{"title":"  以下函数调用语句中实参的个数是（）。    exce((v1,v2),(v3,v4,v5),v6);     ","choices":["\n3\n","\n4\n","\n5\n","\n6\n"],"correct_choice":"\n3\n"},{"title":"  在标准 C 中,\"=\"是判断两个数是否相等。请问这句话的说法是否正确？     ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"若已定义： int a[]=[0,1,2,3,4,5,6,7,8,9],*p=a,i; 其中0≤i≤9，则对a数组错误的引用是（）","choices":["\na[p-a]\n","\n*(&a[i])\n","\np[i]\n","\na[10]\n"],"correct_choice":"\na[10]\n"},{"title":"设有以下函数void fun(int n,char *s)(......),则下面对函数指针的定义和赋值均是正确的是：（）","choices":["\nvoid (*pf)(int，char);   pf=&fun;\n","\nvoid (*pf)(int n，char *s);   pf=fun;\n","\nvoid *pf();  *pf=fun;\n","\nvoid *pf();  pf=fun;\n"],"correct_choice":"\nvoid (*pf)(int n，char *s);   pf=fun;\n"},{"title":"如果downcast是安全的(也就是，如果基类指针或者引用确实指向一个派生类对象)这个运算符会传回适当转型过的指针。如果downcast不安全，这个运算符会传回空指针(也就是说，基类指针或者引用没有指向一个派生类对象)。这个是指C++里的()","choices":["\ndynamic_cast\n","\nreinterpret_cast\n","\nstatic_cast\n","\nconst_cast\n"],"correct_choice":"\ndynamic_cast\n"},{"title":"  下面3段程序代码的效果一样吗？ \n\n  int b;\n(1)const int *a = &b;\n(2)int const *a = &b;\n(3)int *const a = &b;\n  \n","choices":["\n(2)=(3)\n","\n(1)=(3)\n","\n(1)=(2)\n","\n都不一样\n","\n都一样\n"],"correct_choice":"\n(1)=(2)\n"},{"title":"在C语言中，定义一个返回值为指针的函数，以下函数定义错误的是（）\n","choices":["\nstatic char retarray[20];\n  char *func(int n)\n {\n sprint(retarray,”%d”,n);\n return retarray;\n }\n","\nchar *func(int n,char *retarray)\n {\n sprint(retarray,”%d”,n);\n return retarray;\n }\n","\nchar *func(int n)\n {\n  char *retarray=malloc(20);\n  if(retarray!=NULL)\n  sprint(retarray,”%d”,n);\n  return retarray;\n  }\n","\nchar *func(int n)\n {\n  char retarray[20];\n  sprint(retarray,”%d”,n);\n  return retarray;\n  }\n"],"correct_choice":"\nchar *func(int n)\n {\n  char retarray[20];\n  sprint(retarray,”%d”,n);\n  return retarray;\n  }\n"},{"title":"下面代码会输出什么（）\nint main(int argc, char **argv)\n{\n    int a[4] = {1, 2, 3, 4};\n    int *ptr = (int *)(&a + 1);\n    printf(\"%d\", *(ptr - 1));\n}\n\n","choices":["\n1\n","\n2\n","\n3\n","\n4\n"],"correct_choice":"\n4\n"},{"title":"  下面算法的功能是:() \n\n  Method(C)\n{S={};\n  while(not solution(S))\n   { x=select(C);\n      if feasible(S,x)\n     S=S+{x};\n     C=C-{x};\n   }\n return S;\n}\n","choices":["\n分支限界法求解问题的一般过程\n","\n动态规划求解最优解的一般过程\n","\n贪心算法求解最优解的一般过程\n","\n回溯算法求解的一般过程\n"],"correct_choice":"\n贪心算法求解最优解的一般过程\n"},{"title":"  下列代码试图打印数字1-9的全排列组合。 \n#include \"stdio.h\"\n#define N 9\nint x[N];\nint count = 0;\n\nvoid dump() {\n  int i = 0;\n  for (i = 0; i < N; i++) {\n    printf(\"%d\", x[i]);\n  }\n  printf(\"\\n\");\n}\n\nvoid swap(int a, int b) {\n  int t = x[a];\n  x[a] = x[b];\n  x[b] = t;\n}\n\nvoid run(int n) {\n  int i;\n  if (N - 1 == n) {\n    dump();\n    count ++;\n    return;\n  }\n  for (i = ___; i < N; i++) {\n    swap(___, i);\n    run(n + 1);\n    swap(___, i);\n  }\n}\n\nint main() {\n  int i;\n  for (i = 0; i < N; i++) {\n    x[i] = i + 1;\n  }\n  run(0);\n  printf(\"* Total: %d\\n\", count);\n}\n  其中run函数中缺失的部分应该依次为： ","choices":["\nn+1, n, n+1\n","\nn+1, n, n\n","\nn, n, n\n","\nn, n+1, n+1\n","\nn+1, n+1, n+1\n","\nn, n, n+1\n"],"correct_choice":"\nn, n, n\n"},{"title":"类B从类A派生，则类B可以访问类A中的（ ）成员？","choices":["\npublic成员\n","\nprivate成员\n","\nprotected成员\n","\n所有数据成员\n","\n所有函数成员\n"],"correct_choice":"\npublic成员\n\nprotected成员\n"},{"title":"\n  break\n  语句用在循环体中，可结束本层循环，continue语句用在循环体中，可结束本次循环。（）\n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"  在一个64位的操作系统中定义如下结构体：  struct st_task\n{\n  uint16_t id;\n  uint32_t value;\n  uint64 / -t timestamp;\n};   同时定义fool函数如下：  void fool()\n{\n  st_task task = {};\n  uint64_t a = 0x00010001;\n  memcpy(&task,&a,sizeof(uint64_t));\n  printf(\"%11u,%11u,%11u\",task.id,task.value,task.timestamp);\n}   上述fool函数（）程序的执行结果为： ","choices":["\n1,0,0\n","\n1,1,0\n","\n0,1,1\n","\n0,0,1\n"],"correct_choice":"\n1,0,0\n"},{"title":"关于封装，下列说法中不正确的是（  ）。","choices":["\n通过封装，对象的全部属性和操作结合在一起，形成一个整体\n","\n通过封装，一个对象的实现细节被尽可能地隐藏起来（不可见）\n","\n通过封装，每个对象都成为相对独立的实体\n","\n通过封装，对象的属性都是不可见的\n"],"correct_choice":"\n通过封装，对象的属性都是不可见的\n"},{"title":"  以下语句或语句组中，能正确进行字符串赋值的是(    )。  ","choices":["\nchar  *sp;  *sp=\"right!\";\n","\nchar s[10];  s=\"right!\";\n","\nchar  s[10];  *s=\"right!\";\n","\nchar  *sp=\"right!\";\n"],"correct_choice":"\nchar  *sp=\"right!\";\n"},{"title":"  设有说明:char w;int x;float y;double z;则表达式 w*x+z-y值的数据类型为（）。  ","choices":["\nfloat\n","\nchar\n","\nint\n","\ndouble\n"],"correct_choice":"\ndouble\n"},{"title":"  下列程序段的输出结果为().    int a=7,b=9,t;    t=a*=a>b?a:b;    printf(\"%d\",t);     ","choices":["\n7\n","\n9\n","\n63\n","\n49\n"],"correct_choice":"\n63\n"},{"title":"调用一成员函数时, 使用动态联编的情况是？","choices":["\n通过对象调用一虚函数\n","\n通过指针或引用调用一虚函数\n","\n通过对象调用静态函数\n","\n通过指针或应用调用一静态函数\n"],"correct_choice":"\n通过指针或引用调用一虚函数\n"},{"title":"在int p[][4]={{1},{3,2},{4,5,6},{0}};中，p[1][2]的值是()","choices":["\n1\n","\n0\n","\n6\n","\n2\n"],"correct_choice":"\n0\n"},{"title":"下面关于类定义的说法中，正确的是:","choices":["\n类定义中包括数据成员和函数成员的声明\n","\n类成员的缺省访问权限是保护的\n","\n数据成员必须被声明为私有的\n","\n成员函数只能在类体外进行定义\n"],"correct_choice":"\n类定义中包括数据成员和函数成员的声明\n"},{"title":"\n  设\n  int x[]={1,2,3,4,5,6},*p=x;\n  则值为\n  3\n  的表达式是\n","choices":["\np+=2,*++p;\n","\np+=2,*p++\n","\np+=3,*p\n","\np+=2,++*p\n"],"correct_choice":"\np+=2,*p++\n"},{"title":"下列程序的运行结果是1 2 3 4 10 9 8 7 6 5,请为横线处选择合适的程序（      ）\n #include <stdio.h>\n void s(int *a,int n) \n { \n    int i,j,t; \n    for(i=0;i<n-1;i++)\n    {\n        for(j=i+1;j<n;j++){ \n        if(*(a+i)<*(a+j))\n            {\n            t=a[i];a[i]=a[j];a[j]=t;}\n            }\n        }\n    } \n main()\n { \n    int a[10]={1,2,3,4,5,6,7,8,9,10},i; \n    s(______,6); \n    for(i=0;i<=9;i++) \n        printf(\"%d \",*(a+i));\n    printf(\"\\n\");\n}\n","choices":["\na\n","\na+3\n","\na+4\n","\na+5\n"],"correct_choice":"\na+4\n"},{"title":"下面结构体 struct s1 { \n    char ch, *ptr; \n    union { \n        short a, b; \n        unsigned int c:2, d:1; \n    } \n    struct s1 *next; \n}; \n  的大小是_____：","choices":["\n12字节\n","\n16字节\n","\n20字节\n","\n24字节\n"],"correct_choice":"\n16字节\n"},{"title":"请问以下说法，哪个是正确的：","choices":["\n每个类都有一个无参数的构造函数。\n","\n每个类都有一个拷贝构造的函数。\n","\n每个类能有多个构造函数。\n","\n每个类能有多个析构函数。\n"],"correct_choice":"\n每个类能有多个构造函数。\n"},{"title":"下面不是面向对象的基本原则的是？","choices":["\n单一职责原则（Single-Resposibility Principle）\n","\n开放封闭原则（Open-Closed principle）\n","\n抽象类原则（Abstract-Class principle）\n","\n依赖倒置原则（Dependecy-Inversion Principle）\n","\n接口隔离原则（Interface-Segregation Principle）\n"],"correct_choice":"\n抽象类原则（Abstract-Class principle）\n"},{"title":"  下列选项，不正确的是 \n","choices":["\nfor(int a=1;a<=10;a++);\n","\nint a=1;\ndo\n{\na++;\n}while(a<=10)\n","\nint a=1;\nwhile(a<=10)\n{\na++;\n}\n","\nfor(int a=1;a<=10;a++)a++;\n"],"correct_choice":"\nint a=1;\ndo\n{\na++;\n}while(a<=10)\n"},{"title":"int a=5,则 ++(a++)的值是?","choices":["\n5\n","\n6\n","\n7\n","\n编译出错\n"],"correct_choice":"\n编译出错\n"},{"title":"  下列程序段的输出结果是（）。    double d=3.2;int x,y;x=1.2; y=(x+3.8)/5.0; printf(\"%d\\n\",d*y);  ","choices":["\n3\n","\n3.2\n","\n0\n","\n3.07\n"],"correct_choice":"\n0\n"},{"title":"  变量的指针,其含义是指该变量的（）。 ","choices":["\n值\n","\n地址\n","\n名\n","\n一个标志\n"],"correct_choice":"\n地址\n"},{"title":"  C 语言中函数调用的方式有（）。 ","choices":["\n函数调用作为语句一种\n","\n函数调用作为函数表达式一种\n","\n函数调用作为语句或函数表达式两种\n","\n函数调用作为语句或函数表达式或函数参数三种\n"],"correct_choice":"\n函数调用作为语句或函数表达式或函数参数三种\n"},{"title":"假定有语句“ int b[10], *pb; ”，则不正确的赋值为 （     ）。","choices":["\npb=b\n","\npb=b[5]\n","\npb=b+2\n","\npb=&b[0]\n"],"correct_choice":"\npb=b[5]\n"},{"title":"\n  在一个被调用函数中，关于return语句使用的描述，（ ）是错误的。\n","choices":["\n被调用函数中可以不用return语句\n","\n被调用函数中可以使用多个return语句\n","\n被调用函数中，如果有返回值，就一定要有return语句\n","\n被调用函数中，一个return语句可以返回多个值给调用函数\n"],"correct_choice":"\n被调用函数中，一个return语句可以返回多个值给调用函数\n"},{"title":"以下正确的描述是（    ）。","choices":["\n函数的定义可以嵌套，函数的调用不可以嵌套\n","\n函数的定义不可以嵌套，函数的调用可以嵌套\n","\n函数的定义和函数的调用均可以嵌套\n","\n函数的定义和函数的调用均不可以嵌套\n"],"correct_choice":"\n函数的定义不可以嵌套，函数的调用可以嵌套\n"},{"title":"  若有以下程序 \n#include < stdio. h >\nmain ( )\n{ \n     int i,j = 0;\n     char a[ ] = \" How are you!\" ;\n     for (i =0; a[i]; i++)\n         if ( a[i] != ' ' ) a[j++] = a[i];\n             a[j] = '\\0';\n     printf( \"%s\\n\", a ) ;\n}\n  则程序的输出结果是 ","choices":["\nHay!\n","\nHowareyou\n","\nHowareyou!\n","\nHow are you!\n"],"correct_choice":"\nHowareyou!\n"},{"title":"代码生成阶段的主要任务是：","choices":["\n把高级语言翻译成机器语言\n","\n把高级语言翻译成汇编语言\n","\n把中间代码变换成依赖具体机器的目标代码\n","\n把汇编语言翻译成机器语言\n"],"correct_choice":"\n把中间代码变换成依赖具体机器的目标代码\n"},{"title":"下面的函数哪个是系统调用而不是库函数()？","choices":["\nprintf\n","\nscanf\n","\nfgetc\n","\nread\n","\nprint_s\n","\nscan_s\n"],"correct_choice":"\nread\n"},{"title":"当很频繁地对序列中部进行插入和删除操作时，应该选择使用的容器是（）","choices":["\nvector\n","\nlist\n","\ndeque\n","\nstack\n"],"correct_choice":"\nlist\n"},{"title":"  有如下程序： \n#include<iostream>\nusing namespace std;\nclass MyClass{\n    public:\n        MyClass(int i=0){cout<<1;}\n        MyClass(const MyClass&x){cout<<2;}\n        MyClass& operator=(const MyClass&x){cout<<3; return*this;}\n        ~MyClass(){cout<<4;}\n};\nint main(){\n    MyClass obj1(1),obj2(2),obj3(obj1);\n    return 0;\n}\n  运行时的输出结果是 ","choices":["\n121,444\n","\n112,444\n","\n11,114,444\n","\n11,314,445\n","\n11,314,444\n"],"correct_choice":"\n112,444\n"},{"title":"  下面的程序可以从0....n-1中随机等概率的输出m个不重复的数。这里我们假设n远大于m \nknuth(int n, int m)\n{ \n    srand((unsigned int)time(0)); \n    for (int i = 0; i < n; i++) { \n        if ( ) { \n            cout << i << endl; \n            ( ); \n        } \n     } \n}","choices":["\nrand()%(n-i)<=m   m--\n","\nrand()%(n-i)<m   m--\n","\nrand()%(n-i)>=m   m++\n","\nrand()%(n-i)>m   m++\n"],"correct_choice":"\nrand()%(n-i)<m   m--\n"},{"title":"关于C语言中volatile关键字，下面的说法哪一个是错误的？","choices":["\n编译器会禁止对volatile修饰的变量进行读写优化\n","\n用volatile修饰的变量，读取速度会更快\n","\n每一次读取volatile修饰的变量都会从内存中读取\n"],"correct_choice":"\n用volatile修饰的变量，读取速度会更快\n"},{"title":"\n  如下代码段，哪种描述是正确的（）\n\n\n  \n    \n    \n  \n","choices":["\n全部正确\n","\n2错，1,3正确\n","\n1,2错，3正确\n","\n1正确，2,3,错\n"],"correct_choice":"\n2错，1,3正确\n"},{"title":"  以下代码的执行结果是(). \nint main(){\n   int i=-2147483648;\n   return printf(\"%d,%d,%d,%d\",~i,-i,1-i,-1-i);\n}","choices":["\n0,2147483648,2147483649,2147483647\n","\n0,-2147483648,-2147483647,2147483647\n","\n2147483647,2147483648,2147483649,2147483647\n","\n2147483647,-2147483648,-2147483647,2147483647\n"],"correct_choice":"\n2147483647,-2147483648,-2147483647,2147483647\n"},{"title":"extern \"C\"{}的作用以及能解决什么问题？","choices":["\n在C++源文件中的语句前面加上extern \"C\"，表明它按照类C的编译和连接规约来编译和连接，而不是C++的编译的连接规约\n","\n主要是解决在C++代码中调用C代码\n","\n主要是解决在C代码中调用C++代码\n","\n上述描述都不正确\n"],"correct_choice":"\n在C++源文件中的语句前面加上extern \"C\"，表明它按照类C的编译和连接规约来编译和连接，而不是C++的编译的连接规约\n\n主要是解决在C++代码中调用C代码\n"},{"title":"找出其中的错处 \n\nclass _student { \npublic: \n     int a; \n     char b;\nprotected: \n     int c; \n}\n_student st;\nst.a='a'; \nst.b=\"a\"; \nst.c=1;","choices":["\nst.a='a'\n","\nst.b=\"a\"\n","\nst.c=1\n","\n没有错误\n"],"correct_choice":"\nst.b=\"a\"\n\nst.c=1\n"},{"title":"  在进行赋值转换时,变量的类型被自动转换为赋值号右边的表达式值的类型。请问这句话的说法是正确的吗？  ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"执行完a=5 mod 3 语句后，a的值为？","choices":["\n0\n","\n2\n","\n3\n","\n5\n"],"correct_choice":"\n2\n"},{"title":"  若有说明 int a[3][4];则 a 数组元素的非法引用是（）。  ","choices":["\na[0][2*1]\n","\na[1][3]\n","\na[4-2][0]\n","\na[0][4]\n"],"correct_choice":"\na[0][4]\n"},{"title":"与数学表达式x大于等于\n y大于等于\n z对应的C语言表达式是?","choices":["\n(x>=y)‖(y>=x)\n","\n(x>=y>=z)\n","\n(x>=y)!(y>=z)\n","\n(x>=y)&&(y >= z)\n"],"correct_choice":"\n(x>=y)&&(y >= z)\n"},{"title":"  在 C 语言程序中（）。     ","choices":["\n函数的定义可以嵌套,但函数的调用不可以嵌套\n","\n函数的定义不可以嵌套,但函数的调用可以嵌套\n","\n函数的定义和函数调用均可以嵌套\n","\n函数的定义和函数调用不可以嵌套\n"],"correct_choice":"\n函数的定义不可以嵌套,但函数的调用可以嵌套\n"},{"title":"  在下列选项中，合法的C语言用户标识符的是（） 。\n","choices":["\nint\n","\nsin\n","\nif\n","\ni+j\n"],"correct_choice":"\nsin\n"},{"title":"  假设下面的函数foo会被多线程调用，那么函数里面使用的变量i，j，k哪些因为线程间共享访问需要加密保护（）？        ","choices":["\nj和k\n","\ni\n","\ni和j\n","\ni，j，k都需要\n"],"correct_choice":"\ni和j\n"},{"title":"下面的函数原型声明中存在语法错误的是（     ）。","choices":["\nAA(int a, int b)\n","\nAA(int, int)\n","\nAA(int a; int b;)\n","\nAA(int a, int)\n"],"correct_choice":"\nAA(int a; int b;)\n"},{"title":"  有如下程序段 int a=14,b=15,x;char c=′A′;x=(a&&b)&&(c<′B′); 执行该程序段后,x的值为（）。  ","choices":["\nture\n","\nfalse\n","\n0\n","\n1\n"],"correct_choice":"\n1\n"},{"title":"下列程序的输出结果为：\n#include\nvoid main()\n{\n       char* a[ ] = { \"hello\", \"the\", \"world\"};\n       char** pa = a;\n       pa++;\n       cout<<*pa<<endl;\n}","choices":["\ntheworld\n","\nthe\n","\nhello\n","\nhellotheword\n"],"correct_choice":"\nthe\n"},{"title":"C\n语言规定，在一个源程序中，main函数的位置（）。","choices":["\n必须在最开始\n","\n必须在系统调用的库函数的后面\n","\n可以任意\n","\n必须在最后\n"],"correct_choice":"\n可以任意\n"},{"title":"要想使语句cout<<STR\n显示\nHello!,STR\n不可定义为（）。","choices":["\nchar STR[]=”Hello!”;\n","\nchar STR[6]=”Hello!”;\n","\nchar *STR=”Hello!”;\n","\n#define STR ”Hello!”\n"],"correct_choice":"\nchar STR[6]=”Hello!”;\n"},{"title":"  下面函数的时间复杂度是 \nlong foo(long x){\n    if(x<2) return 1;\n        return x*x*foo(x-1);\n}","choices":["\nO(N)\n","\nO(N^2)\n","\nO(N^3)\n","\no(N!)\n"],"correct_choice":"\nO(N)\n"},{"title":"两个等价线程并发的执行下列程序，a为全局变量，初始为0，假设printf、++、--操作都是原子性的，则输出肯定不是哪个？\nvoid foo() {\n    if(a <= 0) {\n        a++;\n    }\n    else {\n        a--;\n    }\n    printf(\"%d\", a);\n}\n","choices":["\n01\n","\n10\n","\n12\n","\n22\n"],"correct_choice":"\n01\n"},{"title":"  抽象基类是指（ ） ","choices":["\n嵌套类\n","\n派生类\n","\n含有纯虚函数\n","\n多继承类\n"],"correct_choice":"\n含有纯虚函数\n"},{"title":"  C++中'a'代表一个字符常量,占一个字节.说法是否正确？   ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"  下列程序的运行结果是0.请为横线处选择合适的程序（）          ","choices":["\nvoid (Base::*q)(Base,Base)\n","\nvoid *q(Base,Base)\n","\nvoid *q()\n","\nvoid (*q)(Base,Base)\n"],"correct_choice":"\nvoid (*q)(Base,Base)\n"},{"title":"  以下程序的输出结果为（） \n\n     #include <string.h>  \n     #include <stdio.h>  \n  \n    \n  \n     void main()  \n     {  \n  char x[] = \"STRING\";  \n  x[0] = 0;  \n  x[1] = '\\0';  \n  x[2] = '0';  \n  printf(\"%d %d\\n\", sizeof(x), strlen(x));  \n     }  \n","choices":["\n6 1\n","\n7 0\n","\n6 3\n","\n7 1\n"],"correct_choice":"\n7 0\n"},{"title":"\n  设有下面的程序段：char s[]＝\"china\"；char *p＝s，p和s可以随意替换使用 \n","choices":["\nTURE\n","\nFALSE\n"],"correct_choice":"\nFALSE\n"},{"title":"对于一个类的构造函数，其函数名与类名(    )。","choices":["\n完全相同\n","\n基本相同\n","\n不相同\n","\n无关系\n"],"correct_choice":"\n完全相同\n"},{"title":"  以下叙述中正确的是 （）。 ","choices":["\nC 程序中注释部分可以出现在程序中任意合适的地方\n","\n花括号“{“和”}”只能作为函数体的定界符\n","\n构成 C 程序的基本单位是函数,所有函数名都可以由用户命名\n","\n分号是 C 语句之间的分隔符,不是语句的一部分\n"],"correct_choice":"\nC 程序中注释部分可以出现在程序中任意合适的地方\n"},{"title":"  有以下程序     main()     {   int  a[]={1,2,3,4,5,6,7,8,9,0},*p;      for(p=a;p<a+10;p++)      printf(\"%d,\",*p);     }     程序运行后的输出结果是(  ) 。   ","choices":["\n1，2，3，4，5，6，7，8，9，0，\n","\n2，3，4，5，6，7，8，9，10，1，\n","\n0，1，2，3，4，5，6，7，8，9，\n","\n1，1，1，1，1，1，1，1，1，，1，\n"],"correct_choice":"\n1，2，3，4，5，6，7，8，9，0，\n"},{"title":"  若 a 是 float 型变量，b 是 unsigned 型变量，以下输入语句中合法的是（）。  ","choices":["\nscanf(\"%6.2f%d\",&a,&b);\n","\nscanf(\"%f%n\",&a,&b);\n","\nscanf(\"%f%3o\",&a,&b);\n","\nscanf(\"%f%f\",&a,&b);\n"],"correct_choice":"\nscanf(\"%f%3o\",&a,&b);\n"},{"title":"  ENUM 是（ ）。  ","choices":["\n合法标识符\n","\nC语言的关键字\n","\n合法的字符串\n","\n既不是C语言的关键字，也不是合法的字符串或标识符\n"],"correct_choice":"\n合法标识符\n"},{"title":"在 C++ 中，关于下列设置默认参数值的描述中，正确的是（ ）","choices":["\n不允许设置默认参数值\n","\n在指定了默认值的参数右边，不能出现没有指定默认值的参数。\n","\n只能在函数的定义性声明中指定参数的默认值。\n","\n设置默认参数时，必须全部都设置。\n"],"correct_choice":"\n在指定了默认值的参数右边，不能出现没有指定默认值的参数。\n"},{"title":"  若有说明:int *p,m=5,n;以下正确的程序段是（）。  ","choices":["\np=&n;scanf(\"%d\",&p);\n","\np=&n;scanf(\"%d\",*p)\n","\nscanf(\"%d\",&n);*p=n;\n","\np=&n;*p=m;\n"],"correct_choice":"\np=&n;*p=m;\n"},{"title":"  下面程序的输出结果为多少？ \nvoid Func(char str_arg[100])\n{\n    printf(\"%d\\n\", sizeof(str_arg));\n}\nint main(void)\n{\n    char str[] = \"Hello\";\n    printf(\"%d\\n\", sizeof(str));\n    printf(\"%d\\n\", strlen(str));\n    char *p = str;\n    printf(\"%d\\n\", sizeof(p));\n    Func(str);\n}\n\n\t\n\n","choices":["\n5 4 4 4\n","\n6 5 4 4\n","\n5 5 5 5\n","\n5 5 5 4\n"],"correct_choice":"\n6 5 4 4\n"},{"title":"依次读入数据元素序列{a.b.c.d.e.f.g}元素进栈或出栈顺序是未知的，下列序列中，不可能成为栈空时弹出的元素构成序列的有？","choices":["\n{d.c.e.f.b.g.a}\n","\n{f.e.g.d.a.c.b}\n","\n{e.f.d.g.c.b.a}\n","\n{c.d.b.e.f.a.g}\n"],"correct_choice":"\n{f.e.g.d.a.c.b}\n"},{"title":"下面有关c++静态数据成员，说法正确的是？","choices":["\n不能在类内初始化\n","\n不能被类的对象调用\n","\n不能受private修饰符的作用\n","\n可以直接用类名调用\n"],"correct_choice":"\n可以直接用类名调用\n"},{"title":"“引用”与多态的关系？","choices":["\n两者没有关系\n","\n引用可以作为产生多态效果的手段\n","\n一个基类的引用不可以指向它的派生类实例\n","\n以上都不正确\n"],"correct_choice":"\n引用可以作为产生多态效果的手段\n"},{"title":"以下代码打印的结果是（假设运行在 i386 系列计算机上）：\nstruct st_t   \n{\n　　int status;\n　　short *pdata;\n　　char errstr[32];\n};\n\nst_t st[16];\nchar *p = (char *)( st[2].errstr + 32 );\nprintf( \"%d\", ( p - (char *)(st) ) );\n","choices":["\n32\n","\n114\n","\n120\n","\n1112\n"],"correct_choice":"\n120\n"},{"title":"struct Date\n{\n    char a;\n    int b;\n    int64_t c;\n    char d;\n};\nDate data[2][10];\n\n \u0010在64位系统上，如果Data的地址是x，那么data[1][5].c的地址是（）","choices":["\nX+195\n","\nX+365\n","\nX+368\n","\nX+215\n"],"correct_choice":"\nX+368\n"},{"title":"下面有关c++ traits，说法正确的有？","choices":["\n一个traits包括了enum、typedef、模板偏特化（template partial specialization）\n","\ntypedef定义了各个类的各自不同的类型定义\n","\n模板偏特化用于实现各个类的不同功能\n","\n当函数，类或者一些封装的通用算法中的某些部分会因为数据类型不同而导致处理或逻辑不同，traits会是一种很好的解决方案\n"],"correct_choice":"\n一个traits包括了enum、typedef、模板偏特化（template partial specialization）\n\ntypedef定义了各个类的各自不同的类型定义\n\n模板偏特化用于实现各个类的不同功能\n\n当函数，类或者一些封装的通用算法中的某些部分会因为数据类型不同而导致处理或逻辑不同，traits会是一种很好的解决方案\n"},{"title":"          以上程序中，下列哪个函数调用会有问题（）    ","choices":["\nb->FunctionD();\n","\nb->FunctionB();\n","\nb->FunctionA();\n","\nb->FunctionC();\n"],"correct_choice":"\nb->FunctionB();\n"},{"title":"假定 a 为一个数组名，则下面存在错误的表达式为的（     ）","choices":["\na[i]\n","\n*a++\n","\n*a\n","\n*(a+1)\n"],"correct_choice":"\n*a++\n"},{"title":"  以下数值中,不正确的八进制数或十六进制数是（）。  ","choices":["\n0x16\n","\n16\n","\n-16\n","\n0xaaaa\n"],"correct_choice":"\n-16\n"},{"title":"  若有下列定义，则对 a 数组元素地址的正确引用是（）。     int a[5],*p=a; ","choices":["\n*(p+5)\n","\n*p+2\n","\n*(a+2)\n","\n*&a[5]\n"],"correct_choice":"\n*(a+2)\n"},{"title":"循环语句“for(i=0; i<=n; i++)       S;”中循环体S被执行的次数为( )。","choices":["\n1\n","\nn-1\n","\nn\n","\nn+1\n"],"correct_choice":"\nn+1\n"},{"title":"  假 设 所 有 变 量 均 为 整 型 ， 则 表 达 式(a=2,b=5,b++,a+b)的值是（）。  ","choices":["\n7\n","\n8\n","\n6\n","\n2\n"],"correct_choice":"\n8\n"},{"title":"  在 C 语言中，能代表逻辑值“真”的是（）。 ","choices":["\nTrue\n","\n大于0的数\n","\n非0整数\n","\n非0的数\n"],"correct_choice":"\n非0的数\n"},{"title":"单链表的每个结点中包括一个指针link，它指向该结点的后继结点。现要将指针q指向的新结点插入到指针p指向的单链表结点之后，下面的操作系列中哪一个是正确的？","choices":["\nq=p->link;p->link=q->link\n","\np=p->link=q->link;p->link\n","\nq->link=p->link;p->link=q;\n","\np->link=1;q->link=p->link\n"],"correct_choice":"\nq->link=p->link;p->link=q;\n"},{"title":"  下面代码运行后,变量 total 的结果是? \n\n  int total = 0;\nfor (int i = 0, j = 5; total < 10 || j > 3; ++i, --j) {\n     total += (i + j);\n }\n","choices":["\n5\n","\n10\n","\n无法通过编译\n","\n运行时出错\n","\n运行时死循环\n"],"correct_choice":"\n10\n"},{"title":"i=4，那么语句：j=i+++1,执行后的结果应该是（）","choices":["\ni=4，j=6\n","\ni=5，j=5\n","\ni=5，j=6\n","\ni=6，j=6\n"],"correct_choice":"\ni=5，j=5\n"},{"title":"\n  设有以下宏定义：  \n\n     #define N 3+1  \n     #define Y(n) ((N+1)*n)  \n\n\n  则执行语句\n  z=2*\n  （\n  N+Y(5+1)\n  ）后，\n  z\n  的值为\n","choices":["\n60\n","\n190\n","\n248\n","\n上述答案都不对\n"],"correct_choice":"\n60\n"},{"title":"  下列main()函数执行后的结果为() \nint func()\n{ \n   int i,j,k=0;\n   for(i=0,j=-1;j=0;i++,j++)\n   {\n      k++;\n    }\nreturn k;\n}\nint main()\n{\n  cout<<(func());\n}","choices":["\n-1\n","\n0\n","\n1\n","\n2\n"],"correct_choice":"\n0\n"},{"title":"  有以下程序 \n#include <stdio.h>\n#include <string.h>\nvoid fun( char *s )\n{\n    char a[10];\n    strcpy ( a, \"STRING\" );\n    s = a ;\n}\nmain( )\n{\n    char *p= \"PROGRAM\" ;\n    fun( p );\n    printf ( \"%s\\n \", p) ;\n}\n  程序运行后的输出结果是(此处□代表空格)? ","choices":["\nSTRING\n","\nSTRING□□□□\n","\nSTRING□□□\n","\nPROGRAM\n"],"correct_choice":"\nPROGRAM\n"},{"title":"  在c++中， \nconst int i = 0; \nint *j = (int *) &i; \n*j = 1; \nprintf(\"%d,%d\", i, *j)\n  输出是多少? ","choices":["\n0，1\n","\n1，1\n","\n1，0\n","\n0，0\n"],"correct_choice":"\n0，1\n"},{"title":"以下选项中不属于C语言标识符的是？","choices":["\n常量\n","\n用户标识符\n","\n关键字\n","\n预定义标识符\n"],"correct_choice":"\n常量\n"},{"title":"  指出下面程序哪里可能有问题？ \nclass CBuffer\n{\n    char * m_pBuffer;\n    int m_size;\n    public:\n        CBuffer()\n        {\n            m_pBuffer=NULL;\n        }\n        ~CBuffer()\n        {\n            Free();\n        }\n        void Allocte(int size) （1） {\n            m_size=size;\n            m_pBuffer= new char[size];\n    }\n    private:\n        void Free()\n        {\n            if(m_pBuffer!=NULL) (2)\n            {\n                delete[] m_pBuffer; \n                m_pBuffer=NULL;\n            }\n        }\n    public:\n        void SaveString(const char* pText) const (3)\n        {\n            strcpy(m_pBuffer, pText); (4)\n        }\n        char* GetBuffer() const\n        {\n            return m_pBuffer;\n\n\t}\n\n\n\n\t};\n\nvoid main (int argc, char* argv[])\n{\n    CBuffer buffer1;\n    buffer1.SaveString(\"Microsoft\");\n    printf(buffer1.GetBuffer());\n}\n\n\n  \n","choices":["\n1\n","\n2\n","\n3\n","\n4\n"],"correct_choice":"\n1\n\n3\n\n4\n"},{"title":"在C++程序中，对象之间的相互通信通过（        ）","choices":["\n继承实现\n","\n调用成员函数实现\n","\n封装实现\n","\n函数重载实现\n"],"correct_choice":"\n调用成员函数实现\n"},{"title":"  在位运算中,操作数每左移一位,其结果相当于（）。  ","choices":["\n操作数乘以2\n","\n操作数除以2\n","\n操作数除以4\n","\n操作数乘以4\n"],"correct_choice":"\n操作数乘以2\n"},{"title":"\n  C\n  语言的长整型数值在计算机中占用的字节个数是()\n","choices":["\n1\n","\n2\n","\n3\n","\n4\n"],"correct_choice":"\n4\n"},{"title":"  有以下程序     #include <stdio.h>    main()      {      int  a=3;       a+=a-=a*a;      printf( \"%d\\n\", a );     }     则程序的输出结果是（）  ","choices":["\n0\n","\n9\n","\n3\n","\n-12\n"],"correct_choice":"\n-12\n"},{"title":"下面关于＃ｉｍｐｏｒｔ和＃ｉｎｃｌｕｄｅ描述正确的是\n","choices":["\n＃ｉｍｐｏｒｔ和＃ｉｎｃｌｕｄｅ不可以混合使用\n","\n＃ｉｍｐｏｒｔ只用于引用Ｏｂｊｅｃｔｉｖｅ－Ｃ的文件，＃ｉｎｃｌｕｄｅ只用于Ｃ和Ｃ＋＋的文件\n","\n＃ｉｍｐｏｒｔ和＃ｉｎｃｌｕｄｅ的使用效果完全相同\n","\n＃ｉｍｐｏｒｔ是＃ｉｎｃｌｕｄｅ的替代指令，防止重复引用\n"],"correct_choice":"\n＃ｉｍｐｏｒｔ是＃ｉｎｃｌｕｄｅ的替代指令，防止重复引用\n"},{"title":"在哪种派生方式中，派生类可以访问基类中的protected成员（        ）","choices":["\npublic和private\n","\npublic和protected\n","\nprotected和private\n","\npublic、protected、private均可\n"],"correct_choice":"\npublic、protected、private均可\n"},{"title":"对每个可重载的运算符来讲，它既可以重载为友元函数，又可以重载为成员函数，还可以重载为非成员函数。","choices":["\n是\n","\n否\n"],"correct_choice":"\n否\n"},{"title":"  若已定义的函数有返回值，则以**于该函数调用的叙述中错误的是（）。  ","choices":["\n函数调用可以作为独立的语句存在\n","\n函数调用可以作为一个函数的实参\n","\n函数调用可以出现在表达式中\n","\n函数调用可以作为一个函数的形参\n"],"correct_choice":"\n函数调用可以作为一个函数的形参\n"},{"title":"\n  若有以下的定义:int t[3][2];能正确表示t数组元素地址的表达式是\n  t[2]。表述是否正确？\n\n\n  \n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"\n  派生类只继承基类中的公有成员和保护成员,而不继承私有成员.这句话是否正确\n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"  以下标识符中，不能作为合法的 C 用户定义标识符的是（）。  ","choices":["\nanswer\n","\nto\n","\nsigned\n","\n_if\n"],"correct_choice":"\nsigned\n"},{"title":"  printf 函数中用到格式符%5s，其中数字5表示输出的字符串占用5列，如果字符串长度大于5，则输出按方式（）。  ","choices":["\n从左起输出该字符串,右补空格\n","\n按原字符长从左向右全部输出\n","\n右对齐输出该字串,左补空格\n","\n输出错误信息\n"],"correct_choice":"\n按原字符长从左向右全部输出\n"},{"title":"  以下程序调用fun 函数求数组中最大值所在元素的下标。 \n#include <stdio.h>\nvoid fun ( int ﹡s,int n,int ﹡k )\n{\n    int i;\n    for ( i ＝ 0 ,﹡k ＝ i;i < n;i + + )\n    if( s [i] > s [﹡k] )   \n        ________ ;\n}\nmain ( )\n{\n    int a [5] ＝ ｛1,6,2,8,0｝ , k;\n    fun ( a,5,&k );\n    printf (\"%d %d＼n\",k,a [k] );\n}\n  在横线处应填入的内容是? ","choices":["\n﹡k ＝ i\n","\nk ＝ i\n","\n﹡k ＝ i - s\n","\nk ＝ i - s\n"],"correct_choice":"\n﹡k ＝ i\n"},{"title":"对于定义\"int *p\",下列哪些说明可能是正确的?()","choices":["\np是一个指向int型值的指针\n","\np是一个指向一维数组的指针\n","\np是一个指向二维数组的指针\n","\np是一个动态数组\n"],"correct_choice":"\np是一个指向int型值的指针\n"},{"title":"下面程序的执行结果： class A{ \n    public: \n        long a; \n}; \nclass B : public A { \n    public: \n        long b; \n}; \nvoid seta(A* data, int idx) { \n    data[idx].a = 2; \n} \nint main(int argc, char *argv[]) { \n    B data[4]; \n    for(int i=0; i<4; ++i){ \n        data[i].a = 1; \n        data[i].b = 1; \n        seta(data, i); \n    } \n    for(int i=0; i<4; ++i){ \n         std::cout << data[i].a << data[i].b; \n    } \n    return 0; \n}","choices":["\n11111111\n","\n12121212\n","\n11112222\n","\n21212121\n","\n22221111\n"],"correct_choice":"\n22221111\n"},{"title":"int main(){\n  int a;float b,c;\n  scanf(\"%2d%3f%4f\",&a,&b,&c);\n  printf(\"\\na=%d,b=%d,c=%f\\n\",a,b,c);\n}   若运行时从键盘上输入9876543210l,则上面程序在gcc编译器下的输出结果是 ","choices":["\na=98,b=765,c=4321.000000\n","\na=98,b=0,c=0.000000\n","\na=98,b=765.000000,c=4321.000000\n","\na=98,b=765.0,c=4321.0\n"],"correct_choice":"\na=98,b=0,c=0.000000\n"},{"title":"In C++, what does \"explicit\" mean? what does\n\"protected\" mean?","choices":["\nexplicit-keyword enforces only explicit casts to be valid\n","\nProtected members are accessible in the class that defines them and in classes that inherit from that class.\n","\nProtected members only accessible within the class defining them.\n","\nAll the above are wrong\n"],"correct_choice":"\nexplicit-keyword enforces only explicit casts to be valid\n\nProtected members are accessible in the class that defines them and in classes that inherit from that class.\n"},{"title":"  已知 year 为整型变量,不能使表达式(year%4==0&&year%100!=0)||year%400==0的值为\"真\"的数据是（）。  ","choices":["\n1990\n","\n1992\n","\n1996\n","\n2000\n"],"correct_choice":"\n1990\n"},{"title":"32位操作系统char*a=\"123\"，sizeof（a）是多少？","choices":["\n2\n","\n3\n","\n4\n","\n5\n"],"correct_choice":"\n4\n"},{"title":"基类的保护成员是其公有派生类的（   ）成员","choices":["\n不可见\n","\n私有\n","\n保护\n","\n公有\n"],"correct_choice":"\n保护\n"},{"title":"  下列选项中，不能用作标识符的是(  )。  ","choices":["\n_1234_\n","\n_1_2\n","\nint_2_\n","\n2_int_\n"],"correct_choice":"\n2_int_\n"},{"title":"\n  类静态成员数据为该类所有对象共享，在该类对象被撤销时，静态成员并不撤销。 \n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"  下列程序段的输出结果为（）。    int a=7,b=9,t;    t=a*=a>b?a:b;    printf(\"%d\",t); ","choices":["\n7\n","\n9\n","\n63\n","\n49\n"],"correct_choice":"\n63\n"},{"title":"  有以下程序 \n#include <stdio.h>\nmain()\n{\n    int y ＝ 1,x,a [ ] ＝ ｛2,4,6,8,10｝,*p;\n    p ＝ &a[1];\n    for (x ＝ 0; x < 3;x + +) \n        y ＝ y + *(p + x);\n    printf (\"%d＼n \",y );\n｝\n  程序运行后的输出结果是？ ","choices":["\n17\n","\n19\n","\n18\n","\n20\n"],"correct_choice":"\n19\n"},{"title":"\n  若有定义语句：\n  int a=10\n  ；\n  double b=3.14\n  ；则表达式\n  ’A’+a+b\n  值的类型是（）\n","choices":["\nchar\n","\nint\n","\ndouble\n","\nfloat\n"],"correct_choice":"\ndouble\n"},{"title":"假定MyClass为一个类，则该类的拷贝构造函数的声明语句是","choices":["\nMyClass(MyClass x)\n","\nMyClass &(MyClass x)\n","\nMyClass(MyClass &x)\n","\nMyClass(MyClass *x)\n"],"correct_choice":"\nMyClass(MyClass &x)\n"},{"title":"  下面程序段的运行结果是： \n\n     char C[5]={‘a’,’b’,’\\0’,’c’,’\\0’};  \n     printf(“%s”,C);  \n  \n","choices":["\n’a’’b’\n","\nab\n","\nab_c\n","\nab_c_(其中_表示空格)\n"],"correct_choice":"\nab\n"},{"title":"  下面程序应该输出多少？ \nchar *c[] = { \"ENTER\", \"NEW\", \"POINT\", \"FIRST\" }; \nchar **cp[] = { c+3, c+2, c+1, c }; \nchar ***cpp = cp; \n\nint main(void)\n{ \n    printf(\"%s\", **++cpp); \n    printf(\"%s\", *--*++cpp+3); \n    printf(\"%s\", *cpp[-2]+3); \n    printf(\"%s\\n\", cpp[-1][-1]+1); \n    return 0;\n}\n\n","choices":["\nPOINTERSTEW\n","\nFERSTEPOINW\n","\nNEWPOINTW\n","\nPOINTFIREST\n"],"correct_choice":"\nPOINTERSTEW\n"},{"title":"  在x86系统下,sizeof如下结构体的值是多少? \nstruct{ \nchar a[10];\nint b;\nshort c[3];\n}","choices":["\n20\n","\n22\n","\n24\n","\n26\n"],"correct_choice":"\n24\n"},{"title":"\n  以下程序的运行结果是（）\n\n\n  int main(void) \n\n\n  { \n\n\n  \n    printf(\"%s , %5.3s\\n\",\"computer\",\"computer\"); \n\n\n   return 0; \n\n\n  } \n","choices":["\ncomputer , puter\n","\ncomputer , com\n","\ncomputer , computer\n","\ncomputer , compu.ter\n"],"correct_choice":"\ncomputer , com\n"},{"title":"下面一段程序的输出结果是？\n #define product(x) (（x）*（x）) \n int main() \n { \n     int i = 3, j, k; \n     j = product(i++); \n     k = product(++i); \n     printf(\"%d %d\", j, k); \n     return 0; \n }","choices":["\n9 16\n","\n9 36\n","\n12 30\n","\n12 42\n"],"correct_choice":"\n12 42\n"},{"title":"在一台主流配置的PC机上，调用f(35)所需的时间大概是_______。 int f(int x) {\n    int s=0;\n    while(x-- >0)   s+=f(x);\n    return max(s,1);\n}","choices":["\n几毫秒\n","\n几秒\n","\n几分钟\n","\n几小时\n"],"correct_choice":"\n几分钟\n"},{"title":"\n  指针变量可以由整数赋,不能用浮点赋。说法是否正确？\n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"  关系运算符<= 与 == 的优先级相同。请问这句话的说法是正确的吗？ ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"  \"A\"是一个字符常量。请问这个说法是正确的吗？ ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"  下列表达式中，可作为 C 合法表达式的是（）。  ","choices":["\n[3,2,1,0]\n","\n(3,2,1,0)\n","\n3=2=1=0\n","\n3/2/1/0\n"],"correct_choice":"\n(3,2,1,0)\n"},{"title":"  C语言，设有宏定义：  #define A 4+5\n#define B A*A   则表达式B*B的值为 ","choices":["\n81\n","\n69\n","\n6561\n","\n33\n"],"correct_choice":"\n69\n"},{"title":"当 #include 后面的文件名用双引号括起来时，寻找被包含文件的方式是(    )。","choices":["\n直接按系统设定的标准方式搜索目录\n","\n先在源程序所在目录搜索，再按系统设定的标准方式搜索目录\n","\n仅仅搜索源程序所在目录\n","\n搜索当前逻辑盘上的所有目录\n"],"correct_choice":"\n先在源程序所在目录搜索，再按系统设定的标准方式搜索目录\n"},{"title":"  下列程序的输出是（）   #define add(a，b) a+b\nint main()\n{\n    printf(\"%d\\n\",5*add(3，4));\n    return 0;\n} ","choices":["\n23\n","\n35\n","\n16\n","\n19\n"],"correct_choice":"\n19\n"},{"title":"如果有#define AREA(a,b)a+b则语句int s=AREA(3,4)*AREA(3,4) 执行后变量s值为（）","choices":["\n24\n","\n49\n","\n144\n","\n19\n"],"correct_choice":"\n19\n"},{"title":"定义char dog[]=\"wang\\0miao\";那么sizeof(dog)与strlen(dog)分别是多少：","choices":["\n10,4\n","\n4,4\n","\n9,9\n","\n9,4\n"],"correct_choice":"\n10,4\n"},{"title":"下面哪一个不是动态链接库的优点？","choices":["\n共享\n","\n装载速度快\n","\n开发模式好\n","\n减少页面交换\n"],"correct_choice":"\n装载速度快\n"},{"title":"以下代码的输出结果是?\nvoid main() { \n    char str[]=\"S\\065AB\"; \n    printf(\"\\n%d\", sizeof(str)); \n}\n","choices":["\n7\n","\n6\n","\n5\n","\nerror\n"],"correct_choice":"\n5\n"},{"title":"以下说法正确的是？","choices":["\n在多线程中不加限制的随意访问非static局部变量不会导致运算结果出错\n","\n在多线程中不加限制的随意访问非static全局变量可能会导致运算结果出错\n","\n在多线程中不加限制的随意访问static局部变量不会导致运算结果出错\n","\n在多线程中不加限制的随意访问static全局变量可能会导致运算结果出错\n"],"correct_choice":"\n在多线程中不加限制的随意访问非static局部变量不会导致运算结果出错\n\n在多线程中不加限制的随意访问非static全局变量可能会导致运算结果出错\n\n在多线程中不加限制的随意访问static局部变量不会导致运算结果出错\n\n在多线程中不加限制的随意访问static全局变量可能会导致运算结果出错\n"},{"title":"下列程序的运行结果是PP 10003，请为横线处选择合适的程序（      ） \n #include<stdio.h>\n #include<string.h>\n struct STU \n { \n    char name[10]; \n    int num;\n }; \n void f(char_____, int num) \n { \n    struct STU s[2]={{\"SS\",10001},{\"PP\",10002}}; \n    num = s[1].num; \n    strcpy(name, s[1].name);\n } \n main() \n { \n    struct STU  s[2]={{\"YY\",10003},{\"LL\",10004}},*p; \n    p=s; \n    f(p->name, p->num); \n    printf(\"%s %d\\n\", p->name, p->num); \n } \n","choices":["\n*name\n","\nname[]\n","\nname\n","\n&name\n"],"correct_choice":"\n*name\n\nname[]\n"},{"title":"请指出以下程序的错误：  void GetMemory(char **p, int num)\n{\n    if(NULL==p && num<=0)//1\n\n        return;\n    *p=(char*)malloc(num); \n    return;\n}\nvoid main(void){\n    char *str=NULL;\n    GetMemory(&str,80); //2\n    if(NULL!=str){\n        strcpy(&str,\"hello\"); //3\n        printf(str);\n    }\n    return true; //4\n} ","choices":["\n1\n","\n2\n","\n3\n","\n4\n"],"correct_choice":"\n1\n\n3\n\n4\n"},{"title":"下列运算符，在C++语言中不能重载的是（）","choices":["\n*\n","\n.*\n","\n::\n","\noperator  delete\n"],"correct_choice":"\n.*\n\n::\n"},{"title":"\n  若有定义：\n  char  c; int  d; \n  程序运行时输入：\n  c=1,d=2<\n  回车\n  >\n  ，能把字符\n  1\n  输入给变量\n  c\n  、整数\n  2\n  输入给变量\n  d\n  的输入语句是（ ）。\n","choices":["\nscanf(\"c=%d d=%d\", &amp;c,&amp;d);\n","\nscanf(\"c=%c d=%d\", &amp;c,&amp;d);\n","\nscanf(\"c=%d,d=%d\", &amp;c,&amp;d);\n","\nscanf(\"c=%c,d=%d\", &amp;c,&amp;d);\n"],"correct_choice":"\nscanf(\"c=%c,d=%d\", &amp;c,&amp;d);\n"},{"title":"  以下程序段的执行结果是（）。    double  x;x=218.82631;    printf(\"%-6.2e\\n\",x); ","choices":["\n输出格式描述符的域宽不够,不能输出\n","\n输出为21.38e+01\n","\n输出为2.19e+02\n","\n输出为-2.14e2\n"],"correct_choice":"\n输出为2.19e+02\n"},{"title":"当调用函数时，实参是一个数组名，则向函数传送的是（        ）","choices":["\n数组的长度\n","\n数组的首地址\n","\n数组每一个元素的地址\n","\n数组每个元素中的值\n"],"correct_choice":"\n数组的首地址\n"},{"title":"通过一个对象调用虚函数时，C++系统对该调用采用(  )。","choices":["\n动态联编\n","\n静态联编\n","\n不确定是哪种联编\n","\n函数重载\n"],"correct_choice":"\n静态联编\n"},{"title":"\n  以下程序的输出结果为（）。\n\n\n  #define ADD(x)  x*x \n\n\n  main( )\n\n\n  {  int a=4,b=6,c=7,d=ADD(a+b)*c; \n\n\n  printf(\"d=%d\",d);\n\n\n  } \n","choices":["\nd=70\n","\nd=80\n","\nd=140\n","\nd=700\n"],"correct_choice":"\nd=70\n"},{"title":"C\n语言程序中，运算对象必须是整型数的运算符是（）","choices":["\n&amp;&amp;\n","\n/\n","\n%\n","\n*\n"],"correct_choice":"\n%\n"},{"title":"  下列各带有通配符的文件名中,能代表文件XYZ.TXT的是（  ）。  ","choices":["\n*Z.?\n","\nX*.*\n","\n?Z,TXT\n","\n?.?\n"],"correct_choice":"\nX*.*\n"},{"title":"  有以下程序   int \nf1(int  x,int  y){return \nx>y?x:y;}\nint \nf2(int  x,int  y){return \nx>y?y:x;}\nmain()\n{  \nint  a=4,b=3,c=5,d=2,e,f,g;\n   \ne=f2(f1(a,b),f1(c,d));\n   \nf=f1(f2(a,b),f2(c,d));\n   \ng=a+b+c+d-e-f;\n   \nprintf(\"%d,%d%d\\n\",e,f,g);\n}   程序运行后的输出结果是(    )。   ","choices":["\n4，3，7\n","\n3，4，7\n","\n5，2，7\n","\n2，5，7\n"],"correct_choice":"\n4，3，7\n"},{"title":"  下面代码会输出什么？（）     ","choices":["\n什么都没输出\n","\nA\n","\n编译报错\n","\n其余选项都错\n"],"correct_choice":"\nA\n"},{"title":"在重载运算符函数时，下面（）运算符必须重载为类成员函数形式（）","choices":["\n+\n","\n-\n","\n++\n","\n->\n"],"correct_choice":"\n->\n"},{"title":"内联函数在编译时是否做参数类型检查?","choices":["\n不做检查，和宏一样\n","\n做类型检查\n","\n和编译器相关\n"],"correct_choice":"\n做类型检查\n"},{"title":"#include<stdio.h>\nint cnt=0;\nint fib(int n)\n{\n    cnt++;\n    if(n==0)\n       return 1;\n    else if(n==1)\n       return 2;\n    else\n       return fib(n-1)+fib(n-2);\n}\nvoid main()\n{\n   fib(8);\n   printf(\"%d\",cnt);\n}\n  下列程序执行后,输出的结果为() \n\n  \n","choices":["\n41\n","\n67\n","\n109\n","\n177\n"],"correct_choice":"\n67\n"},{"title":"  下面程序的输出结果是() \n#include <iostream>\nusing namespace std;\nint i = 0;\nint fun( int n )\n{\n    static int a = 2;\n    a++;\n    return(a * n);\n}\n\n\nint main()\n{\n    int k = 5;\n    {\n        int i = 2;\n        k += fun( i );\n    }\n    k += fun( i );\n    cout << k;\n    return(0);\n}\n\n","choices":["\n11\n","\n12\n","\n13\n","\n14\n"],"correct_choice":"\n11\n"},{"title":"在C++STL中常用的容器和类型，下面哪些支持下标\"[]\"运算？","choices":["\nvector\n","\nlist\n","\ndeque\n","\nmap\n","\nset\n","\nunordered_map\n","\nunordered_set\n","\nstack\n","\nstring\n"],"correct_choice":"\nvector\n\ndeque\n\nmap\n\nunordered_map\n\nstring\n"},{"title":"  结构化程序由三种基本结构组成，三种基本结构组成的算法(   )。     ","choices":["\n可以完成任何复杂的任务\n","\n只能完成部分复杂的任务\n","\n只能完成符合结构化的任务\n","\n只能完成一些简单的任务\n"],"correct_choice":"\n只能完成符合结构化的任务\n"},{"title":"  以下程序的输出结果是（  ）。   main()\n{ int a=0,i;\nfor(i=1;i<5;i++)\n{ switch(i)\n{ case 0:\ncase 3:a+=2;\ncase 1:\ncase 2:a+=3;\ndefault:a+=5;\n}\n}\nprintf(\"%d\\n\",a);\n}","choices":["\n31\n","\n13\n","\n10\n","\n20\n"],"correct_choice":"\n31\n"},{"title":"  以下叙述中正确的是(   )。  ","choices":["\n局部变量说明为static存储数，其生存期将得到延长\n","\n全局变量说明为static存储类，其作用域将被扩大\n","\n任何存储类的变量在未赋初值时，其值都是不确定的\n","\n形参可以使用的存储类说明符与局部变量完全相同\n"],"correct_choice":"\n局部变量说明为static存储数，其生存期将得到延长\n"},{"title":"  具有“逐步增加产品功能”特征的软件开发模型是（）。 ","choices":["\n传统瀑布模型\n","\n快速原型模型\n","\n增量模型\n","\n螺旋模型\n"],"correct_choice":"\n增量模型\n"},{"title":"\n  判断字符串a是否大于b，应当使用（ ）\n","choices":["\nif (a>b)\n","\nif (strcmp(a,b))\n","\nif (strcmp(b,a)>0)\n","\nif (strcmp(a,b)>0)\n"],"correct_choice":"\nif (strcmp(a,b)>0)\n"},{"title":"有关构造函数的说法不正确的是（        ）","choices":["\n构造函数名字和类的名字一样\n","\n构造函数在定义变量时自动执行\n","\n构造函数无任何函数类型\n","\n构造函数有且只有一个\n"],"correct_choice":"\n构造函数有且只有一个\n"},{"title":"  int a=1,b=2,c=3;    if(a>c)b=a;a=c;c=b;则 c 的值为（）。 ","choices":["\n1\n","\n2\n","\n3\n","\n不一定\n"],"correct_choice":"\n2\n"},{"title":"  有以下程序 \n#include <stdio. h>\nmain()\n{  \n    int i, sum;\n    for( i = 1; i < 6; i + + ) sum + = i;\n    printf(\"%d\\n\", sum);\n}\n  程序运行后的输出结果是？ ","choices":["\n随机值\n","\n0\n","\n15\n","\n16\n"],"correct_choice":"\n随机值\n"},{"title":"char p1[] = “Tencent”, void*p2 = malloc((10)在32位机器上sizeof(p1)和sizeof(p2)对应的值是?","choices":["\n8:0\n","\n4:10\n","\n8:4\n","\n4:4\n"],"correct_choice":"\n8:4\n"},{"title":"下列说法正确的是：","choices":["\n内联函数在运行时是将该函数的目标代码插入每个调用该函数的地方\n","\n内联函数在编译时是将该函数的目标代码插入每个调用该函数的地方\n","\n类的内联函数必须在类体内定义\n","\n类的内联函数必须在类体外通过关键字inline定义\n"],"correct_choice":"\n内联函数在编译时是将该函数的目标代码插入每个调用该函数的地方\n"},{"title":"以下选项中不属于C语言程序运算符的是？","choices":["\nsizeof\n","\n< >\n","\n( )\n","\n&&\n"],"correct_choice":"\n< >\n"},{"title":"  有以下程序 \n#include <stdio.h>\nvoid fun ( char *p,int n )  \n{\n    char b [6] ＝ \"abcde\"; int i;\n    for ( i ＝ 0,p ＝ b;i < n;i + + ) \n        p [i] ＝ b [i];\n}\nmain( )\n{\n    char a [6] ＝ \"ABCDE\";\n    fun (a,5); \n    printf (\"%s\\n\",a ) ;\n｝\n  程序运行后的输出结果是？ ","choices":["\nabcde\n","\nABCDE\n","\nedcba\n","\nEDCBA\n"],"correct_choice":"\nABCDE\n"},{"title":"  函数 \nint f(unsigned int n)\n{ \n   unsigned int m=0;\n   for(m=0;n;++m)\n   {\n     n&=(n-1);\n    }\n    return m;\n}\n  f(2486)的返回值是() ","choices":["\n7\n","\n10\n","\n15\n","\n1243\n"],"correct_choice":"\n7\n"},{"title":"  有以下程序  #include <stdio.h>\n#include <stdlib.h>\nvoid fun ( int *pl,int *p2,int *s )\n{\n    s=(int*) malloc(1,sizeof(int));\n    *s=*pl + *p2;\n    free (s);\n }\nint main ( )\n{\n int a [2]={1,2},b [2]={40,50},*q = a;\n    fun(a,b,q) ;\n    printf ( \"%d\\n\", *q);\n}   程序运行后的输出结果是? ","choices":["\n42\n","\n41\n","\n1\n","\n0\n"],"correct_choice":"\n1\n"},{"title":"关于抽象类和纯虚函数的描述中，错误的是","choices":["\n纯虚函数的声明以“=0;”结束\n","\n有纯虚函数的类叫抽象类，它不能用来定义对象\n","\n抽象类的派生类如果不实现纯虚函数，它也是抽象类\n","\n纯虚函数不能有函数体\n"],"correct_choice":"\n纯虚函数不能有函数体\n"},{"title":"  若有以下程序     #include<stdio.h>     void f(int n);     int main() {        void f(int n);        f(5);     }     void f(int n)     {        printf(\"%d\\n\",n);     }     则以下叙述中不正确的是（）。 ","choices":["\n若只在主函数中对函数f进行说明，则只能在主函数中正确调用函数f\n","\n若在主函数前对函数f进行说明，则在主函数和其后的其它函数中都可以正确调用函数f\n","\n对于以上程序，编译时系统会提示出错信息：提示对对f函数重复说明\n","\n函数f无返回值，所以可用void将其类型定义为无值型\n","\n\t\n若只在主函数中对函数f进行说明，则只能在主函数中正确调用函数f\n//在f函数定义的后面，其它的函数也是可以调用f函数的\n","\n若在主函数前对函数f进行说明，则在主函数和其后的其它函数中都可以正确调用函数f\n\n//正确\n","\n对于以上程序，编译时系统会提示出错信息：提示对f函数重复说明\n//在C语言中变量或函数可以重复声明，但是不能重复定义\n","\n函数f无返回值，所以可用void将其类型定义为无值型\n//正确\n"],"correct_choice":"\n若只在主函数中对函数f进行说明，则只能在主函数中正确调用函数f\n\n对于以上程序，编译时系统会提示出错信息：提示对对f函数重复说明\n\n\t\n若只在主函数中对函数f进行说明，则只能在主函数中正确调用函数f\n//在f函数定义的后面，其它的函数也是可以调用f函数的\n"},{"title":"  以下程序段的输出结果为（） \n\n     char c[] = \"\\t\\v\\\\0will\\n\";  \n  printf(\"%d\", strlen(c));  \n","choices":["\n14\n","\n3\n","\n9\n","\n编译错误\n"],"correct_choice":"\n9\n"},{"title":"若有定义：int a=7；float x=2.5，y=4.7；则表达式x+a%3*（int）（x+y）%2/4的值是（        ）","choices":["\n2.750000\n","\n3.500000\n","\n2.500000\n","\n0.00000\n"],"correct_choice":"\n2.500000\n"},{"title":"  int a=1,b=2,c=3;if(a>c)b=a;a=c;c=b;则 c 的值为（）。  ","choices":["\n1\n","\n2\n","\n3\n","\n不一定\n"],"correct_choice":"\n2\n"},{"title":"重载函数在调用时选择的依据中，错误的是（        ）","choices":["\n参数个数\n","\n参数类型\n","\n函数名字\n","\n函数类型\n"],"correct_choice":"\n函数类型\n"},{"title":"  语句 char *p=\"Turbo C\"的含义是将字符串赋给字符型指针变量 p。请问这句话的说法是正确的吗？  ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"  若有定义和语句：int a[3][3]={{3,5},{8,9},{12,35}},i,sum=0;for(i=0;i<3;i++)  sum+=a[i][2-i]; 则sum=21。请问这句话的说法是正确的吗？      ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"  在32位环境下，以下代码输出的是（    ）    #include<stdio.h>\n \nclass A\n{\npublic:\nA(){ printf(“A”);}\n~A(){ printf(“~A”);\n};\nclass B:public A\n{\npublic;\nB(){ printf(“B”);}\n~B(){ printf(“~B”);}\n};\n \nint main()\n{\nA*c = new B[2];\ndelete[] c;\nreturn 0;\n} ","choices":["\nABAB`~A~A\n","\nABAB`~B~A~B~A\n","\nABAB`~B~A\n","\nABAB`~A~B~A~B\n"],"correct_choice":"\nABAB`~A~A\n"},{"title":"下面代码的输出结果是?\nvoid main(){\n        printf(\"%d\",150/50%5);\n}\n","choices":["\n5\n","\n3\n","\n编译错误\n","\nNAN\n"],"correct_choice":"\n3\n"},{"title":"以下选项中合法的常量是？","choices":["\n9 9 9\n","\n2.7e\n","\n0Xab\n","\n123E 0.2\n"],"correct_choice":"\n0Xab\n"},{"title":"在32位操作系统中，我们定义如下变量 int (*n)[10]; 请问调用函数sizeof(n),返回值为（）","choices":["\n4\n","\n40\n","\n8\n","\n80\n"],"correct_choice":"\n4\n"},{"title":"C++内存分配中说法错误的是：______。","choices":["\n对于栈来讲，生长方向是向上的，也就是向着内存地址增加的方向\n","\n对于堆，大量的 new/delete 操作会造成内存空间的不连续\n","\n堆容易产生 memory leak\n","\n堆的效率比栈要低得多\n","\n栈变量引用容易逃逸\n","\n栈区一般由编译器自动分配释放，堆区一般由程序员分配释放。\n"],"correct_choice":"\n对于栈来讲，生长方向是向上的，也就是向着内存地址增加的方向\n"},{"title":"\"My salary was increased by 15%!\" \n  下列哪个选项可以准确的显示出上述语句？","choices":["\nprintf(\"\\\"My salary was increased by 15/%\\!\\\"\\n\");\n","\nprintf(\"My salary was increased by 15%!\\n\");\n","\nprintf(\"My salary was increased by 15'%'!\\n\");\n","\nprintf(\"\\\"My salary was increased by 15%%!\\\"\\n\");\n"],"correct_choice":"\nprintf(\"\\\"My salary was increased by 15%%!\\\"\\n\");\n"},{"title":"在c语言中，要求运算必须是整型的运算符是：","choices":["\n/\n","\n++\n","\n!=\n","\n%\n"],"correct_choice":"\n%\n"},{"title":"在64位系统中，有如下类：\nclass C\n{\npublic:\n    char a;\n    static char b;\n    void *p;\n    static int *c;\n    virtual void func1();\n    virtual void func2();\n};\n\n\n  那么sizeof（C）的数值是（）","choices":["\n9\n","\n17\n","\n32\n","\n24\n"],"correct_choice":"\n24\n"},{"title":"编译运行如下程序会出现什么结果 #include <stdio.h>\nclass A\n{\n    A()\n    {\n        printf(\"A()\");\n    }\n};\nvoid main()\n{\n    A a;\n}\n\n 则输出 ","choices":["\nA()\n","\n编译错误\n","\n链接错误\n","\n以上都不对\n"],"correct_choice":"\n编译错误\n"},{"title":"有如下语句序列：\n char str[10]；cin>>str；\n 当从键盘输入”I love this game”时，str中的字符串是\n","choices":["\n\"I love this game\"\n","\n\"I love thi\"\n","\n\"I love\"\n","\n\"I\"\n"],"correct_choice":"\n\"I\"\n"},{"title":"下面重载乘法运算符的函数原型声明中正确的是:","choices":["\nMyClass operator *(double ,MyClass);\n","\nMyClass operator *(MyClass ,MyClass);\n","\nMyClass operator *(double ,double);\n","\nMyClass operator *(MyClass ,double);\n"],"correct_choice":"\nMyClass operator *(double ,MyClass);\n\nMyClass operator *(MyClass ,MyClass);\n\nMyClass operator *(MyClass ,double);\n"},{"title":"  已知各变量的类型说明如下：     int k,a,b ；     unsigned int w=5 ；     double x=1.42 ；     则以下不符合c语言语法的表达式是（ ）。  ","choices":["\nx％3\n","\nw+=-20\n","\nk=（a=200,b=300）\n","\na+=a-=a=9\n"],"correct_choice":"\nx％3\n"},{"title":"\n  以下代码最后一次打印结果是（）\n\n\n  \n     void fun(int iinputnum)\n  \n\n\n  \n\n\n  {\n\n\n     static int icount=1;\n\n\n  \n\n\n  icount=icount+iinputnum;\n\n\n  \n\n\n  print(\n  “\n  \\n icount =%d\n  ”\n  ,icount+iinputnum);\n\n\n  }\n\n\n  for(i=1;i<3;i++) fun（i）;\n","choices":["\niCount=3\n","\niCount=6\n","\niCount=4\n","\niCount=20\n"],"correct_choice":"\niCount=6\n"},{"title":"有两个字符数组 a 和 b，则以下正确的输入语句是（）","choices":["\ngets(a, b)\n","\nscanf(\"%s%s\", a, b);\n","\nscanf(\"%c%c\", &a, &b);\n","\ngets(\"a\"), gets(\"b\");\n"],"correct_choice":"\nscanf(\"%s%s\", a, b);\n"},{"title":" 若有宏定义：#define       MOD(x，y) x％y       则执行以下语句后的输出结果是     int a=13,b=94; \nprintf(\"％d\\n\"，MOD(b，a+4)); ","choices":["\n5\n","\n7\n","\n9\n","\n11\n"],"correct_choice":"\n7\n"},{"title":"\n  若有定义：char *p(char       a[10]);则p是函数名。（）\n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"关于vector<>初始化问题下面那个是非法的?","choices":["\nvector<string> sVec;\n","\nvector<vector<int>> ivvec;\n","\nvector<vector<string>> svvec( \"hello\" );\n"],"correct_choice":"\nvector<vector<string>> svvec( \"hello\" );\n"},{"title":"  若MyClass是一个类名，其有如下语句序列： \nMyClass c1，*c2；\nMyClass *c3=new MyClass；\nMyClass &c4=c1；\n  上面的语句序列调用构造函数个数是( )。 ","choices":["\n1\n","\n2\n","\n3\n","\n4\n"],"correct_choice":"\n2\n"},{"title":"下列代码的输出为：\n#include \"iostream\"  \n#include \"vector\"  \nusing namespace std;  \n  \nint main(void)  \n{  \n    vector<int>array;  \n    array.push_back(100);  \n    array.push_back(300);  \n    array.push_back(300);  \n    array.push_back(500);  \n    vector<int>::iterator itor;  \n    for(itor=array.begin();itor!=array.end();itor++)  \n    {  \n        if(*itor==300)  \n        {  \n            itor = array.erase(itor);  \n        }  \n    }  \n    for(itor=array.begin();itor!=array.end();itor++)  \n    {  \n        cout<<*itor<<\" \";  \n    }  \n    return 0;  \n}  \n\n","choices":["\n100   300   300   500\n","\n100    300     500\n","\n100    500\n","\n程序错误\n"],"correct_choice":"\n100    300     500\n"},{"title":"有如下程序：\n#include <math.h>\n#include <iostream>\nusing namespace std;\n\nclass Point\n{\n friend double Distance( const Point & p1, const Point & p2 )    /* ① */\n {\n double dx  = p1.x_ - p2.x_;\n double dy  = p1.y_ - p2.y_;\n return(sqrt( dx * dx + dy * dy ) );\n }\n\n\npublic:\n Point( int x, int y ) : x_( x ), y_( y )                        /* ② */\n {\n }\n\n\nprivate:\n int    x_;\n int    y_;\n};\n\n\nint main( void )\n{\n Point  p1( 3, 4 );\n Point  p2( 6, 9 );\n\n cout << Distance( p1, p2 ) << endl;                      /* ③ */\n return(0);\n}\n\n下列叙述中正确的是","choices":["\n程序编译正确\n","\n程序编译时语句①出错\n","\n程序编译时语句②出错\n","\n程序编译时语句③出错\n"],"correct_choice":"\n程序编译正确\n"},{"title":"  有以下定义语句 double a,b; int w; long c;     若各变量已正确赋值，则下列选项中正确的表达式是(   )。  ","choices":["\na=a+b=b++\n","\nw%(int)(a+b)\n","\n(c+w)%(int)a\n","\nw=a==b;\n"],"correct_choice":"\nw%(int)(a+b)\n\n(c+w)%(int)a\n"},{"title":"  若有 \n  struct student  \n  {    char name[20]; \n       float score;  \n  }stu; \n  则以下赋值正确的是（）。 ","choices":["\nstudent=96\n","\nstu=96\n","\nscore=96\n","\nstu.score=96\n"],"correct_choice":"\nstu.score=96\n"},{"title":"\n  在C++中常量可分为6种,它们是整型常量、实型常量、字符型常量、字符串常量、符号常量、逻辑型常量.说法是否正确？\n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"  有以下程序  main()\n{ int a=666,b=888;\n  printf(\"%d\\n\",a,b);\n}   程序运行后的输出结果是(   )。     ","choices":["\n错误信息\n","\n666\n","\n888\n","\n666,888\n"],"correct_choice":"\n666\n"},{"title":"  以下程序的运行结果是（）。  main()\n{ int n;\nfor(n=1;n<=10;n++)\n{\nif(n%3==0) continue;\nprintf(\"%d\",n);\n}\n} ","choices":["\n12457810\n","\n369\n","\n12\n","\n1234567890\n"],"correct_choice":"\n12457810\n"},{"title":"  若有下面的说明和定义：   struct test\n{ int ml;\nchar m2; float m3;\nunion uu\n{char ul[5]; int u2[2];} ua;\n} myaa;   则sizeof(struct test )的值是（ ）。  ","choices":["\n20\n","\n16\n","\n14\n","\n9\n"],"correct_choice":"\n20\n"},{"title":"\n  下列存储标识符中，（ ）的可见性与存在性不一致\n","choices":["\n外部类\n","\n自动类\n","\n内部静态类\n","\n寄存器类\n"],"correct_choice":"\n内部静态类\n"},{"title":"\n  C++程序在执行过程中对预处理命令行进行处理。说法是否正确？\n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"  下列变量说明语句中，正确的是（）。 ","choices":["\nchar:a b c;\n","\nchar a;b;c;\n","\nint x;z;\n","\nint x,z;\n"],"correct_choice":"\nint x,z;\n"},{"title":"有下面一段代码： \nchar szMsisdn[MAX_LEN_MSISDN-1]; \nszMsisdn[sizeof(szMsidn)]=’\\0’; \n 则对执行以上代码后，会出现什么问题？","choices":["\n没有问题\n","\n数组越界\n","\n赋值错误\n","\n忘记加地址运算符&\n"],"correct_choice":"\n数组越界\n"},{"title":"下列描述中，（）是抽象类特有的。","choices":["\n可以声明虚函数\n","\n可以定义友元函数\n","\n可以进行构造函数重载\n","\n不能声明其对象\n"],"correct_choice":"\n不能声明其对象\n"},{"title":"\n  已知宏定义\n\n\n   #define N 3\n\n\n   #define Y(n) ((N+1)*n)\n\n\n  执行语句\n  z=2*(N+Y(5+1));\n  变量\n  z\n  的值是（）\n","choices":["\n42\n","\n48\n","\n54\n","\n出错\n"],"correct_choice":"\n48\n"},{"title":"  标准输入设备的文件流标识符是（   ）。","choices":["\nstderr\n","\nstdin\n","\nstdout\n","\nstdio\n"],"correct_choice":"\nstdin\n"},{"title":"  下列程序的运行结果是13，请为横线处选择合适的程序（）                ","choices":["\nint(*j )\n","\nint *j\n","\nint(A::*j)（）\n","\nint(A::*j)\n"],"correct_choice":"\nint(A::*j)（）\n"},{"title":"  将一个字符串\"abc\"赋给字符串变量 str 的方法是 str=\"abc\"。请问这句话的说法是正确的吗？  ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"\n  以下值不等于3的表达式是_____________（）\n\n\n  \n","choices":["\n'D'-'A'\n","\n'6'-'3'\n","\n'\\011'\n","\n3+'\\0'\n"],"correct_choice":"\n'\\011'\n"},{"title":"每个C语言程序文件的编译错误分为（   ）类","choices":["\n1\n","\n2\n","\n3\n","\n4\n"],"correct_choice":"\n2\n"},{"title":"  若有以下说明和定义     union  dt     {      int  a;   char  b;  double  c;     }data;     以下叙述中错误的是 (      ) 。  ","choices":["\ndata的每个成员起始地址都相同\n","\n变量data所占内存字节数与成员c所占字节数相等\n","\n程序段：data.a=5;printf(\"%f\\n\",data.c);输出结果为5.000000\n","\ndata可以作为函数的实参\n"],"correct_choice":"\n程序段：data.a=5;printf(\"%f\\n\",data.c);输出结果为5.000000\n"},{"title":"  静态变量和外部变量都是全局变量,它们的存储是静态的。请问这句话的说法是正确的吗？  ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"执行c程序代码“int a=1; int b=0; int c=0; int d=(++a)*(c=1);”,a,b,c,d的值分别为（）。","choices":["\n2，0，1，2\n","\n1，0，1，1\n","\n2，0，1，1\n","\n2，0，0，2\n"],"correct_choice":"\n2，0，1，2\n"},{"title":"请阅读下面代码片段并且回答问题：\n#define SIZE_20M (20*1024*1024)\nvoid func_a()\n{\n    char *temp = malloc(SIZE_20M)\n    return;\n}\nvoid func_b()\n{\n    char temp[SIZE_20M];\n    //...do something using temp\n    return;\n}\n\n  关于这段代码，下列说法正确的是","choices":["\nfunc_a 获得临时内存的方式效率通常更高。\n","\nfunc_b 使用了太多的栈，程序可能会在运行时候崩溃。\n","\nfunc_b 存在内存泄露\n","\nfunc_a 和func_b 分配的内存会自动初始化0\n"],"correct_choice":"\nfunc_b 使用了太多的栈，程序可能会在运行时候崩溃。\n"},{"title":"Math.round(11.5)\n等于多少\n(). Math.round(-11.5)\n等于多少\n(  ).","choices":["\n11 ,-11\n","\n11 ,-12\n","\n12 ,-11\n","\n12 ,-12\n"],"correct_choice":"\n12 ,-11\n"},{"title":"以下不能正确定义二维数组的选项是______。","choices":["\nint a[2][2]={{1},{2}};\n","\nint a[][2]={1,2,3,4};\n","\nint a[2][2]={{1},2,3};\n","\nint a[2][]={{1,2},{3,4}};\n"],"correct_choice":"\nint a[2][]={{1,2},{3,4}};\n"},{"title":"32位机上，给你1、2、3 这三个数字，可以使用C的各种运算符，你能在计算机上得到的最大的整数是（）","choices":["\n2*3*sizeof(1)\n","\n3<<(2<<sizeof(1))\n","\nsizeof(3)<<(sizeof(2)<<(sizeof(1)))\n","\n(unsigned long)(2-3)*1\n"],"correct_choice":"\n(unsigned long)(2-3)*1\n"},{"title":"  以下代码中的两个sizeof用法有问题吗？ \n  void UpperCase( char str[] ) // 将 str 中的小写字母转换成大写字母\n  {\n  for ( size_t i = 0; i < sizeof(str) / sizeof(str[0]); ++i )\n  if ( 'a' <= str[i] && str[i] <= 'z' )\n  str -= ('a' - 'A' );\n  }\n  char str[] = \"aBcDe\";\n  cout < < \"str字符长度为: \" < < sizeof(str) /\nsizeof(str[0]) < < endl;\n  UpperCase( str );\n  cout < < str < < endl;\n\n","choices":["\n函数内的有问题\n","\n函数外的有问题\n","\n函数内，外的都有问题\n","\n用法正确\n"],"correct_choice":"\n函数内，外的都有问题\n"},{"title":"  针对以下代码， \nconst char str1[] = \"abc\";\nconst char str2[] = \"abc\";\nconst char *p1 = \"abc\";\nconst char *p2 = \"abc\";\n\n  判断下列说法哪个是正确的（） ","choices":["\nstr1和str2地址不同，P1和P2指向的地址相同\n","\nstr1和str2地址相同，P1和P2指向的地址相同\n","\nstr1和str2地址不同，P1和P2指向的地址不同\n","\nstr1和str2地址相同，P1和P2指向的地址不同\n","\nstr1和str2地址相同，P1和P2指向的地址相同且与str1和str2地址相同\n","\n以上说法错误都不正确\n"],"correct_choice":"\nstr1和str2地址不同，P1和P2指向的地址相同\n"},{"title":"一个类如果有一个以上的基类就叫做（）。","choices":["\n循环继承\n","\n单继承\n","\n非法继承\n","\n多继承\n"],"correct_choice":"\n多继承\n"},{"title":"  以下正确的描述是：在 C 语言程序中（）。 ","choices":["\n函数的定义可以嵌套,但函数的调用不可以嵌套\n","\n函数的定义不可以嵌套,但函数的调用可以嵌套\n","\n函数的定义和函数的调用均不可以嵌套\n","\n函数的定义和函数的调用均可以嵌套\n"],"correct_choice":"\n函数的定义不可以嵌套,但函数的调用可以嵌套\n"},{"title":"下列描述错误的是（        ）","choices":["\n在创建对象前，静态成员不存在\n","\n静态成员时类的成员\n","\n静态成员不能是虚函数\n","\n静态成员函数不能直接访问非静态成员\n"],"correct_choice":"\n在创建对象前，静态成员不存在\n"},{"title":"通过指针调用基类虚函数时，C++系统对该调用采用(   )。","choices":["\n动态联编\n","\n静态联编\n","\n不确定是哪种联编\n","\n函数重载\n"],"correct_choice":"\n动态联编\n"},{"title":"  C 语言允许函数类型缺省定义，此时函数值隐含的类型是（）。  ","choices":["\nfloat\n","\nint\n","\nlong\n","\ndouble\n"],"correct_choice":"\nint\n"},{"title":"  下列程序的输出是：（  ） \n#define add(a,b) a+b\nint main()\n{\n    printf(“ % d\\n”, 5 * add(3, 4));\n    return 0;\n}\n\n\n  \n","choices":["\n23\n","\n35\n","\n16\n","\n19\n"],"correct_choice":"\n19\n"},{"title":"\n  break是C++语言中的关键字.说法是否正确？ \n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"  以下选项中,不能作为合法常量的是(    )。  ","choices":["\n1.234e04\n","\n1.234e0.4\n","\n1.234e+4\n","\n1.234e0\n"],"correct_choice":"\n1.234e0.4\n"},{"title":"  在下面的一维数组定义中，哪一个有语法错误。（    ）\n","choices":["\nint a[]={1,2,3};\n","\nint a[10]={0};\n","\nint a[];\n","\nint a[5];\n"],"correct_choice":"\nint a[];\n"},{"title":"int A[2][3]={1,2,3,4,5,6};,则A[1][0]和*(*(A+1)+1)的值分别是（）","choices":["\n4 5\n","\n4 3\n","\n3 5\n","\n3 4\n"],"correct_choice":"\n4 5\n"},{"title":"\n  char a\n  ；\n  int b\n  ；\n  flat c\n  ；\n  double d\n  ；\n\n\n  则表达式\n  a*b+d-c\n  值的类型为（）\n","choices":["\nfloat\n","\nint\n","\nchar\n","\ndouble\n"],"correct_choice":"\ndouble\n"},{"title":"在Windows 32位操作系统中，假设字节对齐为4，对于一个空的类A，sizeof(A)的值为（）？","choices":["\n0\n","\n1\n","\n2\n","\n4\n"],"correct_choice":"\n1\n"},{"title":"如何定义一个int类型的指针数组，数组元素个数为10个：","choices":["\nint a[10];\n","\nint (*a)[10];\n","\nint *a[10];\n","\nint (*a[10])(int);\n"],"correct_choice":"\nint *a[10];\n"},{"title":"下面哪种C/C++\n 分配内存的方法会将分配的空间初始化为0\n","choices":["\nmalloc()\n","\ncalloc()\n","\nrealloc()\n","\nnew[ ]\n"],"correct_choice":"\ncalloc()\n"},{"title":"time_t t;\n  哪个选项可以将t初始化为当前程序的运行时间？","choices":["\nt = clock();\n","\ntime( &t );\n","\ntime( t );\n","\nt = localtime();\n","\nNone of the above\n"],"correct_choice":"\nt = clock();\n"},{"title":"下面说法正确的是（）","choices":["\n在C++语言中new和malloc都是在堆（heap）上进行动态的内存操作，可以互相代替。\n","\nC++语言重载（over load）是指子类重新定义父类的虚函数的方法。\n","\nC++语言函数既可以嵌套定义又可以递归调用。\n","\n在C++语言中调用函数时，只能把实参的值传给形参，形参的值不能传送给实参（不考虑引用、指针等情况）。\n"],"correct_choice":"\n在C++语言中调用函数时，只能把实参的值传给形参，形参的值不能传送给实参（不考虑引用、指针等情况）。\n"},{"title":"  下列关于stl的说法正确的是（）  ","choices":["\nmap的迭代器的key是const类型，无法对其进行修改\n","\nstl的排序算法一般比较传统的快速排序快是因为其选取中值的算法好\n","\nlist是双链表实现，插入的元素的复杂度为O(1)\n","\nvector的大小会增大或者减少，但容量只会增大不会减少\n"],"correct_choice":"\nmap的迭代器的key是const类型，无法对其进行修改\n\nlist是双链表实现，插入的元素的复杂度为O(1)\n"},{"title":"  putchar 函数可以向终端输出一个（）。 ","choices":["\n整型变量表达式值\n","\n实型变量值\n","\n字符串\n","\n字符或字符型变量值\n"],"correct_choice":"\n字符或字符型变量值\n"},{"title":"  变量 p 为指针变量，若 p=&a，下列说法不正确的是（）。  ","choices":["\n&*p==&a\n","\n*&a==a\n","\n(*p)++==a++\n","\n*(p++)==a++\n"],"correct_choice":"\n*(p++)==a++\n"},{"title":"\n  在派生类的函数中\n  能够直接访问基类的\n  公有成员和保护成员。这句话是否正确？\n\n\n  \n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"\n  下列描述中正确的是（）\n","choices":["\n表示m>n为true或者m<n为true的表达式为m>n&&m<n\n","\nswitch语句结构中必须有default语句\n","\n如果至少有一个操作数为true，则包含“||”运算符的表达式true\n","\nif语句结构中必须有else语句\n"],"correct_choice":"\n如果至少有一个操作数为true，则包含“||”运算符的表达式true\n"},{"title":"假定变量 x 定义为“int x=5;”，要使 rx 成为 x 的引用（别名），rx 应定义为（   ）。","choices":["\nint rx = x;\n","\nint rx = &x;\n","\nint *rx = &x;\n","\nint &rx = x;\n"],"correct_choice":"\nint &rx = x;\n"},{"title":"  C 语言规定:在一个源程序中,main 函数的位置必须在最开始。  ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"若有int w=1，x=2，y=3，z=4；则条件表达w<x?w:y<z?y:z的值是3.","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"假定一个二维数组的定义语句为“int a[3][4]={{3,4},{2,8,6}};”，则元素a[1][2]的值为","choices":["\n6\n","\n4\n","\n2\n","\n8\n"],"correct_choice":"\n6\n"},{"title":"声明一个指向含有10个元素的数组的指针，其中每个元素是一个函数指针，该函数的返回值是int，参数是int*，正确的是（）","choices":["\n（int *p[10]）（int*）\n","\nint [10]*p（int *）\n","\nint (*(*p)[10])(int *)\n","\nint ((int *)[10])*p\n","\n以上选项都不正确\n"],"correct_choice":"\nint (*(*p)[10])(int *)\n"},{"title":"#include<iostream>\nusing namespace std;\nclass MyClass\n{\npublic:\n    MyClass(int i = 0)\n    {\n        cout << i;\n    }\n    MyClass(const MyClass &x)\n    {\n        cout << 2;\n    }\n    MyClass &operator=(const MyClass &x)\n    {\n        cout << 3;\n        return *this;\n    }\n    ~MyClass()\n    {\n        cout << 4;\n    }\n};\nint main()\n{\n    MyClass obj1(1), obj2(2);\n    MyClass obj3 = obj1;\n    return 0;\n}\n\n\n\n  运行时的输出结果是（）","choices":["\n11214444\n","\n11314444\n","\n122444\n","\n123444\n"],"correct_choice":"\n122444\n"},{"title":"  如下程序: \n#include \"stdio.h\"\nclass Base\n{\npublic:\n    Base()\n    {\n        Init();\n    }\n    virtual void Init()\n    {\n        printf(\"Base Init\\n\");\n    }\n    void func()\n    {\n        printf(\"Base func\\n\");\n    }\n};\nclass Derived: public Base\n{\npublic:\n    virtual void Init()\n    {\n        printf(\"Derived Init\\n\");\n    }\n    void func()\n    {\n        printf(\"Derived func\\n\");\n    }\n};\n\nint main()\n{\n    Derived d;\n    ((Base *)&d)->func();\n    \n    return 0;\n}\n\n  该程序的执行结果\n","choices":["\nBase Init\t\t\t\t\nDerived func\n","\nBase Init\nBase func\n","\nDerived Init\t\t\t\nBase func\n","\nDerived Init\nDerived func\n"],"correct_choice":"\nBase Init\nBase func\n"},{"title":"  现在有以下两个函数，调用test的结果是 \nchar* getMem(void) {     \n      char p[] = “hello world ”;\n       p[5] = 0x0;\n       return p;\n }\n void test(void) {     \n      char *s = 0x0;\n       s = getMem();\n       printf(s);\n }\n\n","choices":["\nhello\n","\n无输出\n","\nHello0world\n","\n不确定\n"],"correct_choice":"\n不确定\n"},{"title":"若有定义int（*pt）[3]；则下列说法正确的是：","choices":["\n定义了基类型为int的三个指针变量\n","\n定义了基类型为int的具有三个元素的指针数组pt\n","\n定义了一个名为*pt、具有三个元素的整型数组\n","\n定义了一个名为pt的指针变量，它可以指向每行有三个整数元素的二维数组\n"],"correct_choice":"\n定义了一个名为pt的指针变量，它可以指向每行有三个整数元素的二维数组\n"},{"title":"  以下代码编译有错误，哪个选项能解决编译错误？ \n\n  class A {\n    public:\n        int GetValue() const {\n            vv = 1;\n            return vv;\n         }\n    private:\n        int vv;\n};\n","choices":["\n改变成员变量\"vv\"为\"mutable int vv\"\n","\n改变成员函数\"GetValue\"的声明，以使其不是const的\n","\n都不能修复编译错误\n","\n都可以修复编译错误\n"],"correct_choice":"\n都可以修复编译错误\n"},{"title":"  以 下 for 循 环 的 执 行 次 数 是（）。    for(x=0,y=0;(y=123)&&(x<4);x++); ","choices":["\n是无限循环\n","\n循环次数不定\n","\n4次\n","\n3次\n"],"correct_choice":"\n4次\n"},{"title":"C++对C语言做了很多改造，下列描述中（        ）使得C语言发生了质变，从面向过程编程了面向对象。","choices":["\n增加了一些新的运算符\n","\n允许函数重载，并允许设置缺省参数\n","\n规定函数说明必须用原型\n","\n引进了类和对象的概念\n"],"correct_choice":"\n引进了类和对象的概念\n"},{"title":"\n  下列关于C语言的函数参数说法不正确的是__________（）\n\n\n  \n","choices":["\n实参可以是常量，变量或表达式\n","\n形参可以使常量，变量或表达式\n","\n在函数定义时必须指定形参的类型\n","\n形参与实参的类型应相同或赋值兼容\n"],"correct_choice":"\n形参可以使常量，变量或表达式\n"},{"title":"已知：int a，&ra=a；关于ra的描述中正确的是（    ）","choices":["\nra是int型变量a的地址值\n","\na是int型变量ra的地址值\n","\nra是int型变量a的引用\n","\nra是int型变量a的指针\n"],"correct_choice":"\nra是int型变量a的引用\n"},{"title":"内联函数用什么作标识?","choices":["\nvirtual\n","\nmutable\n","\nextern\n","\ninline\n"],"correct_choice":"\ninline\n"},{"title":"  有以下程序   main()\n{ int m=3,n=4,x;\n \nx=-m++;\n \nx=x+8/++n;\n \nprintf(\"%d\\n\",x);\n}   程序运行后的输出结果是(  )。  ","choices":["\n3\n","\n5\n","\n-1\n","\n-2\n"],"correct_choice":"\n-2\n"},{"title":"对于char*pa[7]的描述中，正确的是（）","choices":["\npa是一个指向数组的指针，所指向的数组是7个char型元素\n","\npa是一个指向某数组中第7个元素的指针，该元素是char型变量\n","\npa[7]表示数组的第7个元素的值，是char型的值\n","\npa是一个具有7个元素的指针数组，每个元素是一个char型指针\n"],"correct_choice":"\npa是一个具有7个元素的指针数组，每个元素是一个char型指针\n"},{"title":"  k为int类型，以下while循环执行次。 \nunsigned int k = 20;\nwhile (k >= 0)\n    --k;","choices":["\n20次\n","\n一次也不执行\n","\n死循环\n","\n21次\n"],"correct_choice":"\n死循环\n"},{"title":"  In the main() function, after ModifyString(text) is called,\n  what’s the value of ‘text’? \nint FindSubString( char* pch )\n{\n    int   count  = 0;\n    char  * p1   = pch;\n    while ( *p1 != '\\0' )\n    {    \n        if ( *p1 == p1[1] - 1 )\n        {\n            p1++;\n            count++;\n        }else  {\n            break;\n        }\n    }\n    int count2 = count;\n    while ( *p1 != '\\0' )\n    {\n        if ( *p1 == p1[1] + 1 )\n        {\n            p1++;\n            count2--;\n        }else  {\n            break;\n        }\n    }\n    if ( count2 == 0 )\n        return(count);\n    return(0);\n}\nvoid ModifyString( char* pText )\n{\n    char  * p1   = pText;\n    char  * p2   = p1;\n    while ( *p1 != '\\0' )\n    {\n        int count = FindSubString( p1 );\n        if ( count > 0 )\n        {\n            *p2++ = *p1;\n            sprintf( p2, \"%i\", count );\n            while ( *p2 != '\\0' )\n            {\n                p2++;\n            }\n            p1 += count + count + 1;\n        }else  {\n            *p2++ = *p1++;\n        }\n    }\n}\nvoid main( void )\n{\n    char text[32] = \"XYBCDCBABABA\";\n    ModifyString( text );\n    printf( text );\n}  ","choices":["\nXYBCDCBABABA\n","\nXYBCBCDA1BAA\n","\nXYBCDCBA1BAA\n","\nXYBCDDBA1BAB\n"],"correct_choice":"\nXYBCDCBA1BAA\n"},{"title":"观察下面一段代码: class ClassA\n{\npublic:\n    virtual ~ ClassA(){};\n    virtual void FunctionA(){};\n};\nclass ClassB\n{\npublic:\n   virtual void FunctionB(){};\n};\nclass ClassC : public ClassA,public ClassB\n{\n    public:\n};\n \nClassC aObject;\nClassA* pA=&aObject;\nClassB* pB=&aObject;\nClassC* pC=&aObject;\n 关于pA,pB,pC的取值,下面的描述中正确的是:","choices":["\npA,pB,pC的取值相同.\n","\npC=pA+pB\n","\npA和pB不相同\n","\npC不等于pA也不等于pB\n"],"correct_choice":"\npA和pB不相同\n"},{"title":"在linux编程中，以下哪个TCP的套接字选项与nagle算法的开启和关闭有关？","choices":["\nTCP_MAXSEG\n","\nTCP_NODELAY\n","\nTCP_SYNCNT\n","\nTCP_KEEPALIVE\n"],"correct_choice":"\nTCP_NODELAY\n"},{"title":"Which of the following statement(s) equal(s) value 1 in C programming language?","choices":["\nthe return value of main function if program ends normally\n","\nreturn (7&1)\n","\nchar *str=\"microsoft\"; return str==\"microsoft\"\n","\nreturn \"microsoft\"==\"microsoft\"\n","\nNone of the above\n"],"correct_choice":"\nreturn (7&1)\n\nchar *str=\"microsoft\"; return str==\"microsoft\"\n\nreturn \"microsoft\"==\"microsoft\"\n"},{"title":"  有以下程序    int f(int a)\n{ return a%2; }\nmain()\n{ int s[8]={1,3,5,2,4,6},i,d=0;\n  for\n(i=0;f(s[i]);i++) d+=s[i];\n \nprintf(\"%d\\n\",d);\n}   程序运行后的输出结果是(  )。  ","choices":["\n9\n","\n11\n","\n19\n","\n21\n"],"correct_choice":"\n9\n"},{"title":"  下列程序的运行结果是 B1 1&B2&B1 2&B2&C 3 ，请为横线处选择合适的程序（）                ","choices":["\nB1(a),m1(b)\n","\nB2(a),m2(b)\n","\nB1(a),B2(b)\n","\nm1(a),m2(b)\n"],"correct_choice":"\nB1(a),m1(b)\n"},{"title":"  下列定义数组的语句中正确的是（）。 ","choices":["\n#define  size  10  \nchar str1[size],str2[size+2];\n","\nchar str[];\n","\nint num['10'];\n","\nint n=5; int a[n][n+2];\n"],"correct_choice":"\n#define  size  10  \nchar str1[size],str2[size+2];\n"},{"title":"用class关键字定义的类，其成员默认的访问属性为（）","choices":["\nprivate\n","\nprotected\n","\npublic\n","\n无定义\n"],"correct_choice":"\nprivate\n"},{"title":"数字字符0的ASCII值为48,若有以下程序: main()\n{\n    char a=’1’,b=’2’;\n    printf(“%c,”,b++);\n    printf(“%d\\n”,b-a);\n}\n 程序运行之后的输出结果是:","choices":["\n3,2\n","\n50,2\n","\n2,2\n","\n2,50\n"],"correct_choice":"\n2,2\n"},{"title":"  如下程序 \n\n\t#include \"stdio.h\"\n\nclass A\n{\npublic:\n    virtual void Test()\n    {\n        printf(\"A test\\n\");\n    }\n};\nclass B: public A\n{\npublic:\n    void func()\n    {\n        Test();\n    }\n    virtual void Test()\n    {\n        printf(\"B test\\n\");\n    }\n};\nclass C: public B\n{\npublic:\n    virtual void Test()\n    {\n        printf(\"C test\\n\");\n    }\n};\nvoid main()\n{\n    C c;\n    ((B *)(&c))->func();\n    ((B)c).func();\n}\n\n\n\n  该程序的执行结果 ","choices":["\nC test\t\t\t\t\nB test\n","\nB test\nB test\n","\nB test\t\t\t\nC test\n","\nA test\nC test\n"],"correct_choice":"\nC test\t\t\t\t\nB test\n"},{"title":"  有以下程序 \n#include <stdio.h>\nint fun( char s[ ] )\n{\n    char *p = s ;\n    while ( *p != 0 ) p++;\n    return ( p - s) ;\n}\nmain()\n{\n    printf ( \"% d\\n \", fun ( \"OABCDEF\" ) ) ;\n}\n  程序运行后的输出结果是? ","choices":["\n1\n","\n6\n","\n7\n","\n0\n"],"correct_choice":"\n7\n"},{"title":"  下列代码编译时会产生错误的是（） \n#include <iostream>\nusing namespace std;\nstruct Foo {\n    Foo() {}\n    Foo(int) {}\n    void fun() {}\n};\nint main(void) {\n    Foo a(10); //语句1  \n    a.fun(); //语句2  \n    Foo b(); //语句3  \n    b.fun(); //语句4  \n    return 0;\n    16.\n}\n","choices":["\n语句1\n","\n语句2\n","\n语句3\n","\n语句4\n"],"correct_choice":"\n语句4\n"},{"title":"print()函数是一个类的常成员函数，它无返回值，下列表示中正确的是()","choices":["\nconst void print();\n","\nvoid const print();\n","\nvoid print() const;\n","\nvoid print(const);\n"],"correct_choice":"\nvoid print() const;\n"},{"title":"下面有关虚函数的描述，说法错误的是？","choices":["\n虚函数的作用是实现了继承性\n","\n虚函数的作用就是实现“动态联编”，也就是在程序的运行阶段动态地选择合适的成员函数\n","\n和类的静态成员函数与非类的成员函数相比，虚函数的效率较低\n","\n要正确的实现虚函数，只能用一个基类的指针或者引用来指向派生类对象\n"],"correct_choice":"\n虚函数的作用是实现了继承性\n"},{"title":"在32位机器上，有如下代码：\nchar array[] = \"abcdefg\";\nprintf(\"%d\\n\", sizeof(array)); \nchar *p = \"abcdefg\";\nprintf(\"%d\\n\", sizeof(p)); \nvoid func(char p[10])　　\n{\n    printf(\"%d\\n\", sizeof(p)); 　　\n}\nvoid func(char (& p)[10])　　\n{\n    printf(\"%d\\n\", sizeof(p)); \n    　　\n}\nint main(void)　　\n{\n    printf(\"%d\\n\", sizeof(char[2])); \n    printf(\"%d\\n\", sizeof(char &)); \n    return 0; 　　\n}\n\n  其从上到下，每个printf其输出结果依次为？","choices":["\n8 4 4 10 2 1\n","\n4 4 4 10 4 1\n","\n8 4 4 10 2 4\n","\n8 4 4 4 2 1\n","\n8 4 4 10 4 4\n","\n以上答案都不对\n"],"correct_choice":"\n8 4 4 10 2 1\n"},{"title":"  关于“深拷贝”，下列说法正确的是： ","choices":["\n会拷贝动态分配的成员对象\n","\n会拷贝成员数据的值\n","\n会拷贝静态分配的成员对象\n","\nB和C都对\n"],"correct_choice":"\n会拷贝动态分配的成员对象\n"},{"title":"\n\n  语句for（a=0，b=0；b！=100&&a<5;a++）scanf(“%d”,&b);\n    scanf最多可执行次数为：（ ）\n","choices":["\n4\n","\n6\n","\n5\n","\n1\n"],"correct_choice":"\n5\n"},{"title":"\n  下列程序的输出结果是（ ）\n  \n\n\n  main( )\n\n\n  { int a=7,b=5; \n\n\n  printf(\"%d\\n\",b=b/a);\n\n\n  }\n","choices":["\n5\n","\n1\n","\n0\n","\n不确定值\n"],"correct_choice":"\n0\n"},{"title":"\n  static char a[2]={'1','2','3'};说法是否正确？\n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"  有以下程序 \n#include < stdio. h > \nmain ( )\n{\n   char c [2] [5] = { \"6938\" , \"8254\" }, * p [2] ;\n   int i, j, s=0;\n   for ( i = 0 ; i < 2 ; i + + ) \n        p [i] = c [i] ;\n   for ( i = 0 ; i < 2 ; i + + )\n        for ( j =0 ;p [i] [j] > 0 ; j + =2 ) \n            s = 10 * s + p [i] [j]- '0 ';\n   printf ( \" %d \\n \" , s );\n}\n  程序运行后的输出结果是？ ","choices":["\n6938\n","\n9824\n","\n4528\n","\n6385\n"],"correct_choice":"\n6385\n"},{"title":"  有以下程序 \n#include<iostream>\nusing namespace std;\nint main ( )\n{ \n\tchar c [2][5] = { \"6938\" , \"8254\" }, * p [2] ;\n\tint s=0;\n\tfor (int  i =0 ; i < 2 ; i ++ )\n\t\tp [i] = c [i] ;\n\tfor (int i = 0,j=0; i <4; i++,j+=2)\n\t{   if (j>3)\n\t\t{\n\t\t\tj=0;\n\t\t}\n\t\ts = 10 * s + (p [i/2] [j]-'0');\n\t}\n\tcout<<s<<endl;\n\treturn 0;\n}\n  程序运行后的输出结果是？ ","choices":["\n9284\n","\n9824\n","\n6982\n","\n6385\n"],"correct_choice":"\n6385\n"},{"title":"定义:int *const ptr;下面哪种说法是正确的()","choices":["\nptr不可修改，*ptr可修改\n","\nptr不可修改，*ptr不可修改\n","\nptr可修改，*ptr不可修改\n","\nptr可修改，*ptr可修改\n"],"correct_choice":"\nptr不可修改，*ptr可修改\n"},{"title":"如果MyClass为一个类，执行”MyClass a[5], *b[6]”语言会自动调用该类构造函数的次数是()","choices":["\n2\n","\n5\n","\n4\n","\n9\n"],"correct_choice":"\n5\n"},{"title":"  以下代码运行结果为（） \n#include<stdio.h>\nint main()\n{\n    uint32_t a = 100;\n    while (a > 0)\n    {\n        --a;\n    }\n    printf(\"%d\", a);\n    return 0;\n}\n\n\n","choices":["\n-1\n","\n100\n","\n0\n","\n死循环\n"],"correct_choice":"\n0\n"},{"title":"  以下代码中，A\n  的构造函数和析构函数分别执行了几次：       \n  A*pa=new A[10]; \n  delete []pa; ","choices":["\n1、1\n","\n10、10\n","\n1、10\n","\n10、1\n"],"correct_choice":"\n10、10\n"},{"title":"int (*p)[3] p的含义是什么?","choices":["\n一个指向int元素大小为3的指针数组\n","\n一个指向元素个数为3的int数组的指针\n","\n不合法\n","\n以上说法都不正确\n"],"correct_choice":"\n一个指向元素个数为3的int数组的指针\n"},{"title":"  请问下面的程序最后会产生多少个进程： \nint main(　）{ \n     int i; \n     for(i = 0; i<5;i++){ \n        int pid = fork(); \n        if(pid == 0){ \n            //do something \n        } else { \n        //do something \n        } \n        }\n    // do somthing,sleep\n    return 0;\n}","choices":["\n5\n","\n10\n","\n15\n","\n32\n"],"correct_choice":"\n32\n"},{"title":"局部变量能否和全局变量重名？","choices":["\n能\n","\n不能\n"],"correct_choice":"\n能\n"},{"title":"假定一个类的构造函数为B（int x，int y）{a=x--；b=x*y--；}。则执行B（3,5）；语句后，a和b的值分别是（）","choices":["\n3和10\n","\n2和10\n","\n3和15\n","\n2和15\n"],"correct_choice":"\n3和10\n"},{"title":"\n  函数strlen(\"ASDFG\\n\")的值是7。（）\n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"已知 X 类，则当程序执行到语句 X array[3]; 时，调用了（ ）次构造函数。","choices":["\n0\n","\n1\n","\n2\n","\n3\n"],"correct_choice":"\n3\n"},{"title":"若有说明：int a[3][4];，则对 a 数组元素的非法引用是（）","choices":["\na[0][2*1]\n","\na[1][3]\n","\na[4-2][0]\n","\na[0][2+2]\n"],"correct_choice":"\na[0][2+2]\n"},{"title":"  以下所列的 C 语言常量中，错误的是（）。 ","choices":["\n0xFF\n","\n1.2e0.5\n","\n2L\n","\n'\\72'\n"],"correct_choice":"\n1.2e0.5\n"},{"title":"以下关于C++的描述中哪一个是正确的：","choices":["\n任何指针都必须指向一个实例\n","\n子类指针不可以指向父类实例\n","\n任何引用都必须指向一个实例\n","\n引用所指向的实例不可能无效\n"],"correct_choice":"\n任何引用都必须指向一个实例\n"},{"title":"\n  运行以下\n  C\n  语言代码，输出的结果是（\n  ）\n\n\n  \n    \n    \n  \n","choices":["\nstra strb strc\n","\nstra tra ra\n","\ns s s\n","\ns t r\n"],"correct_choice":"\nstra tra ra\n"},{"title":"从运行层面上来看，从四个选项选出不同的一个。","choices":["\nJAVA\n","\nPython\n","\nobjectC\n","\nC#\n"],"correct_choice":"\nPython\n"},{"title":"下面哪几种是 STL 容器类型()","choices":["\nvector\n","\nset\n","\nmultivector\n","\nmultiset\n","\narray\n"],"correct_choice":"\nvector\n\nset\n\nmultiset\n\narray\n"},{"title":"下列关于类和对象的叙述中，错误的是（        ）","choices":["\n一个类只能有一个对象\n","\n对象是类的具体实例\n","\n类是对某一类对象的抽象\n","\n类和对象的关系是一种数据类型与变量的关系\n"],"correct_choice":"\n一个类只能有一个对象\n"},{"title":"  请问下列代码的输出是多少（）      #include <stdio.h>\nint main()\n{\n    int m []={1,2,3,4,5,6,7,8,9,0};\n    int(*p)[4]=(int(*)[4])m;\n    printf(“%”,p[1][2]);\n    return 0;\n}    ","choices":["\n7\n","\n3\n","\n8\n","\n4\n"],"correct_choice":"\n7\n"},{"title":"  下面说明不正确的是（）。 ","choices":["\nchar a[10]=\"china\";\n","\nchar a[10],*p=a;p=\"china\"\n","\nchar *a;a=\"china\";\n","\nchar a[10],*p;p=a=\"china\"\n"],"correct_choice":"\nchar a[10],*p;p=a=\"china\"\n"},{"title":"  以下程序段的输出结果是（） \n\n     char str[] = \"ab\\012\\\\n\";  \n     printf(\"%d\", strlen(str));  \n","choices":["\n6\n","\n4\n","\n5\n","\n12\n"],"correct_choice":"\n5\n"},{"title":"假定 AA 为一个类，int a() 为该类的一个成员函数，若该成员函数在类定义体外定义，则函数头为（  ）。","choices":["\nint AA::a()\n","\nint AA:a()\n","\nAA::a()\n","\nAA::int a()\n"],"correct_choice":"\nint AA::a()\n"},{"title":"不能正确表示数学式\n的表达式是？","choices":["\na/c*b\n","\na*b/c\n","\na/b*c\n","\na*(b/C)\n"],"correct_choice":"\na/b*c\n"},{"title":"以下叙述正确的是（）。","choices":["\n在C程序中，main函数必须位于程序的最前面\n","\nC程序的每行中只能写一条语句\n","\nC语言本身没有输入输出语句\n","\n在对一个C程序进行编译的过程中，可发现注释中的拼写错误\n"],"correct_choice":"\nC语言本身没有输入输出语句\n"},{"title":"#include<iostream>\nusing namespace std;\nvoid f(int *p,int *q)\n{\n\tp++;\n\t*q=*q+1;\n}\nint main() {\n\tint m=1,n=2,*r=&m;\n\tf(r,&n);\n\tcout<<m<<\",\"<<n;\n\treturn 0;\n}\n  程序运行后的输出结果是() ","choices":["\n2,3\n","\n1,4\n","\n1,3\n","\n1,2\n"],"correct_choice":"\n1,3\n"},{"title":"以下关于指针的说法,正确的是()","choices":["\nint *const p与int const *p等价\n","\nconst int *p与int *const p等价\n","\nconst int *p与int const *p等价\n","\nint *p[10]与int (*p)[10]等价\n"],"correct_choice":"\nconst int *p与int const *p等价\n"},{"title":"在c++程序中，如果一个整型变量频繁使用，最好将他定义为（）","choices":["\nauto\n","\nextern\n","\nstatic\n","\nregister\n"],"correct_choice":"\nregister\n"},{"title":"C语言里i=5,j=7,请问i|j等于多少？","choices":["\n1\n","\n3\n","\n5\n","\n7\n"],"correct_choice":"\n7\n"},{"title":"  下列代码运行的结果（ ）  short i=65537;\nint j=i+1;\nprintf(\"i=%d,j=%d\\n\",i,j);","choices":["\ni=65537,j=65538\n","\ni=1,j=2\n","\ni=-1,j=0\n","\ni=1,j=65538\n"],"correct_choice":"\ni=1,j=2\n"},{"title":"  有以下程序 \n#include <stdio. h>\nvoid fun ( int *s)\n{\n    static int j = 0;\n    do {\n        s[j] + = s[j+1];\n    }while(+ + j < 2);\n}\nmain()\n{ \n    int i , a[10]={1,2,3,4,5};\n    for( i = 1; i < 3; i + + ) fun( a );\n    for( i = 1; i < 5; i + +)printf(\"%d\",a[i]);\n    printf(\"\\n\");\n}\n  程序运行后的输出结果是？ ","choices":["\n34756\n","\n5745\n","\n5795\n","\n35745\n"],"correct_choice":"\n5745\n"},{"title":"补充下面函数代码： \n 如果两段内存重叠，用memcpy函数可能会导致行为未定义。 而memmove函数能够避免这种问题，下面是一种实现方式，请补充代码。\n#include <iostream>\nusing namespace std;\nvoid* memmove(void* str1,const void* str2,size_t n)\n{\n    char* pStr1= (char*) str1;\n    char* pStr2=(char*)str2;\n    if  ( ) {\n        for(size_t i=0;i!=n;++i){\n            *(pStr1++)=*(pStr2++);\n        }\n    }\n    else{\n        pStr1+=n-1;\n        pStr2+=n-1;\n        for(size_t i=0;i!=n;++i){\n            *(pStr1--)=*(pStr2--);\n        }\n    }\n    return ( );\n}\n\n\n","choices":["\npStr1< pStr2   str1\n","\npStr1+n < pStr2   str2\n","\npStr1+n < pStr2 || pStr2+n<pStr1  str2\n","\npStr2+n<pStr1   str1\n"],"correct_choice":"\npStr1< pStr2   str1\n"},{"title":"将两个字符串连接起来组成一个字符串时，选用的字符串函数为（   ）","choices":["\nstrlen()\n","\nstrcpy()\n","\nstrcat()\n","\nstrcmp()\n"],"correct_choice":"\nstrcat()\n"},{"title":"  根据所给出的一组数空缺位置依次为（）?     (1).CFI DHL EJ_   (2).1 3 2 4 6 5 7 _   (3).9 7 8 6 7 5 _  ","choices":["\n(1).O (2).9 (3).7\n","\n(1).Q (2).6 (3).7\n","\n(1).Q(2).11 (3).6\n","\n(1).O (2).9 (3).6\n"],"correct_choice":"\n(1).O (2).9 (3).6\n"},{"title":"  C 语言允许函数类型缺省定义,此时函数值隐含的类型是（）。  ","choices":["\nfloat\n","\nint\n","\nlong\n","\ndouble\n"],"correct_choice":"\nint\n"},{"title":"将两个字符串连接起来组成一个字符串时，选用（    ）函数。","choices":["\nstrlen()\n","\nstrcap()\n","\nstrcat()\n","\nstrcmp()\n"],"correct_choice":"\nstrcat()\n"},{"title":"  下面四个选项中，均是不合法的用户标识符的选项是（）。  ","choices":["\nA P_0 do\n","\nfloat la0 _A\n","\nb-a goto int\n","\n_123 temp int\n"],"correct_choice":"\nb-a goto int\n"},{"title":"下面哪个操作符不能重载（）","choices":["\n=\n","\n<\n","\nsizeof\n","\n%\n"],"correct_choice":"\nsizeof\n"},{"title":"  求函数返回值，输入x=9999 \nint func(int x){\n\tint count=0;\n\twhile (x)\n\t{\n\t\tcount++;\n\t\tx=x&(x-1);//与运算\n\t}\n\treturn count;\n}","choices":["\n8\n","\n9\n","\n10\n","\n12\n"],"correct_choice":"\n8\n"},{"title":"使用printf函数打印一个double类型的数据，要求：输出为10进制，输出左对齐30个字符，4位精度。以下哪个选项是正确的？","choices":["\n%-30.4e\n","\n%4.30e\n","\n%-30.4f\n","\n%-4.30f\n"],"correct_choice":"\n%-30.4f\n"},{"title":"  若有以下程序 \n#include < stdio.h>\nchar * a= \"you\" , b[ ] =\"welcome # you # to # China!\";\nmain( )\n{ \n    int i,j =0; char *p;\n    for( i=0;b[ i ]!='\\0';i + + )\n    {\n        if(*a = = b[ i ])\n        {    \n            p = &b[i];\n            for (j=0;a[ j ]!='\\0';j + + )\n            {\n                if(a[ j ]!= *p) \n                    break;\n                p++;\n            ｝\n            if ( a[j] !='\\0')\n            break;\n        ｝\n   ｝\n   printf( \"%s\\n\", p);\n｝\n  则程序的输出结果是? ","choices":["\n#to#China!\n","\n#you#to#China!\n","\nme#you#to#China!\n","\n#China!\n"],"correct_choice":"\n#to#China!\n"},{"title":"在C++语言中，下列说法正确的是：","choices":["\ninline函数表示编译器一定会将函数体直接插入到调用此函数的地方，这样可以加快程序的运行速度\n","\n局部变量和全局变量不能重名\n","\n静态局部变量内存是在运行期分配的，存储在堆栈区\n","\nC++不是类型安全的语言\n"],"correct_choice":"\nC++不是类型安全的语言\n"},{"title":"CONTAINER::iterator iter , tempIt;\nfor (iter = cont.begin() ; iter != cont.end() ; )    　　\n{\n    tempIt = iter;\n    ++iter;\n    cont.erase(tempIt);\n    　　\n}\n\n假设cont是一个CONTAINER的示例，里面包含数个元素，那么当CONTAINER为： 1、vector 2、list 3、map 4、deque 会导致上面的代码片段崩溃的CONTAINER类型是？","choices":["\n1，4\n","\n2，3\n","\n1，3\n","\n2，4\n"],"correct_choice":"\n1，4\n"},{"title":"下列关于makefile描述正确的有？","choices":["\nmakefile文件保存了编译器和连接器的参数选项\n","\n主要包含了五个东西：显式规则、隐晦规则、变量定义、文件指示和注释\n","\n默认的情况下，make命令会在当前目录下按顺序找寻文件名为“GNUmakefile”、“makefile”、“Makefile”的文件， 找到了解释这个文件\n","\n在Makefile不可以使用include关键字把别的Makefile包含进来\n"],"correct_choice":"\nmakefile文件保存了编译器和连接器的参数选项\n\n主要包含了五个东西：显式规则、隐晦规则、变量定义、文件指示和注释\n\n默认的情况下，make命令会在当前目录下按顺序找寻文件名为“GNUmakefile”、“makefile”、“Makefile”的文件， 找到了解释这个文件\n"},{"title":"\n  使用预定义操纵算子,首先必须在源程序的开头包含iomanip.h文件.这句话是否正确？ \n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"\n  以下程序的输出是：\n\n\n  \n    \n  \n\n\n  \n    \n  \n","choices":["\n1，6\n","\n2，5\n","\n2，4\n","\n3，5\n","\n4，7\n","\n1，1\n"],"correct_choice":"\n3，5\n"},{"title":"  以**于运算符优先顺序的描述中正确的是（）。  ","choices":["\n关系运算符<算术运算符<赋值运算符<逻辑运算符\n","\n逻辑运算符<关系运算符<算术运算符<赋值运算符\n","\n赋值运算符<逻辑运算符<关系运算符<算术运算符\n","\n算术运算符<关系运算符<赋值运算符<逻辑运算符\n"],"correct_choice":"\n赋值运算符<逻辑运算符<关系运算符<算术运算符\n"},{"title":"  当前运行以下程序时，从键盘输入“AhaMA Aha”，其运行结果是（） \n\n  \n    \n  \n     #include <string.h>  \n     #include <stdio.h>  \n  \n    \n  \n     void main()  \n     {  \n  char s[80], c='a';  \n  int i = 0;  \n  scanf(\"%s\", s);  \n  while(s[i] != '\\0')  \n  {  \n  if (s[i] == c)  \n  s[i] -= 32;  \n  else if (s[i] == c - 32)  \n  s[i] += 32;  \n  i++;  \n  }  \n  puts(s);  \n     }  \n","choices":["\nahAMa ahA\n","\nAhAMa\n","\nAhAMa ahA\n","\nahAMa\n"],"correct_choice":"\nahAMa\n"},{"title":"  若有一下程序 \n#include<stdio.h>\nmain(){\n    int c;\n    c=13 | 5;\n    printf(\"%d\\n\",C);\n｝\n  则程序的输出结果是？ ","choices":["\n13\n","\n15\n","\n18\n","\n5\n"],"correct_choice":"\n13\n"},{"title":"函数参数使用的空间是在（）中申请的，malloc或new是在（）中申请空间的？","choices":["\n堆，栈\n","\n栈，堆\n","\n栈， 栈\n","\n堆，堆\n"],"correct_choice":"\n栈，堆\n"},{"title":"\n  下列静态数据成员的特性中，（）是错误的\n","choices":["\n引用静态数据成员时，要在静态数据成员名前加<类名>和作用域运算符\n","\n说明静态数据成员时前边要加关键字static来修饰\n","\n静态数据成员在类体外进行初始化\n","\n静态数据成员不是所有对象所共有的\n"],"correct_choice":"\n静态数据成员不是所有对象所共有的\n"},{"title":"  若有定义语句，int b = 2，则表达式(b< <2)/(3||b)的值是？ \n\n  \n","choices":["\n0\n","\n2\n","\n4\n","\n8\n"],"correct_choice":"\n8\n"},{"title":"以下哪种STL容器中的对象是连续存储的:()","choices":["\nlist\n","\nvector\n","\nmap\n","\nset\n"],"correct_choice":"\nvector\n"},{"title":"在C++语言中，下面关于数组的描述错误的是（）","choices":["\n数组的名字就是指向该数组第一个元素的指针\n","\n长度为n的数组，下标的范围是0-n-1\n","\n数组的大小必须在编译时确定\n","\n数组可通过值参数、地址指针、引用参数三种方式传递给函数\n"],"correct_choice":"\n数组的大小必须在编译时确定\n"},{"title":"  假定Qiniuome是一个类，执行下面这些语句之后，内存里创建了几个Qiniuome对象。  Qiniuome a();\nQiniuome b(2);\nQiniuome c[3];\nQiniuome &ra = b;\nQiniuome *pA = c;\nQiniuome *p = new Qiniuome(4); ","choices":["\n5\n","\n6\n","\n7\n","\n8\n"],"correct_choice":"\n5\n"},{"title":"C++中32位单精度浮点数能表示的十进制有效数字是多少位？（）","choices":["\n9\n","\n6\n","\n7\n","\n8\n"],"correct_choice":"\n7\n"},{"title":"\n 下列给定程序中，函数fun的功能是:进行数字字符转换。若形参ch中是数字字符'0'～'9',则将'0'转换成'9','1'转换成'8', '2'转换成'7',…, '9'转换成'0';如果是其他字符则保持不变，并将转换后的结果作为函数值返回。 \n  请在程序的下画线处填入正确的内容并将下画线删除，使程序得出正确的结果。 \n  试题程序。 #include<stdio.h>\n_____ fun(char ch)\n{\n    if(ch>='0'&& _______)\n        return'9'-(ch- ______);\n    return ch;\n}\nmain( )\n{  \n    char c1,c2;\n    printf(\"\\nThe result:\\n\");\n    c1='2';\n    c2=fun(c1);\n    printf(\"c1=%c c2=%c\\n\",c1,c2);\n    c1='8';\n    c2=fun(c1);\n    printf(\"c1=%c c2=%c\\n\",c1,c2);\n    c1='a';\n    c2=fun(c1);\n    printf(\"c1=%c c2=%c\\n\",c1,c2);\n}\n","choices":["\nint ch<='9'  '0'\n","\nchar   ch<='9'  '0'\n","\nchar   ch<='9'  0\n","\nint ch<='9'  0\n"],"correct_choice":"\nint ch<='9'  '0'\n\nchar   ch<='9'  '0'\n"},{"title":"  给定fun函数如下，那么fun(10)的输出结果是（） \nint fun(int x)\n{\n    return (x == 1) ? 1 : (x + fun(x - 1));\n}\n\n","choices":["\n0\n","\n10\n","\n55\n","\n3628800\n"],"correct_choice":"\n55\n"},{"title":"  以下不正确的说法是:C 语言规定（）。 ","choices":["\n实参可以是常量,变量或表达式\n","\n形参可以是常量,变量或表达式\n","\n实参可以为任何类型\n","\n形参应与其对应的实参类型一致\n"],"correct_choice":"\n形参可以是常量,变量或表达式\n"},{"title":"  以下程序的输出结果为（）。  main()\n{int i=010,j=10;\nprintf(\"%d,%d\\n\",++i,j--);\n} ","choices":["\n11,10\n","\n9,10\n","\n010,9\n","\n10,9\n"],"correct_choice":"\n9,10\n"},{"title":"\n  C语言中最简单的数据类型包括__________\n\n\n  \n","choices":["\n整型、实型、逻辑型\n","\n整型、实型、字符型\n","\n整型、字符型、逻辑型\n","\n整型、实型、逻辑型、字符型\n"],"correct_choice":"\n整型、实型、字符型\n"},{"title":"求输出结果\n#include <iostream>\n\nusing namespace std;\n\nclass A\n{\npublic:\n    virtual void print()\n    {\n        cout << \"A::print()\" << \"\\n\";\n    }\n};\n\nclass B: public A\n{\npublic: virtual void print()\n    {\n        cout << \"B::print()\" << \"\\n\";\n    }\n};\n\nclass C: public A\n{\npublic: virtual void print()\n    {\n        cout << \"C::print()\" << \"\\n\";\n    }\n};\n\nvoid print(A a)\n{\n    a.print();\n}\n\nint main()\n{\n    A a, *aa, *ab, *ac;\n    B b;\n    C c;\n    aa = &a;\n    ab = &b;\n    ac = &c;\n    a.print();\n    b.print();\n    c.print();\n    aa->print();\n    ab->print();\n    ac->print();\n    print(a);\n    print(b);\n    print(c);\n}\n\n\n","choices":["\nC::print()  B::print() A::print()  A::print() B::print() C::print() A::print() A::print() A::print()\n","\nA::print() B::print() C::print() A::print() B::print() C::print() A::print() A::print() A::print()\n","\nA::print() B::print() C::print() A::print() B::print() C::print() B::print() B::print() B::print()\n","\nC::print() B::print() A::print() A::print() B::print() C::print() C::print() C::print() C::print()\n"],"correct_choice":"\nA::print() B::print() C::print() A::print() B::print() C::print() A::print() A::print() A::print()\n"},{"title":"  有以下程序 \n#include < stdio. h >\nint d = 1;\nvoid fun( int p )\n{\n    int d=5;\n    d += p++;\n    printf(\"%d\", d );\n}\nmain()\n{\n    int a=3;\n    fun(a);\n    d += a++;\n    printf( \"%d\\n\",d);\n｝\n  程序的输出结果是? ","choices":["\n8 4\n","\n9 6\n","\n9 4\n","\n8 5\n"],"correct_choice":"\n8 4\n"},{"title":"  以下程序段的输出结果为（） \n\n     int m, a[2][2] = {1,2,3,4};  \n     for (m = 0; m < 2; m++) printf(\"%d \", a[m][1-m]);  \n","choices":["\n1 2\n","\n2 3\n","\n3 4\n","\n1 4\n"],"correct_choice":"\n2 3\n"},{"title":"  判断 char 型变量 cl 是否为小写字母的正确表达式是（）。  ","choices":["\na'<=cl<='z'\n","\n(cl>=a)&&(cl<=z)\n","\n('a'>=cl)||('z'<=cl)\n","\n(cl>='a')&&(cl<='z')\n"],"correct_choice":"\n(cl>='a')&&(cl<='z')\n"},{"title":"下面字符常量正确的是","choices":["\n“c”\n","\n‘\\\\''\n","\n‘n’\n","\n‘ab’\n"],"correct_choice":"\n‘n’\n"},{"title":"一个C语言程序的执行是从（        ）","choices":["\n本程序的main函数开始，到main函数结束\n","\n本程序文件的第一个函数开始，到本程序文件的最后一个函数结束\n","\n本程序的main函数开始，到本程序文件的最后一个函数结束\n","\n本程序文件的第一个函数开始，到本程序main函数结束\n"],"correct_choice":"\n本程序的main函数开始，到main函数结束\n"},{"title":"以下不是无限循环的语句为?","choices":["\nfor (y=0,x=1; x>++y; x=i++) i=x;\n","\nfor (;; x+=1);\n","\nwhile (1){x ++;}\n","\nfor(i=10; ;i--) sum+=i;\n"],"correct_choice":"\nfor (y=0,x=1; x>++y; x=i++) i=x;\n"},{"title":"下面程序的功能是输出数组的全排列。请填空。 void perm(int list[], int k, int m)\n{\n    if (    )\n    {\n        copy(list,list+m,ostream_iterator<int>(cout,\" \"));\n        cout<<endl;\n        return;\n    }\n    for (int i=k; i<=m; i++)\n    {\n        swap(&list[k],&list[i]);\n        (    );\n        swap(&list[k],&list[i]);\n    }\n}\n\n","choices":["\nk!=m 和 perm（list，k+1，m）\n","\nk==m 和 perm（list，k+1，m）\n","\nk!=m 和 perm（list，k，m）\n","\nk==m 和 perm（list，k，m）\n"],"correct_choice":"\nk==m 和 perm（list，k+1，m）\n"},{"title":"  下面这段代码会打印出什么？ \nclass A\n{\npublic:\n    A()\n    {\n        printf(\"A \");\n    }\n    \n    ~A()\n    {\n        printf(\"deA \");\n    }\n};\n\nclass B\n{\npublic:\n    B()\n    {\n        printf(\"B \");\n    }\n    ~B()\n    {\n        printf(\"deB \");\n    }\n};\n\nclass C: public A, public B\n{\npublic:\n    C()\n    {\n        printf(\"C \");\n    }\n    ~C()\n    {\n        printf(\"deC \");\n    }\n};\nint main()\n{\n    A *a = new C();\n    delete a;\n    return 0;\n}\n\n","choices":["\nA B C deA\n","\nC A B deA\n","\nA B C deC\n","\nC A B deC\n"],"correct_choice":"\nA B C deA\n"},{"title":"下面对一维数组 a 进行正确的初始化的语句是（）","choices":["\nint a[10] = (0, 0, 0, 0, 0);\n","\nint a[10] = {};\n","\nint a[10] = {10};\n","\nint a[10] = {10, 0, -1.0};\n"],"correct_choice":"\nint a[10] = {};\n\nint a[10] = {10};\n\nint a[10] = {10, 0, -1.0};\n"},{"title":"C＋＋引进了引用的概念，对编程带来了很多方便。","choices":["\nT\n","\nF\n"],"correct_choice":"\nT\n"},{"title":"  以下对二维数组 a 的正确说明是（）。 ","choices":["\nint a[3][]\n","\nfloat a(3,4)\n","\ndouble a[1][4]\n","\nfloat a(3)(4)\n"],"correct_choice":"\ndouble a[1][4]\n"},{"title":"  以下程序的输出结果是（）？   main() \n{ int a=177;\nprintf(\"%o\\n\",a);\n}","choices":["\n177\n","\n178\n","\n260\n","\n261\n"],"correct_choice":"\n261\n"},{"title":"头文件中的 ifndef/define/endif 干什么用？","choices":["\n定义常量\n","\n标记为特殊的头文件\n","\n防止头文件被重复引用\n","\n注释头文件\n"],"correct_choice":"\n防止头文件被重复引用\n"},{"title":"下列哪个用法那个是错误的（ ）","choices":["\ntypedef void (*FUN)();\n","\nconst int &ra;\n","\nextern const int array[256];\n","\nint* a;\n","\n  typedef void (*FUN)();\n定义FUN为一个函数指针，指向一个函数，该函数返回值为void，参数为空\n  \n"],"correct_choice":"\nconst int &ra;\n"},{"title":"请读程序： #include \nint main() {\n    int a, b;\n    for (a = 1, b = 1; a <= 100; a++) { if (b >= 20)\n            break;\n        if (b % 3 == 1) {\n            b += 3;\n            continue;\n        }\n        b -= 5;\n    }\n    printf(\"%d\\n\", a);\n    return 0;\n}\n 上面的输出结果为()","choices":["\n7\n","\n8\n","\n9\n","\n10\n"],"correct_choice":"\n8\n"},{"title":"  下面四个类A,B,C,D,在32位机器上sizeof(A),sizeof(B),sizeof(C),sizeof(D)值分别为() \nclass A{\n};\nclass B{\n\tchar ch;\n\tint x;\n};\nclass C{\npublic:\n\tvoid Print(void){}\n};\nclass D\n{\npublic:\n\tvirtual void Print(void){}\n};","choices":["\n0,5,0,0\n","\n1,8,4,4\n","\n1,8,1,4\n","\n1,5,1,4\n"],"correct_choice":"\n1,8,1,4\n"},{"title":"函数fun的声明为int fun(int *p[4]),以下哪个变量可以作为fun的合法参数（）","choices":["\nint a[4][4];\n","\nint **a;\n","\nint **a[4]\n","\nint (*a)[4];\n"],"correct_choice":"\nint **a;\n"},{"title":"下面描述中,表达正确的有()","choices":["\n公有继承是基类中的public成员在派生类中仍是public的\n","\n公有继承是基类中的private成员在派生类中仍是private的\n","\n公有继承是基类中的protected成员在派生类中仍是protected的\n","\n私有继承是基类中的public成员在派生类中仍是private的\n"],"correct_choice":"\n公有继承是基类中的public成员在派生类中仍是public的\n\n公有继承是基类中的protected成员在派生类中仍是protected的\n\n私有继承是基类中的public成员在派生类中仍是private的\n"},{"title":"\n  对于C/C++语言的函数，下列叙述中正确的是（ ）\n","choices":["\n函数的定义不能嵌套，但函数调用可以嵌套\n","\n函数的定义可以嵌套，但函数调用不能嵌套\n","\n函数的定义和调用都不能嵌套\n","\n函数的定义和调用都可以嵌套\n"],"correct_choice":"\n函数的定义不能嵌套，但函数调用可以嵌套\n"},{"title":"  下列程序的输出结果是（）。  main()\n{int a=011;\nprintf(\"%d\\n\",++a);\n} ","choices":["\n12\n","\n11\n","\n10\n","\n9\n"],"correct_choice":"\n10\n"},{"title":"  下列有关运算法重载的叙述中，正确的是（）？  ","choices":["\nC++中所有运算符都可以作为非成员函数重载\n","\n重载运算符时可以改变其结合性\n","\nC++中可以通过运算符重载创造新的运算符\n","\n运算符重载是多态的一种表现\n"],"correct_choice":"\n运算符重载是多态的一种表现\n"},{"title":"  若以下变量均是整型，且num=sum=7；则执行表达式     sum=num++ ，sum++,++num后sum的值为（ ）。  ","choices":["\n7\n","\n8\n","\n9\n","\n10\n"],"correct_choice":"\n8\n"},{"title":"  有以下程序 \n#include <stdio. h>\nmain()\n{ \n    int c[6] = {10,20,30,40,50,60}, * p, * s;\n    p = c; \n    s = &c[5];\n    printf(\"%d\\n\", s-p );\n}\n  程序运行后的输出结果是？ ","choices":["\n5\n","\n50\n","\n6\n","\n60\n"],"correct_choice":"\n5\n"},{"title":"  下面程序的输出结果是 \n\n  #include<iosteam.h>\nvoid main(){\n\tint n[][3] = {10,20,30,40,50,60};\n\tint (*p)[3];\n\tp=n;\n\tcout<<p[0][0]<<\",\"<<*(p[0]+1)<<\",\"<<(*p)[2]<<endl;\n  }\n  \n","choices":["\n10,30,50\n","\n10,20,30\n","\n20,40,60\n","\n10,30,60\n"],"correct_choice":"\n10,20,30\n"},{"title":"int a=0;\nclass someClass{\n   int b;\n   static int c;\n};\nint main(){\n   int d=0;\n   someClass *p=new someClass();\n   return 0;\n}\n  关于以上代码中的变量在内存中的存储位置描述正确的是() ","choices":["\n堆、栈、全局区均有变量\n","\n不存在堆区的变量\n","\n不存在栈区的变量\n","\n不存在全局变量区的变量\n"],"correct_choice":"\n堆、栈、全局区均有变量\n"},{"title":"当一个类的某个函数被说明为virtual，则在该类的所有派生类中的同原型函数_____?","choices":["\n只有 被重新说明时才识虚函数\n","\n只有被重新说明为virtual时才是虚函数\n","\n都不是虚函数\n","\n都是虚函数\n"],"correct_choice":"\n都是虚函数\n"},{"title":"函数fun计算prod=1*2*3*…*n，并返回计算结果值。但当n=100时，程序不正确。要找出该程序的错误，正确的调试方法是（ ）。 int fun(int n)\n {  \n    int prod, i;\n    prod=1;\n    for (i=1; i<=n; i++)\n        prod *= i;\n    return prod;\n } ","choices":["\n监视变量prod的值，在prod *= i;行处设置断点，然后单步运行，直到发现错误原因\n","\n监视变量prod的值，在return prod;行处设置断点，程序中断后，即可发现错误原因\n","\n在prod=1;处设置断点，然后在函数调用堆栈中即可发现错误原因\n","\n监视变量i的值，在for (i=1; i<=n; i++)行处设置断点，然后单步运行，直到发现错误原因\n"],"correct_choice":"\n监视变量prod的值，在prod *= i;行处设置断点，然后单步运行，直到发现错误原因\n"},{"title":"  请选择下列程序的运行结果 \n#include<iostream>\nusing namespace std;\nclass B0//基类BO声明\n{\npublic://外部接口\nvirtual void display()//虚成员函数\n{\n    cout<<\"B0::display0\"<<endl;}\n};\nclass B1:public B0//公有派生\n{\npublic:\n    void display() { cout<<\"B1::display0\"<<endl; }\n};\nclass D1: public B1//公有派生\n{\npublic:\n    void display(){ cout<<\"D1::display0\"<<endl; }\n};\nvoid fun(B0 ptr)//普通函数\n{\n    ptr.display();\n}\nint main()//主函数\n{\n    B0 b0;//声明基类对象和指针\n    B1 b1;//声明派生类对象\n    D1 d1;//声明派生类对象\n    fun(b0);//调用基类B0函数成员\n    fun(b1);//调用派生类B1函数成员\n    fun(d1);//调用派生类D1函数成员\n}\n\n\n  \n","choices":["\nB0::display0 B0::display0 B0::display0\n","\nB0::display0 B0::display0 D1::display0\n","\nB0::display0 B1::display0 D1::display0\n","\nB0::display0 B1::display0 B1::display0\n"],"correct_choice":"\nB0::display0 B0::display0 B0::display0\n"},{"title":"关于浅复制和深复制的说法，下列说法正确的是","choices":["\n浅层复制：只复制指向对象的指针，而不复制引用对象本身。\n","\n深层复制：复制引用对象本身。\n","\n如果是浅复制，修改一个对象可能会影响另外一个对象\n","\n如果是深拷贝，修改一个对象不会影响到另外一个对象\n"],"correct_choice":"\n浅层复制：只复制指向对象的指针，而不复制引用对象本身。\n\n深层复制：复制引用对象本身。\n\n如果是浅复制，修改一个对象可能会影响另外一个对象\n\n如果是深拷贝，修改一个对象不会影响到另外一个对象\n"},{"title":"  对两个数组a和b进行如下初始化 \n  char a[]=\"ABCDEF\"; \n  char b[]={'A','B','C','D','E','F'}; \n  则以下叙述正确的是（        ） ","choices":["\na与b数组完全相同\n","\na与b长度相同\n","\na数组比b数组长度小\n","\na数组比b数组长度大\n"],"correct_choice":"\na数组比b数组长度大\n"},{"title":"  字符初始化.char ch[7]={'s ' , 't ' , 'u ', 'd ', 'e ', 'n ', ' t' }     ; 能得到\"student\"的输出(不包含其他字符)，说法是否正确？  ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"  以下各选项企图说明一种新的类型名，其中正确的是（）。  ","choices":["\ntypedef v1 int;\n","\ntypedef v2=int;\n","\ntypedef int v3;\n","\ntypedef v4: int;\n"],"correct_choice":"\ntypedef int v3;\n"},{"title":"  若变量 a,i 已正确定义,且 i 已正确赋值,合法的语句是（）。  ","choices":["\na=int(i);\n","\na==1\n","\n++i;\n","\na=a++=5;\n"],"correct_choice":"\n++i;\n"},{"title":"\n  基类中的成员在派生类中都是可以直接访问的.说法是否正确？ \n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"  32位系统下，对于下面的结构体A和B，sizeof（A），sizeof（B）的结果分别是（）    #include <stdio.h>\n#pragma pack(2)\nstruct A\n{\n int a;\n char b;\n short c;\n};\n#pragma pack()\n \n#pragma pack(4)\nstruct B\n{\n char b;\n int a;\n short c;\n};\n#pragma pack()\n \nint main()\n{\n    printf(“sizeof(A)=%d,sizeof(B)=%d\\n”,sizeof(A),sizeof(B));\n    return 0;\n}  ","choices":["\n8,8\n","\n8,10\n","\n8,12\n","\n7,8\n"],"correct_choice":"\n8,12\n"},{"title":"\n  有以下程序\n\n\n  #include &lt;stdio.h&gt; \n\n\n  main() \n\n\n  { \n\n\n       int  sum, pad, pAd; \n\n\n       sum = pad = 5;\n\n\n       pAd = ++sum, pAd++, ++pad;\n\n\n       printf(\"%d\\n\", pad );\n\n\n  }\n\n\n  程序的输出结果是（）\n","choices":["\n5\n","\n6\n","\n7\n","\n8\n"],"correct_choice":"\n6\n"},{"title":"int main()\n {\n     char *p = \"hello,world\";\n     return 0;\n }\n  p和\"hello,world\"存储在内存哪个区域？ ","choices":["\n栈，堆\n","\n栈，栈\n","\n堆，只读存储区\n","\n栈，只读存储区\n"],"correct_choice":"\n栈，只读存储区\n"},{"title":"What is the output of the following piece of C++ code? using namespace std; \nstruct Item { \n    char c; \n    Item *next; \n}; \nItem *Routine1(Item *x) { \n    Item *prev = NULL, *curr = x; \n    while (curr) { \n        Item *next = curr->next; \n        curr->next = prev; \n        prev = curr; \n        curr = next; \n    } \n    return prev;\n} \nvoid Routine2(Item *x) { \n    Item *curr = x; \n    while (curr) { \n         cout << curr->c << ” “; \n         curr = curr->next; \n    } \n} \nint main(void) { \n    Item *x, d = {‘d’, NULL}, c = {‘c’, &d}, b = {‘b’, &c}, a = {‘a’, &b}; \n    x = Routine1(&a); \n    Routine2(x); \n    return 0;\n}\n","choices":["\ncbad\n","\nbadc\n","\ndbca\n","\nabcd\n","\ndcba\n"],"correct_choice":"\ndcba\n"},{"title":"  以下程序的输出结果是： \n#include <iostream.h>\nvoid main() {\n    int x=3,y=3;\n    switch(x%2) {\n        case 1:\n            switch (y) {\n        case 0:cout<<\"first\";\n        case 1:cout<<\"second\";break;\n        default: cout<<\"hello\";\n    }\n    case 2:cout<<\"third\";\n    }\n}","choices":["\nsecond third\n","\nhello\n","\nfirst second\n","\nhellothird\n"],"correct_choice":"\nhellothird\n"},{"title":"  以下函数用法正确的个数是： \nvoid test1()\n{\n    unsigned char array[MAX_CHAR+1],i;\n    for(i=0;i<=MAX_CHAR;i++){\n        array[i]=i;\n    }\n}\nchar*test2()\n{\n    char p[] = \"hello world\";\n    return p;\n}\nchar *p =test2();\nvoid test3(){\n    char str[10];\n    str++;\n    *str='0';\n}","choices":["\n0\n","\n1\n","\n2\n","\n3\n"],"correct_choice":"\n0\n"},{"title":"  以下程序的输出结果是（  ）。   main()\n{ char\nx=040;\n printf(\"%0\\n\",x<<1);\n}","choices":["\n100\n","\n80\n","\n64\n","\n32\n"],"correct_choice":"\n100\n"},{"title":"  对二维数组 a 来说,由于 a+1与*(a+1)的值相等,因此二者的含义是一样的。请问这句话的说法是正确的吗？  ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"用calloc函数创建具有10个整型元素的动态存储空间的正确调用是（   ）。","choices":["\ncalloc(10,sizeof(char))\n","\ncalloc(10)\n","\ncalloc(10,sizeof(int))\n","\ncalloc(20, sizeof(int))\n"],"correct_choice":"\ncalloc(10,sizeof(int))\n"},{"title":"  表达式1/4+2.75的值是3。请问这个说法是正确的吗？ ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"  对表达式 for(表达式1; ;表达式3)可理解为（）。 ","choices":["\nfor(表达式1;0;表达式3)\n","\nfor(表达式1;1;表达式3)\n","\nfor(表达式1;表达式1;表达式3)\n","\nfor(表达式1;表达式3;表达式3)\n"],"correct_choice":"\nfor(表达式1;1;表达式3)\n"},{"title":"\n\n  设a为int型变量，执行下列赋值语句后，a的取值分别是（ ）\n  \n\n\n  a=125.534;   a=(int)125.521%4;    a=5<<2;\n","choices":["\n125,31,1\n","\n125,1,20\n","\n125,31,20\n","\n125.534,2,20\n"],"correct_choice":"\n125,1,20\n"},{"title":"  有以下程序 \n#include<stdio.h>\nmain(){\n    int a=3;\n    printf(\"%d\\n\",(a+=a-=a*a));\n｝\n  程序运行后的输出结果是？ ","choices":["\n3\n","\n9\n","\n0\n","\n-12\n"],"correct_choice":"\n-12\n"},{"title":"假定x=500，求下面函数的返回值______ 。\nint fun(int x)\n{\n    int countx = 0;\n    while (x)\n    {\n        countx++;\n        x = x & (x – 1);\n    }\n    return countx;\n｝\n","choices":["\n2\n","\n3\n","\n5\n","\n6\n"],"correct_choice":"\n6\n"},{"title":"以下STL的容器存放的数据，哪个肯定是排好序的（）","choices":["\nvector\n","\ndeque\n","\nlist\n","\nmap\n"],"correct_choice":"\nmap\n"},{"title":"下面有关malloc和new，说法错误的是？ ","choices":["\nnew 建立的是一个对象， malloc分配的是一块内存.\n","\nnew   初始化对象，调用对象的构造函数，对应的delete调用相应的析构函数，malloc仅仅分配内存，free仅仅回收内存\n","\nnew和malloc都是保留字，不需要头文件支持\n","\nnew和malloc都可用于申请动态内存，new是一个操作符，malloc是是一个函数\n"],"correct_choice":"\nnew和malloc都是保留字，不需要头文件支持\n"},{"title":"以下代码执行后，val的值是___:\nunsigned long val = 0;\nchar a = 0x48;\nchar b = 0x52;\nval = b << 8 | a; ","choices":["\n20992\n","\n21064\n","\n72\n","\n0\n"],"correct_choice":"\n21064\n"},{"title":"以下函数中，和其他函数不属于一类的是____。","choices":["\nfwrite\n","\nputc\n","\npwrite\n","\nputchar\n","\ngetline\n","\nscanf\n"],"correct_choice":"\npwrite\n"},{"title":"合法的数组说明语句是（）","choices":["\nint a[] = \"string\";\n","\nint a[5] = {0.1, 2, 3, 4};\n","\nchar a = \"string \";\n","\nchar a[] = {0, 1, 2, 3, 4, 5};\n"],"correct_choice":"\nchar a[] = {0, 1, 2, 3, 4, 5};\n"},{"title":"\n  下面选项中关于编译预处理的叙述正确的是（）\n","choices":["\n预处理命令行必须使用分号结尾\n","\n凡是以#号开头的行，都被称为编译预处理命令行\n","\n预处理命令行不能出现在程序的最后一行\n","\n预处理命令行的作用域是到最近的函数结束处\n"],"correct_choice":"\n凡是以#号开头的行，都被称为编译预处理命令行\n"},{"title":"\n  int *fun(int a)\n\n\n  {\n\n\n  函数体语句\n\n\n  }\n\n\n  函数fun()是一个指针函数,返回值为一个整型的指针.\n\n\n  说法是否正确？\n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"  以下不是无限循环的语句为（）。 ","choices":["\nfor(y=0,x=1;x>++y;x=i++) i=x;\n","\nfor(;;x++=i);\n","\nwhile(1){x++;}\n","\nfor(i=10;;i--) sum+=i;\n"],"correct_choice":"\nfor(y=0,x=1;x>++y;x=i++) i=x;\n"},{"title":"已有定义语句：int x=3，y=4，z=5；则值为0的表达式是（        ）","choices":["\nx>y++\n","\nx<++y\n","\nx!=y+z>y-z\n","\ny%z>=y-z\n"],"correct_choice":"\nx>y++\n"},{"title":"下面代码段的运行结果（环境linux平台, g++编译器）: int main() { \n    int x = 10; \n    int y = 10; \n    x = y = ++y; \n    printf(\"%d %d\", x, y); \n    return 0; \n}","choices":["\n10 10\n","\n10 11\n","\n11 10\n","\n11 11\n"],"correct_choice":"\n11 11\n"},{"title":"下列为纯虚函数的正确声明的是（）","choices":["\nvoid virtual print()=0;\n","\nvirtual void print()=0;\n","\nvirtual void print(){};\n","\nvirtual void print()\\;\n"],"correct_choice":"\nvirtual void print()=0;\n"},{"title":"现在有以下语句：\nstruct _THUNDER{\n       int iVersion;\n       char cTag;\n       char cAdv;\n       int iUser;\n       char cEnd;\n}Thunder;\nint sz = sizeof(Thunder);\n 则执行后，变量sz的值将得到","choices":["\n11\n","\n12\n","\n13\n","\n16\n"],"correct_choice":"\n16\n"},{"title":"下面有关vector和list的区别，描述错误的是？","choices":["\nvector拥有一段连续的内存空间，因此支持随机存取，如果需要高效的随即存取\n","\nlist拥有一段不连续的内存空间，如果需要大量的插入和删除，应该使用list\n","\nvector<int>::iterator支持“+”、“+=”、“<”等操作符\n","\nlist<int>::iterator则不支持“+”、“+=”、“<”等操作符运算，但是支持了[ ]运算符\n"],"correct_choice":"\nlist<int>::iterator则不支持“+”、“+=”、“<”等操作符运算，但是支持了[ ]运算符\n"},{"title":"以下描述错误的是：","choices":["\n函数的形参在函数未调用时不分配存贮空间\n","\n若函数的定义出现在主函数之前且仅被主函数使用，则可以不必再说明\n","\n若一个函数（非主函数）没有return语句，返回类型是void\n","\n一般来说，函数的形参和实参的类型应该一致\n"],"correct_choice":"\n若一个函数（非主函数）没有return语句，返回类型是void\n"},{"title":"由C++目标文件连接而成的可执行文件的缺省扩展名为(     )。","choices":["\ncpp\n","\nexe\n","\nobj\n","\nlik\n"],"correct_choice":"\nexe\n"},{"title":"\n  若有定义：int x=0, *p=&x;,则语句printf(“%d\\n”,*p);的输出结果为p的地址 \n","choices":["\nTURE\n","\nFAULT\n"],"correct_choice":"\nFAULT\n"},{"title":"  数字字符0的ASCII值为48,若有以下程序   main()\n{  \nchar  a='1',b='2';\n   \nprintf(\"%c,\",b++);\n   \nprintf(\"%d\\n\",b-a);\n}   程序运行后的输出结果是 (   )。  ","choices":["\n3,2\n","\n50,2\n","\n2,2\n","\n2,50\n"],"correct_choice":"\n2,2\n"},{"title":"  设 x,y,t 均为 int 型变量,执行下列语句后,y的值为（）。     x=y=3; t=++x||++y;  ","choices":["\n不确定\n","\n4\n","\n3\n","\n1\n"],"correct_choice":"\n3\n"},{"title":"假定s被定义为指针类型char *的变量，初始指向的字符串为\"Hello     world!\"，若要使变量p指向s所指向的字符串，则p应定义为（     ）","choices":["\nchar *p=s\n","\nchar *p=&s\n","\nchar *p;p=*s\n","\nchar *p; p=&s\n"],"correct_choice":"\nchar *p=s\n"},{"title":"\n  在\n  C\n  语言中，字符串常量是用双引号括起来的一串字符。 \n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"  设变量 a 是整型， f 是实型， i 是双精度型，则表达式 10+ ‘ a ’ +i*f 值的数据类型为（ ）。  \n\t\n\t\n\t\t设变量 a 是整型， f 是实型， i 是双精度型，则表达式 10+ ‘ a ’ +i*f 值的数据类型为（ ）。 \n\t\n\n","choices":["\nint\n","\nfloat\n","\ndouble\n","\n不确定\n"],"correct_choice":"\ndouble\n"},{"title":"_______意味着一个操作在不同的类中可以有不同的实现方式。","choices":["\n多态性\n","\n多继承\n","\n类的组合\n","\n类的复用\n"],"correct_choice":"\n多态性\n"},{"title":"  下面程序的输出结果是__________。  \n#include < iostream.h> \n#define SQR(A) A*A\nvoid main() { \n    int x=6,y=3,z=2; \n    x/=SQR(y+z)/SQR(y+z); \n    cout< < x< < endl; \n}","choices":["\n5\n","\n6\n","\n1\n","\n0\n"],"correct_choice":"\n0\n"},{"title":"明朝时期张居正改革的一条鞭法的主要思想是()","choices":["\n面向过程\n","\n万物皆数\n","\n统一接口\n","\n泛型编程\n"],"correct_choice":"\n统一接口\n"},{"title":"  如下程序 \n#include <iostream>\nusing namespace std;\n\nclass A\n{\npublic:\n    A()\n    {\n        printf(\"A\");\n    }\n};\n\nint main()\n{\n    A *p1 = new A;\n    A *p2 = (A *)malloc(sizeof(A));\n    \n    return 0;\n}\n\n  该程序运行结果为 ","choices":["\nA\n","\nAA\n","\n崩溃\n","\n不可预测\n"],"correct_choice":"\nA\n"},{"title":"变量a是一个64位有符号的整数，初始值用16进制表示为：0x7FFFFFFFFFFFFFFF;变量b是一个64位有符号的整数，初始值用16进制表示为：0x8000000000000000。则a+b的结果用10进制表示为多少？","choices":["\n1\n","\n-1\n","\n2^63+2^62+…+2^2+2^1+2^0\n","\n–(2^63+2^62+…+2^2+2^1+2^0)\n"],"correct_choice":"\n-1\n"},{"title":"char a=101;\nint sum=200;\na+=27;sum+=a; \nprintf(\"%d\\n\",sum);\n\n","choices":["\n327\n","\n99\n","\n328\n","\n72\n"],"correct_choice":"\n72\n"},{"title":"  下面有关 for 循环的正确描述是（ ）   。  ","choices":["\nfor循环只能用于循环次数已经确定的情况\n","\nfor循环是先执行循环体语句，后判定表达式\n","\n在for循环中，不能用break语句跳出循环体\n","\nfor循环体语句中，可以包含多条语句，但要用花括号括起来\n"],"correct_choice":"\nfor循环体语句中，可以包含多条语句，但要用花括号括起来\n"},{"title":"  若变量已正确定义，要求程序段完成求5!的计算，不能完成此操作的程序段是(   )。  ","choices":["\nfor(i=1,p=1;i<=5;i++) p*=i;\n","\nfor(i=1;i<=5;i++){ p=1; p*=i;}\n","\ni=1;p=1;while(i<=5){p*=i; i++;}\n","\ni=1;p=1;do{p*=i; i++; }while(i<=5);\n"],"correct_choice":"\nfor(i=1;i<=5;i++){ p=1; p*=i;}\n"},{"title":"关于重载函数，哪个说明是正确的？","choices":["\n函数名相同，参数类型或个数不同\n","\n函数名相同，返回值类型不同\n","\n函数名相同，函数内部实现不同\n","\n函数名称不同\n"],"correct_choice":"\n函数名相同，参数类型或个数不同\n"},{"title":"  以下不是C语言的特点的是（）。 ","choices":["\nC语言简洁、紧凑\n","\n能够编制出功能复杂的程序\n","\nC语言可以直接对硬件进行操作\n","\nC语言移植性好\n"],"correct_choice":"\n能够编制出功能复杂的程序\n"},{"title":"  以下表达式选择结果。（    ）  std::string str1(\"trend\");\nstd::string str2(\"micro\");\nstd::string& strs = str1;\nstd::string* ptrs = &str1;\nstrs = str2;\nptrs = &str2; ","choices":["\nstrs = micro, * ptrs = micro\n","\nstrs = micro, * ptrs = trend\n","\nstrs = trend, * ptrs = micro\n","\nstrs = trend, * ptrs = trend\n"],"correct_choice":"\nstrs = micro, * ptrs = micro\n"},{"title":"以下程序的k最终值是：\nint i = 10;\nint j = 20;\nint k = 3;\nk *= i + j;","choices":["\n90\n","\n50\n","\n70\n","\n30\n"],"correct_choice":"\n90\n"},{"title":"  若有以下程序 \n#include <stdio.h>\n#define N 2\n#define M N+ 1\n#define NUM ( M+1 )*M/2\nmain()\n{ \n    printf( \"%d\\n\" ,NUM ); \n}\n  程序运行后的输出结果是? ","choices":["\n4\n","\n8\n","\n9\n","\n6\n"],"correct_choice":"\n8\n"},{"title":"void func()\n{\n　　static int val;\n　　…\n}\n  中，变量 val 的内存地址位于：","choices":["\n已初始化数据段\n","\n未初始化数据段\n","\n堆\n","\n栈\n"],"correct_choice":"\n未初始化数据段\n"},{"title":"\n\n  设x、y、t均为int型变量，则执行语句：t=3;\n  x=y=2;   t=x++||++y;\n  后，变量t和y的值分别为____ ","choices":["\nt=1 y=2\n","\nt=1 y=3\n","\nt=2 y=2\n","\nt=2 y=3\n","\nt=3 y=2\n","\nt=3 y=3\n"],"correct_choice":"\nt=1 y=2\n"},{"title":"运行下面这段C语言程序之后，输出在屏幕上的结果是：\nvoid foobar(int a, int *b, int **c)\n{\n    int *p = &a;\n    *p = 101;\n    *c = b;\n    b = p;\n}\n\nint main()\n{\n    int a = 1;\n    int b = 2;\n    int c = 3;\n    int *p = &c;\n    foobar(a, &b, &p);\n    printf(\"a=%d, b=%d, c=%d, *p=%d\\n\", a, b, c, *p);\n    return (0);\n}","choices":["\na=1, b=2, c=3, *p=2\n","\na=101, b=2, c=3, *p=2\n","\na=101, b=101, c=2, *p=3\n","\na=1, b=101, c=2, *p=3\n"],"correct_choice":"\na=1, b=2, c=3, *p=2\n"},{"title":"Fill the blanks inside class definition class Test { \n    public:\n         ____ int a; \n         ____ int b; \n    public: \n        Test::Test(int _a, int _b) : a(_a) { \n            b = _b; \n         } \n}; \nint Test::b; \nint _tmain(int argc, __TCHAR *argv[]) { \n    Test t1(0, 0), t2(1, 1); \n    t1.b = 10;\n    t2.b = 20; \n    printf(“%u %u %u %u”, t1.a, t1.b, t2.a, t2.b); \n}\n  Running result: 0 20 1 20","choices":["\nstatic/const\tconst/static\n","\n–/static\n","\nconst static/static\n","\nNone of the above\n"],"correct_choice":"\n–/static\n"},{"title":"\n\n  用fopen(\"file\",\"r+\");打开的文件\"file\"可以进行修改。       （）\n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"重载运算符保持原运算符的优先级和结合性不变。","choices":["\n是\n","\n否\n"],"correct_choice":"\n是\n"},{"title":"  如果一个类class A{}没有构造函数定义，那么当这个类的Objects被创建时会发生什么？（    ） ","choices":["\n编译器产生错误\n","\n运行时会产生错误\n","\n编译器会为这个类提供默认构造函数去创建Objects\n","\n以上都不对\n"],"correct_choice":"\n编译器会为这个类提供默认构造函数去创建Objects\n"},{"title":"  字符串“a+b=20\\n”的长度是（）？  ","choices":["\n7\n","\n8\n","\n5\n","\n6\n"],"correct_choice":"\n7\n"},{"title":"  若有定义 \ntypedef int * T; \nT a[10]; \n  则a的定义与下面哪个语句等价? ","choices":["\nint ( * a ) [ 10 ] ;\n","\nint * a [ 10 ] ;\n","\nint * a ;\n","\nint a [ 10 ] ;\n"],"correct_choice":"\nint * a [ 10 ] ;\n"},{"title":"在gcc编译器下，针对以下代码，\nconst char str1[] = \"abc\";         \nconst char str2[] = \"abc\";\nconst char *p1 = \"abc\";\nconst char *p2 = \"abc\";\n\n  那么针对printf(\"%d %d %d\n  %d\\n\",str1, str2,p1,p2)的结果，\n  判断下列说法哪个是正确的：______。","choices":["\n输出的前两个数不同，输出的后两个数相同。\n","\n输出的前两个数相同，输出的后两个数相同。\n","\n输出的前两个数不同，输出的后两个数不同。\n","\n输出的前两个数相同，输出的后两个数不同。\n","\n4个数都相同。\n","\n4个数都不相同。\n"],"correct_choice":"\n输出的前两个数不同，输出的后两个数相同。\n"},{"title":"  采用多路复用I/O监听3个套接字的数据时，如果套接字描述符分别是：5,17,19,则 \nselect(int maxfd,struct fd_set* rdset,NULL,NULL)\n  中的maxfd应取为（） ","choices":["\n4\n","\n20\n","\n5\n","\n9\n"],"correct_choice":"\n20\n"},{"title":"\n  一个C语言源程序是由（）。\n","choices":["\n一个主程序和若干子程序组成\n","\n函数组成\n","\n若干过程组成\n","\n若干子程序组成\n"],"correct_choice":"\n函数组成\n"},{"title":"声明常量时通常会用关键字const和static，下面关于两者的区别说法正确的是？","choices":["\nstatic表示这个变量可以在其他文件中使用\n","\nstatic变量连接期被分配到了data段，即使是在函数调用中定义也不会在栈中产生，而是在程序加载期就被加入了内存\n","\nconst表面含义是个常量，但实际上还是占据一个内存位置的变量，但是它的值一般实在编译时期就决定了\n","\n上面说法都不正确\n"],"correct_choice":"\nstatic变量连接期被分配到了data段，即使是在函数调用中定义也不会在栈中产生，而是在程序加载期就被加入了内存\n\nconst表面含义是个常量，但实际上还是占据一个内存位置的变量，但是它的值一般实在编译时期就决定了\n"},{"title":"  若变量a是int类型，并执行了语句：a=‘A'+1.6；，则正确的叙述是（  ）。  ","choices":["\na的值是字符C\n","\na的值是浮点型\n","\n不允许字符型和浮点型相加\n","\na的值是字符‘A’的ASCII值加上1。\n"],"correct_choice":"\na的值是字符‘A’的ASCII值加上1。\n"},{"title":"可在C程序中用作用户标识符的一组标识符是（        ）","choices":["\nnk  ak-g2  #Fim 3h\n","\nW.D _total day student\n","\nC<D average while month\n","\ncher name addr class2\n"],"correct_choice":"\ncher name addr class2\n"},{"title":"  若有定义：int a=8，b=5，C；，执行语句C=a/b+0.4;后，c的值为（  ）。  ","choices":["\n1.4\n","\n1\n","\n0\n","\n2\n"],"correct_choice":"\n1\n"},{"title":"  int i,j,a[2][3];按照数组 a 的元素在内存的排列次序，不能将数1,2,3,4,5,6存入 a 数组的是（）。  ","choices":["\nfor(i=0;i<2;i++)for(j=0;j<3;j++)a[i][j]=i*3+j+1;\n","\nfor(i=0;i<3;i++)for(j=0;j<2;j++)a[j][i]=j*3+i+1;\n","\nfor(i=0;i<6;i++)a[i/3][i%3]=i+1;\n","\nfor(i=1;i<=6;i++)a[i][i]=i;\n"],"correct_choice":"\nfor(i=1;i<=6;i++)a[i][i]=i;\n"},{"title":"哪种说法是错误的（）？","choices":["\n构造函数可以有形参\n","\n析构函数可以有形参\n","\n构造函数无任何函数类型\n","\n析构函数无任何函数类型\n"],"correct_choice":"\n析构函数可以有形参\n"},{"title":"在一个cpp文件里面,定义了一个static类型的全局变量,下面一个正确的描述是:","choices":["\n只能在该cpp所在的编译模块中使用该变量\n","\n该变量的值是不可改变的\n","\n该变量不能在类的成员函数中引用\n","\n这种变量只能是基本类型(如int,char)不能是C++类型\n"],"correct_choice":"\n只能在该cpp所在的编译模块中使用该变量\n"},{"title":"  有以下程序 \n#include < stdio.h>\nmain()\n{\n    int a =3;\n    a + =a - =a *a;\n    printf(\"%d\\n ,a);\n}\n  程序的输出结果是？ ","choices":["\n0\n","\n9\n","\n3\n","\n-12\n"],"correct_choice":"\n-12\n"},{"title":"下面哪一个是sort的template的正确写法","choices":["\nvoid sort(class A first，class A last，class B pred)\n","\nvoid template(class A，class B)sort(A first，A last，B pred)\n","\ntemplate<class A><class B> void sort(A first，A last，B pred)\n","\ntemplate<class A，class B> void sort(A first，A last，B pred)\n"],"correct_choice":"\ntemplate<class A，class B> void sort(A first，A last，B pred)\n"},{"title":"以下不能作为合法常量的是：","choices":["\n1.234e04\n","\n1.234e0.4\n","\n1.234e+4\n","\n1.234e0\n"],"correct_choice":"\n1.234e0.4\n"},{"title":"  能正确表示逻辑关系:\"a≥10或a≤0\"的C语言表达式是（）。  ","choices":["\na>=10 or a<=0\n","\na>=0|a<=10\n","\na>=10&&a<=0\n","\na>=10||a<=0\n"],"correct_choice":"\na>=10 or a<=0\n\na>=10||a<=0\n"},{"title":"假设有一个C++类名为Thunder，则此类的析构函数为（）。","choices":["\n::Thunder()\n","\nvoid ~Thunder(void)\n","\n~Thunder()\n","\nvoid ~Thunder()\n"],"correct_choice":"\n~Thunder()\n"},{"title":"在C语言中，int a[10];scanf（“%d”，a）;表示一次性地给数组a的10元素赋值。","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"  下面的程序段（） \n\n     注：第行程序前的数字为行号  \n  \n    \n  \n     /*1*/void main()  \n     /*2*/{  \n     /*3*/float a[10]={0.0};  \n     /*4*/int i;  \n     /*5*/for(i = 0; i < 3; i++)     scanf(\"%d\",\n    &a[i]);  \n     /*6*/for(i = 0; i < 10; i++) a[0] = a[0] +     a[i];  \n     /*7*/printf(\"%f\\n\", a[0]);  \n     /*8*/}  \n","choices":["\n没有错误\n","\n第 3 行有错误\n","\n第 5 行有错误\n","\n第 7 行有错误\n"],"correct_choice":"\n第 5 行有错误\n"},{"title":"能正确表示逻辑式“a≥10或a≤0”的C语言表达式是（        ）","choices":["\na>=10 or a<=0\n","\na>=10 | | a<=0\n","\na>=10&&a<=0\n","\na>=10 | a<=0\n"],"correct_choice":"\na>=10 | | a<=0\n"},{"title":"\n  a=3*5 , a*4;    最终a为60.是否正确？ \n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"对类中声明的变量，下列描述中正确的是（        ）","choices":["\n属于全局变量\n","\n只属于该类\n","\n属于该类，某些情况下也可被该类不同实例所共享\n","\n任何情况下都可被该类所有实例共享\n"],"correct_choice":"\n属于该类，某些情况下也可被该类不同实例所共享\n"},{"title":"  下列程序的输出结果是 \n#include<iostream>\nusing namespace std;\n\nint main()\n{\n    char p1[10] = \"abcd\", *p2, str[10] = \"xyz\";\n   \n    p2 = \"ABCD\";\n    strcpy(str + 2, strcat(p1 + 2, p2 + 1));\n    printf(\" %s\", str);\n}\n\n","choices":["\nxyabcAB\n","\nabcABz\n","\nABabcz\n","\nxycdBCD\n"],"correct_choice":"\nxycdBCD\n"},{"title":"x是一个行列数均为1000二维数组，下面代码效率执行最高的是（）","choices":["\nfor(int j=0;j<1000;j++) for(int i=0;i<1000;i++) x[i][j]+=x[j][i];\n","\nfor(int i=0;i<1000;j++) for(int j=0;j<1000;j++) x[i][j]+=x[j][i];\n","\nfor(int i=0;i<1000;j++) for(int j=0;j<1000;j++) x[j][i]+=x[j][i];\n","\nfor(int i=0;i<1000;i++) for(int j=0;j<1000;j++) x[i][j]+=x[i][j];\n"],"correct_choice":"\nfor(int i=0;i<1000;i++) for(int j=0;j<1000;j++) x[i][j]+=x[i][j];\n"},{"title":"  若有下列定义,则对 a 数组元素地址的正确引用是（）？     int a[5],*p=a;     ","choices":["\n*(p+5)\n","\n*p+2\n","\n*(a+2)\n","\n*&a[5]\n"],"correct_choice":"\n*(a+2)\n"},{"title":"以基本类型划分来看,从四个选项选出不同的一个。","choices":["\nenum\n","\nchar\n","\nfloat\n","\nint\n"],"correct_choice":"\nenum\n"},{"title":"  在c++中实参和形参有3种结合方式,分别为:值传递、引用传递和地址传递。说法是否正确？  ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"\n  有以下程序\n\n\n  #include &lt;stdio.h&gt; \n\n\n  main() \n\n\n  {\n\n\n       int a=2, c=5; \n\n\n       printf( \"a=%%d,b=%%d\\n\", a,c );\n\n\n  }\n\n\n  则程序的输出结果是（）\n","choices":["\na=2,b=5\n","\na=%2,b=%5\n","\na=%d,b=%d\n","\na=%%d,b=%%d\n"],"correct_choice":"\na=%d,b=%d\n"},{"title":"\n  一次性输入、输出字符数组时,只写字符数组名.这句话是否正确？\n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"请问在64位平台机器下sizeof(string_a),sizeof(string_b)大小分别是（）  1.char *string_a=(char *)malloc(100*sizeof(char));\n2.char string_b[100];\n","choices":["\n8 100\n","\n100 8\n","\n100 100\n","\n8 8\n"],"correct_choice":"\n8 100\n"},{"title":"  下面程序会输出什么： \nstatic int a=1;\nvoid fun1(void){    a=2;  }\nvoid fun2(void){    int a=3;  }\nvoid fun3(void){   static int a=4;  }\nint main(int argc,char** args){ \n     printf(“%d”,a); \n     fun1( ); \n     printf(“%d”,a); \n     fun2( ); \n     printf(“%d”，a);\n     fun3( );\n      printf(“%d”,a); \n}","choices":["\n1 2 3 4\n","\n1 2 2 2\n","\n1 2 2 4\n","\n1 1 1 4\n"],"correct_choice":"\n1 2 2 2\n"},{"title":"#include<iostream>\n#include<string>\nusing namespace std;\nclass A\n{\n    friend long fun(A s)\n    {\n        if (s.x<3) {\n            return 1;\n        }\n        return s.x+fun(A(s.x - 1));\n    }\npublic:\n    A(long a)\n    {\n        x = a--;\n    }\nprivate:\n    long x;\n};\nint main()\n{\n    int sum=0;\n    for( int i=0; i<5; i++) {\n        sum += fun(A(i));\n    }\n    cout<<sum;\n}\n\n  代码运行结果是？\n","choices":["\n21\n","\n15\n","\n9\n","\n36\n"],"correct_choice":"\n15\n"},{"title":"  下面代码的执行结果是（）   int main(void)\n{\n    char *p[]={“TENCENT”,”CAMPUS”,”RECRUITING”};\n    char **pp[]={p+2,p+1,p};\n    char ***ppp=pp;\n    printf(“%s”,**++ppp);\n    printf(“%s”,*++*++ppp);\n    return 0;\n}   ","choices":["\nCAMPUS RECRUITING\n","\nRECRUITING CAMPUS\n","\nCAMPUS CAMPUS\n","\nRECRUITING RECRUITING\n"],"correct_choice":"\nCAMPUS CAMPUS\n"},{"title":"  程序的基本结构中选择结构又叫分支结构,有单分支与多分支两种。请问这句话的说法是否正确？  ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"  若 k 为 int 型变量，则以下程序段的执行结果是（）。     k=-8567; printf(\"|%06D|\\n\",k); ","choices":["\n格式描述符不合法,输出无定值\n","\n输出为|%06D|\n","\n输出为|0-8567|\n","\n输出为|-8567|\n"],"correct_choice":"\n输出为|%06D|\n"},{"title":"  下列函数中，不能声明为虚函数的是（）？  ","choices":["\n构造函数\n","\n析构函数\n","\n私有成员函数\n","\n公有成员函数\n"],"correct_choice":"\n构造函数\n"},{"title":"  在位运算中，操作数每右移一位,其结果相当于（）。  ","choices":["\n操作数乘以2\n","\n操作数除以2\n","\n操作数乘以16\n","\n操作数除以16\n"],"correct_choice":"\n操作数除以2\n"},{"title":"  以下正确的说法是:在 C 语言中（）。 ","choices":["\n实参和与其对应的形参各占用独立的存储单元\n","\n实参和与其对应的形参共占用一个存储单元\n","\n只有当实参和与其对应的形参同名时才共占用存储单元\n","\n形参是虚拟的,不占用存储单元\n"],"correct_choice":"\n实参和与其对应的形参各占用独立的存储单元\n"},{"title":"若有说明：int a[][3]={1,2,3,4,5,6,7};，则数组 a 的第一维的大小是（）","choices":["\n2\n","\n3\n","\n4\n","\n无确定值\n"],"correct_choice":"\n3\n"},{"title":"\n  以下错误的if语句是（  ）\n","choices":["\nif(x>y) z=x;\n","\nif(x==y) z=0;\n","\nif(x!=y) printf(\"%d\",x) else printf(\"%d\",y); 缺少位址符&\n","\nif(x<y) { x++;y--;}\n"],"correct_choice":"\nif(x!=y) printf(\"%d\",x) else printf(\"%d\",y); 缺少位址符&\n"},{"title":"下面有关回调函数的说法，错误的是？","choices":["\n回调函数就是一个通过函数指针调用的函数\n","\n回调函数可能被系统API调用一次，也可能被循环调用多次\n","\n回调函数本身可以是全局函数 ，静态函数和某个特定的类的成员函数\n","\n回调函数可用于通知机制\n"],"correct_choice":"\n回调函数本身可以是全局函数 ，静态函数和某个特定的类的成员函数\n"},{"title":"下列代码的输出是？（注：print已经声明过）\nmain(){      \n    char str[]=\"Geneius\";\n    print (str);\n}  \nprint(char *s){ \n  if(*s){\n       print(++s);\n       printf(\"%c\",*s);  \n}\n}\n","choices":["\nsuiene\n","\nneius\n","\nrun-time error\n","\nsuieneG\n"],"correct_choice":"\nsuiene\n"},{"title":"\n  用C语言实现的算法可以没有输出但必须要有输入。\n\n\n  \n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"  有如下一段代码：   #define ADD(x,y) x+y\nint m=3;\nm+=m*ADD(m,m);   最后m的值为（）？  ","choices":["\n15\n","\n21\n","\n58\n","\n18\n"],"correct_choice":"\n15\n"},{"title":"  在下列语句中会执行什么操作？ \n  x == y; ","choices":["\n检查x和y是否相等\n","\n将y的值赋值给x\n","\n表示x除以y\n","\nx和y互相排斥\n"],"correct_choice":"\n检查x和y是否相等\n"},{"title":"C\n语言本身有输入输出语句。","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"  下列字符序列中，可用作 C 标识符的一组字符序列是（）。  ","choices":["\nS.b，sum，average，_above\n","\nclass，day，lotus_1，2day\n","\n#md，&12x，month，student_n!\n","\nD56，r_1_2，name，_st_1\n"],"correct_choice":"\nD56，r_1_2，name，_st_1\n"},{"title":"  下面程序的1,2,3处表达式的值是 ____________ （ ）     int main()    {      int n=1;      ++n;      n++; //1      --n;   // 2      ++n; //3      return 0;    }     ","choices":["\n2 2 3\n","\n2 2 2\n","\n2 3 2\n","\n2 1 1\n"],"correct_choice":"\n2 2 3\n"},{"title":"  以下不正确的叙述是（）。 ","choices":["\n在C程序中所用的变量必须先定义后使用\n","\n程序中,APH 和 aph 是两个不同的变量\n","\n若 a 和 b 类型相同,在执行了赋值语句a=b;后 b 中的值将放入 a 中,b 中的值不变\n","\n当输入数值数据时,对于整型变量只能输入整型值;对于实型变量只能输入实型值\n"],"correct_choice":"\n当输入数值数据时,对于整型变量只能输入整型值;对于实型变量只能输入实型值\n"},{"title":"  32系统，函数 \nvoid Func(char str[100]){}\n  中sizeof(str)= ","choices":["\n4\n","\n5\n","\n6\n","\n7\n"],"correct_choice":"\n4\n"},{"title":"  有以下程序 \n#include<stdio.h>\nint fun (int a, int b){\n  return a+b; \n}\nmain(){\n   int x=6 ,y=7,z=8,r;\n   r=fun(fun(x,y),z--);\n   printf(\"%d\\n\" ,r);\n}\n  程序运行后的输出结果是? ","choices":["\n21\n","\n15\n","\n20\n","\n31\n"],"correct_choice":"\n21\n"},{"title":"C++语言函数不能进行嵌套定义。","choices":["\nT\n","\nF\n"],"correct_choice":"\nT\n"},{"title":"  假定一个二维数组的定义为“int a[3][4]={{3,4},{2,8,6}};”，则元素a[2][0]的值为（   ）。  ","choices":["\n0\n","\n2\n","\n4\n","\n6\n"],"correct_choice":"\n0\n"},{"title":"  若有说明语句：int a,b,c,*d=&c；，则能正确从键盘读入三个整数分别赋给变量a、b、c的语句是（  ）。  ","choices":["\nscanf(\"%d%d%d\",&a,&b,d);\n","\nscanf(\"%d%d%d\",&a,&b,&d);\n","\nscanf(\"%d%d%d\",a,b,d);\n","\nscanf(\"%d%d%d\",a,b,*d);\n"],"correct_choice":"\nscanf(\"%d%d%d\",&a,&b,d);\n"},{"title":"\n  int i=20;switch(i/10){case 2:printf(\"A\");case 1:printf(\"B\");}\n  的输出结果为A。（）\n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"\n\t以下程序运行时，若输入1abcedf2df<回车>输出结果是？ \n\n#include<stdio.h>\nint main()\n{  \n\tchar a=0,ch;\n\twhile((ch=getchar())!='\\n')\n\t{\n            if(a%2!=0&&(ch>= 'a' &&ch<='z'))\n                ch=ch- 'a'+ 'A';\n\t    a++;\n            putchar(ch);\n\t}\n\tprintf( \"\\n\");\n}","choices":["\n1abcedf2df\n","\n1ABCEDF2DF\n","\n1AbCeDf2dF\n","\n1abceDF2DF\n"],"correct_choice":"\n1AbCeDf2dF\n"},{"title":"\n  假定所有变量均已正确定义，则下列程序段运行后x的值是（）\n\n\n  \n","choices":["\n35\n","\n34\n","\n4\n","\n3\n"],"correct_choice":"\n4\n"},{"title":"二维数组X按行顺序存储，其中每个元素占1个存储单元。若X[4][4]的存储地址为Oxf8b82140,X[9][9]的存储地址为Oxf8b8221c,则X[7][7]的存储地址为()。","choices":["\nOxf8b821c4\n","\nOxf8b821a6\n","\nOxf8b82198\n","\nOxf8b821c0\n"],"correct_choice":"\nOxf8b821c4\n"},{"title":"由多个源文件组成的C程序，经过编辑、预处理、编译、链接等阶段会生成最终的可执行程序。下面哪个阶段可以发现被调用的函数未定义？","choices":["\n预处理\n","\n编译\n","\n链接\n","\n执行\n"],"correct_choice":"\n链接\n"},{"title":"重载（overload)和重写(override）的区别？","choices":["\n重载：是指允许存在多个同名函数，而这些函数的参数表不同\n","\n重写：是指子类重新定义复类虚函数的方法\n","\n重写：是指允许存在多个同名函数，而这些函数的参数表不同\n","\n重载：是指子类重新定义复类虚函数的方法\n"],"correct_choice":"\n重载：是指允许存在多个同名函数，而这些函数的参数表不同\n\n重写：是指子类重新定义复类虚函数的方法\n"},{"title":"  关于下列操作哪个复杂度为O(1)?\n","choices":["\nvector<>中插入元素(动态数组)\n","\nset中查找元素\n","\nhash_map中查找元素\n","\ndeque尾部删除元素\n"],"correct_choice":"\nhash_map中查找元素\n\ndeque尾部删除元素\n"},{"title":"  设 char *s=\"\\ta\\017bc\";则指针变量s指向的字符串所占的字节数是（）。  ","choices":["\n9\n","\n5\n","\n6\n","\n7\n"],"correct_choice":"\n6\n"},{"title":"  设以下变量均为 int 类型,则值不等于7的表达式是（）。  ","choices":["\n(x=y=6,x+y,x+1)\n","\n(x=y=6,x+y,y+1)\n","\n(x=6,x+1,y=6,x+y)\n","\n(y=6,y+1,x=y,x+1)\n"],"correct_choice":"\n(x=6,x+1,y=6,x+y)\n"},{"title":"  C 语言中的标识符只能由字母,数字和下划线三种字符组成,且第一个字符（）。  ","choices":["\n必须为字母\n","\n必须为下划线\n","\n必须为字母或下划线\n","\n可以是字母,数字和下划线中任一字符\n"],"correct_choice":"\n必须为字母或下划线\n"},{"title":"内联函数在以下场景中最有用的（）","choices":["\n当函数代码较长且多层嵌套循环的时候\n","\n当函数中有较多的静态变量的时候\n","\n当函数代码较小并且被频繁调用的时候\n","\n以上都不对\n"],"correct_choice":"\n当函数代码较小并且被频繁调用的时候\n"},{"title":"下列描述中不正确的是（）","choices":["\n字符型数组中可能存放字符串。\n","\n可以对字符型数组进行整体输入、输出。\n","\n可以对整型数组进行整体输入、输出。\n","\n不能在通过赋值运算符对字符型数组进行整体赋值。\n"],"correct_choice":"\n可以对整型数组进行整体输入、输出。\n"},{"title":"  对两个字符a和b进行初始化:char a[]=\"ABCDEF\";char\n  b[]={'A','B','C','D','E','F'};则以下叙述正确的是： ","choices":["\na数组比b数组长度长\n","\na与b长度相同\n","\na与b数组完全相同\n","\na和b中都存放字符串\n"],"correct_choice":"\na数组比b数组长度长\n"},{"title":"下面函数的功能是\nint fun (char *s)\n{\n    char *p=s;\n    while(*p++);\n    return p-s-1;\n}\n","choices":["\n计算字符串的位(bit)数\n","\n复制一个字符串\n","\n求字符串的长度\n","\n求字符串存放的位置\n"],"correct_choice":"\n求字符串的长度\n"},{"title":"short a[100]，sizeof(a) 返回什么？","choices":["\n2\n","\n4\n","\n100\n","\n200\n","\n400\n"],"correct_choice":"\n200\n"},{"title":"enum string{    \n    x1,    \n    x2,    \n    x3=10,    \n    x4,    \n    x5,    \n} x;\n  函数外部访问x等于什么？ ","choices":["\n5\n","\n12\n","\n0\n","\n随机值\n"],"correct_choice":"\n0\n"},{"title":"  共同体变量所占的内存长度等于最长的成员的长度。请问这句话的说法是正确的吗？  ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"  下面程序的输出是？（    ）  int main(void)\n{\nenum team { my , your = 9 , his , her = his + 3};\nprintf(\"%d %d %d %d\\n\",my , your , his , her);\nreturn 0;\n} ","choices":["\n0     9    10   13\n","\n8     9    11   13\n","\n8     9    10   13\n","\n0     9    12   9\n"],"correct_choice":"\n0     9    10   13\n"},{"title":"一个公有派生类的对象在使用上可以被当作基类的对象，反之则禁止。","choices":["\n是\n","\n否\n"],"correct_choice":"\n是\n"},{"title":"\n  C\n  语言中的文件类型只有（ ）\n  \n","choices":["\n索引文件和文本文件两种\n","\n文本文件一种\n","\n二进制文件一种\n","\nASCII码文件和二进制文件两种\n"],"correct_choice":"\nASCII码文件和二进制文件两种\n"},{"title":"  在 if 语句中,else 前一个语句可不加\";\"。请问这句话的说法是正确的吗？ ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"  对两个数组 a 和 b 进行如下初始化 \n\n     char a[] = \"ABCDEF\";  \n     char b[] = {'A','B','C','D','E','F'};  \n  \n    \n  \n     以下叙述正确的是（）  \n","choices":["\na 与 b 数组完全相同\n","\na 与 b 长度相同\n","\na 和 b 中都存放了字符串\n","\na 数组比 b 数组长\n"],"correct_choice":"\na 数组比 b 数组长\n"},{"title":"\n  设有如下程序段，下面描述中正确的是 （ ）\n  \n\n\n  int k=10; while(k=0)  k=k-1; \n","choices":["\n循环执行一次\n","\n循环是无限循环\n","\n循环体语句一次也不执行\n","\n循环体语句执行一次\n"],"correct_choice":"\n循环体语句一次也不执行\n"},{"title":"下面程序段的运行结果是（）\nint main（int argc, char *argv[]）\n{\n    char *s = \"abcdefg\";\n    s += 2;\n    fprintf(stderr, \"%d\\n\", s);\n    return 0;\n}\n\n","choices":["\ncde\n","\n字符\"c\"\n","\n字符\"c\"的地址\n","\n不确定\n"],"correct_choice":"\n字符\"c\"的地址\n"},{"title":"  有如下类模板定义：（） \ntemplate<class　T> class　BigNumber{ \n    long　n; \npublic: \n    BigNumber(T i):n(i){}\n    BigNumber　operator+(BigNumber　b)\n    { \n        return　BigNumber(n+b.n); \n    } \n};\n  已知b1,b2是BigNumber的两个对象,则下列表达式中错误的是? ","choices":["\n3+3\n","\nb1+3\n","\nb1+b2\n","\n3+b1\n"],"correct_choice":"\n3+b1\n"},{"title":"  以下程序输出结果是____。 \nclass A\n{\npublic:\n    virtual void func(int val = 1)\n    { std::cout<<\"A->\"<<val <<std::endl;}\n    virtual void test()\n    { func();}\n};\nclass B : public A\n{\npublic:\n    void func(int val=0)\n{std::cout<<\"B->\"<<val <<std::endl;}\n};\nint main(int argc ,char* argv[])\n{\n    B*p = new B;\n    p->test();\nreturn 0;\n}\n","choices":["\nA->0\n","\nB->1\n","\nA->1\n","\nB->0\n","\n编译出错\n","\n以上都不对\n"],"correct_choice":"\nB->1\n"},{"title":"代码执行后，a和b的值分别为?\nclass Test{\npublic:\n    int a;\n    int b;\n    virtual void fun() {}\n    Test(int temp1 = 0, int temp2 = 0)\n    {\n        a=temp1 ;\n        b=temp2 ;\n    }\n    int getA() \n    {\n        return a;\n    }\n    int getB() \n    {\n        return b;\n    }\n};\n\nint main()\n{\n    Test obj(5, 10);\n    // Changing a and b\n    int* pInt = (int*)&obj;\n    *(pInt+0) = 100;   \n    *(pInt+1) = 200;   \n    cout << \"a = \" << obj.getA() << endl; \n    cout << \"b = \" << obj.getB() << endl; \n    return 0; \n} ","choices":["\n200 10\n","\n5 10\n","\n100 200\n","\n100 10\n"],"correct_choice":"\n200 10\n"},{"title":"\n  类中的成员函数都是公有的,数据成员都是私有的.这句话是否正确？\n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"\n  int *p=null;是正确的定义吗\n","choices":["\n是\n","\n否\n"],"correct_choice":"\n否\n"},{"title":"\n  若x为int型变量,则执行以下语句后x的值为-24.\n\n\n  x=6;\n\n\n  x+=x-=x*x;\n\n  说法是否正确？ ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"cin \n是 istream 类的成员函数。","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"下面是对s的初始化，其中不正确的是（        ）","choices":["\nchar s[5]={\"abc\"};\n","\nchar s[5]={'a','b','c'};\n","\nchar s[5]=\" \";\n","\nchar s[5]=\"abcdef\";\n"],"correct_choice":"\nchar s[5]=\"abcdef\";\n"},{"title":"C语言中整型数据可以赋给实型变量。","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"\n设x为int型变量，则执行以下语句段后，x的值为：\n    x=10; x+=x-=x-x; \n","choices":["\n20\n","\n10\n","\n40\n","\n30\n"],"correct_choice":"\n20\n"},{"title":"  有以下程序 \n#include <stdio.h>\nvoid func( int n )\n{\n    static int num ＝ 1;\n    num += n;\n    printf(\"%d\",num);\n}\nmain( )\n{\n    func(3);\n    func(4);\n    printf(\"\\n\");\n}\n   程序运行后的输出是 ","choices":["\n4 5\n","\n4 8\n","\n3 5\n","\n3 4\n"],"correct_choice":"\n4 8\n"},{"title":"有如下一段代码:\n#define ADD(x,y) x+y\nint m=3;\nm+=m*ADD(m,m); \n  则m的值为: ","choices":["\n15\n","\n12\n","\n18\n","\n58\n"],"correct_choice":"\n15\n"},{"title":"()是构成C语言的基本单位","choices":["\n函数\n","\n过程\n","\n子程序\n","\n子例程\n"],"correct_choice":"\n函数\n"},{"title":"若fp已定义为指向某文件的指针,且没有读到该文件的末尾,C语言函数feof( fp)的函数返回值是？","choices":["\nEOF\n","\n非0\n","\n-1\n","\n0\n"],"correct_choice":"\n0\n"},{"title":"以下关于头文件，说法正确的是（）","choices":["\n#include<filename.h>，编译器寻找头文件时，会从当前编译的源文件所在的目录去找\n","\n#include“filename.h”，编译器寻找头文件时，会从通过编译选项指定的目录去找\n","\n多个源文件同时用到的全局整数变量，它的声明和定义都放在头文件中，是好的编程习惯\n","\n在大型项目开发中，把所有自定义的数据类型、全局变量、函数声明都放在一个头文件中，各个源文件都只需要包含这个头文件即可，省去了要写很多#include语句的麻烦，是好的编程习惯。\n"],"correct_choice":"\n#include“filename.h”，编译器寻找头文件时，会从通过编译选项指定的目录去找\n"},{"title":"C语言中允许函数值类型缺省定义，此时该函数值隐含的类型是int。","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"  以 下 for 循 环 的 执 行 次 数 是（）。     for(x=0,y=0;(y=123)&&(x<4);x++); ","choices":["\n是无限循环\n","\n循环次数不定\n","\n4次\n","\n3次\n"],"correct_choice":"\n4次\n"},{"title":"  C语言的double类型数据一般占4个字节。请问这句话的说法是正确的吗？ ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"下面对枚举变量的定义不正确的事（        ）","choices":["\nenum weekday{sun,mou,tue,wed,thu,fri,sat};\nenum weekday a,b,c;\n","\nenum weekday{sun,mou,tue,wed,thu,fri,sat}a,b,c;\n","\nenum weekday{sun,mou,tue,wed,thu,fri,sat}\n","\nenum {sun,mou,tue,wed,thu,fri,sat}a,b,c;\n"],"correct_choice":"\nenum weekday{sun,mou,tue,wed,thu,fri,sat}\n"},{"title":"下面的模板声明中,正确的是:","choices":["\ntemplate<typename T1,T2>\n","\ntemplate<class T1,T2>\n","\ntemplate<class T1,class T2>\n","\ntemplate<typename T1;typename T2>\n"],"correct_choice":"\ntemplate<class T1,class T2>\n"},{"title":"当一个类A 中没有声明任何成员变量与成员函数,这时sizeof(A)的值是多少？","choices":["\n1\n","\n0\n","\n4\n","\n运行时错误\n"],"correct_choice":"\n1\n"},{"title":"以下叙述中不正确的是","choices":["\n在不同的函数中可以使用相同名字的变量\n","\n函数中的形式参数是局部变量\n","\n在一个函数内定义的变量只在本函数范围内有效\n","\n在一个函数内的复合语句中定义的变量在本函数范围内有效\n"],"correct_choice":"\n在一个函数内的复合语句中定义的变量在本函数范围内有效\n"},{"title":"设m和n都是int类型，那么以下for循环语句，______.\nfor(m=0,n=-1;n=0;m++,n++)\n    n++;","choices":["\n循环体一次也不执行\n","\n循环体执行一次\n","\n是无限循环\n","\n有限次循环\n","\n循环结束判断条件不合法\n","\n运行出错\n"],"correct_choice":"\n循环体一次也不执行\n"},{"title":"  win32系统里，下面几个sizeof的运行结果是（） \nint intValue=1024;\nchar str[]=\"Tencent\";\nconst char* ch=str;\nsizeof(intValue)=__a___;\nsizeof(str)=__b____;\nsizeof(ch)=____c___;","choices":["\na=1,b=1,c=1\n","\na=4,b=4,c=4\n","\na=4,b=7,c=4\n","\na=4,b=8,c=4\n"],"correct_choice":"\na=4,b=8,c=4\n"},{"title":"若有定义语句： char a ='\\82'; 则变量a","choices":["\n说明不合法\n","\n包含1个字符\n","\n包含2个字符\n","\n包含3个字符\n"],"correct_choice":"\n包含1个字符\n"},{"title":"  若有定义语句:char s[3][10],(*k)[3],*p;则以下赋值语句错误的是() \n1.p=s; \n2.p=k;\n3.p=s[0]; \n4.k=s;","choices":["\n124\n","\n1234\n","\n12\n","\n234\n"],"correct_choice":"\n124\n"},{"title":"  下列关于bool,int,float,指针类型的变量a 与“零”的比较语句正确的有？ ","choices":["\nbool : if(!a)\n","\nint : if(a == 0)\n","\nfloat: if(a == 0.0)\n","\n指针: if(a == nullptr)\n"],"correct_choice":"\nbool : if(!a)\n\nint : if(a == 0)\n\n指针: if(a == nullptr)\n"},{"title":"  函数若无返回值,则它一定无形参。请问这个说法是正确的吗？ \n\t\n\t\n\t\t函数若无返回值,则它一定无形参。请问这个说法是正确的吗？\n\t\n\n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"表建立索引时，update,delete,insert是要维护索引的吗？","choices":["\n是\n","\n错\n"],"correct_choice":"\n是\n"},{"title":"对于下面的说法，正确的是____。","choices":["\n对于 struct X { short s; int i; char c; }，sizeof(X) 的值等于 sizeof(s) + sizeof(i) + sizeof(c)\n","\n对于某个double变量 a，可以使用 a == 0.0 来判断其是否为零\n","\n初始化方式 char a[14] = \"Hello, world!\"; 和初始化方式 char a[14]; a = \"Hello, world!\"; 的效果相同\n","\n在gcc编译器下，对于 int i = 3; printf(\"%d %d\", ++i, ++i)，运行输出为：4 5\n","\n选项A、B、C、D中至少有两个是正确的\n","\n以上选项均不正确\n"],"correct_choice":"\n以上选项均不正确\n"},{"title":"以下代码\nlong factorial (long x)(x>=0) \n{ \n ???? \n return x * factorial(x - 1); \n}\n\n  用以下哪个选项替换？？？处的代码后可以实现正确的求阶乘的函数\n  ？","choices":["\nif (x == 0) return 0;\n","\nreturn 1;\n","\nif (x >= 2) return 2;\n","\nif (x == 0) return 1;\n","\nif (x <= 1) return 1;\n"],"correct_choice":"\nif (x == 0) return 1;\n\nif (x <= 1) return 1;\n"},{"title":"  巳知字母 A 的 ASCII 码是 65 ，以下程序的执行结果是（）。           #include<stdio.h>           main()           {            char c1='A',c2='Y';            printf(\"%d,%d\\n\",c1,c2);        ","choices":["\nA,Y\n","\n65,65\n","\n65,90\n","\n65,89\n"],"correct_choice":"\n65,89\n"},{"title":"\n  C程序中注释部分可以出现在程序中任意合适的地方()\n","choices":["\nTURE\n","\nFAULT\n"],"correct_choice":"\nTURE\n"},{"title":"  设有说明语句：  struct  student\n{  int num,age;  };\nstruct student stu[3]={{6001,20},{6003,21},{6005,19}};\nstruct student *p=stu;     则下面的C语言表达式中,值为6003的是（） 。 ","choices":["\n++(p->num)\n","\n(p++)->num\n","\n(*p++).num\n","\n(*++p).num\n"],"correct_choice":"\n(*++p).num\n"},{"title":"  下列程序的运行结果是YY，78，96 ，请为横线处选择合适的程序（） \n\n  \n  \n","choices":["\na\n","\n*a\n","\na[]\n","\n&a\n"],"correct_choice":"\n*a\n"},{"title":"\n  函数的递归调用不过是一个函数直接或间接地调用它自身。（）\n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"在Windows编程中下面的说法正确的是:","choices":["\n两个窗口,他们的窗口句柄可以是相同的\n","\n两个窗口,他们的处理函数可以是相同的\n","\n两个窗口,他们的窗口句柄和窗口处理函数都不可以相同.\n"],"correct_choice":"\n两个窗口,他们的处理函数可以是相同的\n"},{"title":"下面哪种面向对象的方法可以让你变得富有()","choices":["\n继承\n","\n封装\n","\n多态\n","\n抽象\n"],"correct_choice":"\n继承\n"},{"title":"以下程序的结果？ \nvoid foo(int *a, int *b)\n{\n    *a = *a + *b;\n    *b = *a - *b;\n    *a = *a - *b;\n}\nvoid main()\n{\n    int a = 1, b = 2, c = 3;\n    foo(&a, &b);\n    foo(&b, &c);\n    foo(&c, &a);\n    printf(\"%d, %d, %d\", a, b, c);\n}","choices":["\n1，2，3\n","\n1，3，2\n","\n2，1，3\n","\n3，2，1\n"],"correct_choice":"\n1，3，2\n"},{"title":"对静态成员的不正确描述（）","choices":["\n静态成员不属于对象，是类的共享成员\n","\n静态数据成员要在类外初始化\n","\n调用静态成员函数时要通过类或对象激活，所以静态成员函数拥有this指针\n","\n非静态成员函数也可以操作静态数据成员\n"],"correct_choice":"\n调用静态成员函数时要通过类或对象激活，所以静态成员函数拥有this指针\n"},{"title":"testArray是一个包含8个元素的int类型数组，请问表达式：sizeof(testArray)/sizeof(testArray[0])的值是_____.","choices":["\n1\n","\n2\n","\n4\n","\n8\n"],"correct_choice":"\n8\n"},{"title":"\n  如下代码的输出结果是（）\n\n\n  \n    \n    \n  \n","choices":["\n1\n","\n11\n","\n-1\n","\n30\n"],"correct_choice":"\n11\n"},{"title":"C++类体系中，不能被派生类继承的有?","choices":["\n构造函数\n","\n静态成员函数\n","\n非静态成员函数\n","\n赋值操作函数\n"],"correct_choice":"\n构造函数\n\n静态成员函数\n\n赋值操作函数\n"},{"title":"  若有说明: int a[][4]={0,0};则下面不正确的叙述是（）。  ","choices":["\n数组 a 的每个元素都可得到初值0\n","\n二维数组 a 的第一维大小为1\n","\n因为二维数组 a 中第二维大小的值除经初值个数的商为1,故数组 a 的行数为1\n","\n有元素 a[0][0]和 a[0][1]可得到初值0,其余元素均得不到初值0\n"],"correct_choice":"\n有元素 a[0][0]和 a[0][1]可得到初值0,其余元素均得不到初值0\n"},{"title":"  下列程序的输出结果是（ ）。     main( )     { int a=7,b=5;      printf(\"%d\\n\",b=b/a);      }  ","choices":["\n5\n","\n1\n","\n0\n","\n不确定值\n"],"correct_choice":"\n0\n"},{"title":"在\nC++\n中，用于实现动态多态性的是（\n）。\n ","choices":["\n内联函数\n","\n重载函数\n","\n模板函数\n","\n虚函数\n"],"correct_choice":"\n虚函数\n"},{"title":"  以下程序中，while循环的循环次数是（  ）。     main()\n  { int i=0;\n  while(i<10)\n  { if(i<1)\ncontinue;\n  if(i==5)\nbreak;\n   i++;\n  }\n  ......\n  }","choices":["\n1\n","\n10\n","\n6\n","\n死循环，不能确定次数\n"],"correct_choice":"\n死循环，不能确定次数\n"},{"title":"  若k为整形,下述while循环的次数为:() \n\n  k=1000;\nwhile (k>1)\n {   print k;\n      k=k/2;\n }\n","choices":["\n1000\n","\n10\n","\n11\n","\n9\n"],"correct_choice":"\n9\n"},{"title":"  运行下面这段代码，会出现的情况是:() \nvoid GetMemory(char *p)\n{\n    p = (char *)malloc(100);\n}\nvoid Test(void)\n{\n    char *str = NULL;\n    GetMemory(str);\n    strcpy(str, \"hello world\");\n    printf(str);\n}\n\n\n","choices":["\nhello world\n","\n显示为乱码\n","\n程序崩溃\n","\nhello\n"],"correct_choice":"\n程序崩溃\n"},{"title":"以下关于STL的描述中，____是错的。","choices":["\nSTL容器是线程不安全的\n","\n当容量不够时，vector内部内存扩展方式是翻倍\n","\nstd::sort是稳定排序\n","\nstd::bitset不是一个STL容器\n","\nstd::stack默认是用deque实现的\n","\nstd::string中可以存储多个’\\0’字符\n"],"correct_choice":"\nstd::sort是稳定排序\n"},{"title":"下列关于内存分配和释放的函数及其区别描述正确的有？","choices":["\nC++语言的标准内存分配函数：malloc，calloc，realloc，free等。\n","\nC中为new/delete函数。\n","\nmalloc和calloc的区别是1块与n块的区别和初始化\n","\nrealloc调用形式为(类型*)realloc(*ptr，size)：将ptr内存大小增大到size。\n"],"correct_choice":"\nmalloc和calloc的区别是1块与n块的区别和初始化\n\nrealloc调用形式为(类型*)realloc(*ptr，size)：将ptr内存大小增大到size。\n"},{"title":"以下涉及到内存管理的代码段中，有错误的是：","choices":["\nint *a=new int(12);\n//..... \nfree(a);\n\n","\nint *ip=static_cast<int*>(malloc(sizeof(int)));\n*ip=10;\n//.....\ndelete ip;\n","\ndouble *a=new double[1];\n//.... \ndelete a;\n","\nint *ip=new int(12);\nfor(int i=0;i<12;++i){\nip[i]=i;\n}\ndelete []ip;\n"],"correct_choice":"\nint *a=new int(12);\n//..... \nfree(a);\n\n\nint *ip=static_cast<int*>(malloc(sizeof(int)));\n*ip=10;\n//.....\ndelete ip;\n\nint *ip=new int(12);\nfor(int i=0;i<12;++i){\nip[i]=i;\n}\ndelete []ip;\n"},{"title":"在下列关于C++函数的叙述中，正确的是（      ）","choices":["\n每个函数至少要有一个参数\n","\n每个函数都必须返回一个值\n","\n函数在被调用之前必须先声明\n","\n函数不能自己调用自己\n"],"correct_choice":"\n函数在被调用之前必须先声明\n"},{"title":"设有如下定义： \nunsigned long pulArray[]={6,7,8,9,10}; \nunsigned long *pulPtr; \n  则下列程序段的输出结果为多少？ \npulPtr=pulArray; \n*(pulPtr+2)+=2; \nprintf(\"%d,%d\\n\",*pulPtr,*(pulPtr+2)); \n","choices":["\n0 2\n","\n6 8\n","\n6 10\n","\n8 8\n"],"correct_choice":"\n6 10\n"},{"title":"C语言中用于结构化程序设计的三种基本结构是（        ）","choices":["\nif、switch、break\n","\nif、while、for\n","\nwhile、do- while、for\n","\n顺序结构、选择结构、循环结构\n"],"correct_choice":"\n顺序结构、选择结构、循环结构\n"},{"title":"基类的公有成员是其公有派生类的（   ）成员","choices":["\n不可见\n","\n私有\n","\n保护\n","\n公有\n"],"correct_choice":"\n公有\n"},{"title":"  return 后面括号里的表达式的值即是此函数的值。请问这句话的说法是正确的吗？  ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"  有定义语句:int  b;char  c[10];  ,则正确的输入语句是(   ) 。  ","choices":["\nscanf(\"%d%s\",&b,&c);\n","\nscanf(\"%d%s\",&b,c);\n","\nscanf(\"%d%s\",b,c);\n","\nscanf(\"%d%s\",b,&c);\n"],"correct_choice":"\nscanf(\"%d%s\",&b,c);\n"},{"title":"  成员函数（不包括析构函数）与一般的函数一样可以重载.内联和设置参数的默认值。这句话是否正确  ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"设a、b、c、d、m、n均为int型变量，且a=5、b=6、c=7、d=8、m=2、n=2,则逻辑表达式（m=a>b）&&(n=c>d)运算后，n的值为：","choices":["\n0\n","\n1\n","\n2\n","\n7\n"],"correct_choice":"\n2\n"},{"title":"ClassA *pclassa=new ClassA[5];\ndelete pclassa;   c++语言中，类ClassA的构造函数和析构函数的执行次数分别为() ","choices":["\n5,1\n","\n1,1\n","\n5,5\n","\n1,5\n"],"correct_choice":"\n5,1\n"},{"title":"定义网络传输数据包为 \nclass packet{\n     int size;\n     void data[0];\n}\n  其中data的作用是？ ","choices":["\n维护数据包空间的连续性\n","\n数据分割位\n","\n指向独立的数据空间\n","\n无任何作用\n"],"correct_choice":"\n维护数据包空间的连续性\n"},{"title":"switch()中不允许的数据类型有?","choices":["\n整型\n","\n浮点型\n","\n字符串\n","\n布尔\n"],"correct_choice":"\n浮点型\n\n字符串\n"},{"title":"  对于 void 类型函数,调用时不可作为（）。 ","choices":["\n自定义函数体中的语句\n","\n循环体里的语句\n","\nif 语句的成分语句\n","\n表达式\n"],"correct_choice":"\n表达式\n"},{"title":"  结构化程序设计的3种结构是（）。 ","choices":["\n顺序结构、选择结构、转移结构\n","\n分支结构、等价结构、循环结构\n","\n多分支结构、赋值结构、等价结构\n","\n顺序结构、选择结构、循环结构\n"],"correct_choice":"\n顺序结构、选择结构、循环结构\n"},{"title":"  char h,*s=&h;可将字符H通过指针存入变量 h 中的语句是（）。      ","choices":["\n*s=H;\n","\n*s='H';\n","\ns=H;\n","\ns='H'\n"],"correct_choice":"\n*s='H';\n"},{"title":"  有如下一段代码（unit16_t为2字节无符号整数，unit8_t位1字节无符号整数）；       union X\n{\nunint16_t a;\nstruct Z\n{\nunint8_t m;\nunint8_t n;\n}z;\n};\n \nunion X x;\nx;a = 0x1234;     请问x.z.n在大字节序和小字节序机器上的值分别为多少（）？     ","choices":["\n0x34,0x12\n","\n0x12,0x34\n","\n0x1234,0x1234\n","\n0x1234,0\n","\n0，0x1234\n"],"correct_choice":"\n0x34,0x12\n"},{"title":"  有以下程序   main()\n{  \nchar \na[7]=\"a0\\0a0\\0\";int \ni,j;\n   \ni=sizeof(a);  j=strlen(a);\n   \nprintf(\"%d  %d\\n\",i,j);\n}   程序运行后的输出结果是(    )。  ","choices":["\n2    2\n","\n7    6\n","\n7    2\n","\n6    2\n"],"correct_choice":"\n7    2\n"},{"title":"\n  char *p =\"PCGAME\";是定义初始化指针变量,指针变量的值是一个字符串.说法是否正确？\n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"执行程序段int     a=-1,b=4,k;k=(++a<0)&&!(b--<=0);printf(“%d %d %d\\n”,k,a,b);后的输出结果是0 0 4。","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"\n  字符串比较函数是strcmp( )。说法是否正确？ \n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"  问题描述: \n#pragma pack(2)\nclass BU\n{\n\tint number;\n\tunion UBffer\n\t{\n\t\tchar buffer[13];\n\t\tint number;\n\t}ubuf;\n\tvoid foo(){}\n\ttypedef char*(*f)(void*);\n\tenum{hdd,ssd,blueray}disk;\n}bu;\n  sizeof(bu)的值是() ","choices":["\n20\n","\n21\n","\n22\n","\n23\n","\n24\n","\n非以上选项\n"],"correct_choice":"\n22\n"},{"title":"#include<file.h> 与 #include \"file.h\"的区别？","choices":["\n前者首先从当前工作路径搜寻并引用file.h，而后者首先从Standard Library的路径寻找和引用file.h\n","\n前者首先从Standard Library的路径寻找和引用file.h，而后者首先从当前工作路径搜寻并引用file.h\n","\n两者都是首先从Standard Library的路径寻找和引用file.h\n","\n两者都是首先从当前工作路径搜寻并引用file.h\n"],"correct_choice":"\n前者首先从Standard Library的路径寻找和引用file.h，而后者首先从当前工作路径搜寻并引用file.h\n"},{"title":"\n  若执行以下程序段\n\n\n  int x=3,y=6,z; \n  z=x^y<<2;\n\n\n  则z的二进制值是_______________\n","choices":["\n00011011\n","\n00010100\n","\n00011000\n","\n00000110\n"],"correct_choice":"\n00011011\n"},{"title":"凡是函数中未指定存储类别的局部变量，其隐含的存储类别为（            ）","choices":["\n自动（auto）\n","\n静态（static）\n","\n外部（extern）\n","\n寄存器（register）\n"],"correct_choice":"\n自动（auto）\n"},{"title":"  若有以下定义,则能使值为3的表达式是 （）。    int k=7,x=12;  ","choices":["\nx%=(k%=5)\n","\nx%=(k-k%5)\n","\nx%=k-k%5\n","\n(x%=k)-(k%=5)\n"],"correct_choice":"\n(x%=k)-(k%=5)\n"},{"title":"类的成员有三种访问属性，分别是public、protected、private，子类能够访问的成员是（）","choices":["\n都能访问\n","\npublic和protected\n","\npublic和private\n","\nprotected和private\n"],"correct_choice":"\npublic和protected\n"},{"title":"  以下程序输出的结果是（ ）？   main()\n{ int\na=5,b=4,c=3,d;\nd=(a>b>c);\nprintf(\"%d\\n\",d);\n}","choices":["\n5\n","\n4\n","\n3\n","\n0\n"],"correct_choice":"\n0\n"},{"title":"int fun(int a)\n{\n    a = (1 << 5) - 1; \n    return a; \n} \n  fun(21)结果是（）","choices":["\n10\n","\n8\n","\n5\n","\n31\n"],"correct_choice":"\n31\n"},{"title":"有如下程序段：\nint\ti, n = 0;\nfloat x = 1, y1 = 2.1 / 1.9, y2 = 1.9 / 2.1;\nfor ( i = 1; i < 22; i++ )\n x = x * y1;\nwhile ( x != 1.0 )\n{\n x = x * y2; n++;\n}\nprintf( “ %d / n ”, n );\n\n  请问执行结果是：","choices":["\n21\n","\n22\n","\n无限循环\n","\n程序崩溃\n"],"correct_choice":"\n无限循环\n"},{"title":"设 m 和 n 都是 int 类型，那么以下 for 循环语句，___ for(m=0,n=-1;n=0;m++,n++)\n    n++;","choices":["\n循环体一次也不执行\n","\n循环体执行一次\n","\n是无限循环\n","\n有限次循环\n","\n循环结束判断条件不合法\n","\n运行出错\n"],"correct_choice":"\n循环体一次也不执行\n"},{"title":"在每个C语言程序中都必须包含有这样一个函数，该函数的函数名为( )。","choices":["\nmain\n","\nMAIN\n","\nname\n","\nfunction\n"],"correct_choice":"\nmain\n"},{"title":"\n  下列程序执行后的输出结果为（）\n\n\n  \n    \n  \n","choices":["\n36\n","\n以上均不正确\n","\n16\n","\n30\n"],"correct_choice":"\n16\n"},{"title":"  由于主函数首部经常缩写成 main(),所以它不可能有形式参数。请问这句话的说法是正确的吗？  ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"\n  设有如下的说明和定义\n\n\n  struct { \n\n\n  int a; \n\n\n  char *s; \n\n\n  } x, *p = &amp;x; \n\n\n  x.a = 4; \n\n\n  x.s = \"hello\";\n\n\n  则以下叙述中正确的是（）\n","choices":["\n(p++)->a与p++->a都是合语法的表达式，但二者不等价\n","\n语句 ++p->a; 的效果是使p增1\n","\n语句 ++p->a; 的效果是使成员a增1\n","\n语句 *p->s++; 等价于 (*p)->s++;\n","\n    (p++)-&gt;a与p++-&gt;a都是合语法的表达式，但二者不等价\n  ","\n    语句 ++p-&gt;a; 的效果是使p增1\n  ","\n    语句 ++p-&gt;a; 的效果是使成员a增1\n  ","\n    语句 *p-&gt;s++; 等价于 (*p)-&gt;s++;\n  "],"correct_choice":"\n语句 ++p->a; 的效果是使成员a增1\n\n    语句 ++p-&gt;a; 的效果是使成员a增1\n  "},{"title":"  C 语言的当型循环是先执行循环后判断条件。请问这句话的说法是正确的吗？  ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"  以下程序段的输出结果为（）。    char c[]=\"abc\";    int i=0;    do ;while(c[i++]!='\\0');printf(\"%d\",i-1);     ","choices":["\nabc\n","\nab\n","\n2\n","\n3\n"],"correct_choice":"\n3\n"},{"title":"#define DOUBLE(x) x+x \nint i = 5*DOUBLE(5);\n  i 是多少？","choices":["\n30\n","\n50\n","\n100\n","\n语法错误\n"],"correct_choice":"\n30\n"},{"title":"执行\"int x=1;int y=~x;\"语句后,y的值为？","choices":["\n1\n","\n0\n","\n-1\n","\n-2\n"],"correct_choice":"\n-2\n"},{"title":"下面程序的输出结果是 char *p1= “123”, *p2 = “ABC”, str［50］= \"xyz\";\nstrcpy（str+2,strcat（p1,p2））;\ncout << str;","choices":["\nxyz123ABC\n","\nz123ABC\n","\nxy123ABC\n","\n出错\n"],"correct_choice":"\n出错\n"},{"title":"关于void 指针，下列说法正确的是（ )","choices":["\nvoid 指针就是未指向任何数据的指针\n","\nvoid 指针就是已定义而未初始化的指针\n","\n指向任何类型数据的指针均可直接赋值给一个 void 指针\n","\nvoid 指针值可直接赋给一个非 void 指针\n"],"correct_choice":"\n指向任何类型数据的指针均可直接赋值给一个 void 指针\n"},{"title":"以下正确的说法是（        ），在C语言中。","choices":["\n实参和与其对应的形参各占用独立的存储单元\n","\n实参和与其对应的形参共占用一个存储单元\n","\n只有当实参和与其对应的形象同名时才共占用存储单元\n","\n形参是虚拟的，不占用存储单元\n"],"correct_choice":"\n实参和与其对应的形参各占用独立的存储单元\n"},{"title":"以下哪项可以用来释放p=malloc（）分配的内存：","choices":["\nfree(p)\n","\ndelete p\n","\ndelete []p\n","\nsizeof p\n"],"correct_choice":"\nfree(p)\n"},{"title":" C 语言中，下列运算符优先级最高的是    ()    ","choices":["\n！\n","\n％\n","\n>>\n","\n＝ ＝\n"],"correct_choice":"\n！\n"},{"title":"  下面程序的输出是： \n#define f(x) x*x\nmain (){\n  int a=6,b=2,c;\n  c=f(a)/f(b);\n  printf(\"%d\",c);\n}\n","choices":["\n3\n","\n18\n","\n36\n","\n9\n"],"correct_choice":"\n36\n"},{"title":"STL中的unordered_map和priority_queue使用的底层数据结构分别是什么?()","choices":["\nrbtree,queue\n","\nhashtable,heap\n","\nrbtree,heap\n","\nhashtable,queue\n"],"correct_choice":"\nhashtable,heap\n"},{"title":"类中的成员数据可以是另一个类的对象。","choices":["\n是\n","\n否\n"],"correct_choice":"\n是\n"},{"title":"以下不正确的定义语句是（ ）","choices":["\ndouble x[3] = {2.0, 4.0, 6.0, 8.0, 10.0};\n","\nchar c2[] = {'\\x10', '\\xa', '\\x8'};\n","\nchar c1[] = {'1','2','3','4','5'};\n","\nint y[5+3]={0, 1, 3, 5, 7, 9};\n"],"correct_choice":"\ndouble x[3] = {2.0, 4.0, 6.0, 8.0, 10.0};\n"},{"title":"  写出以下程序的运行结果（） \n\n     #include <stdio.h>  \n     #include <string.h>  \n  \n    \n  \n     void main()  \n     {  \n  int i;  \n  char str[10], temp[10]=\"Computer\";  \n  for (i = 0; i < 4; i++)  \n  {  \n  gets(str);  \n  if (strcmp(temp, str)<0) strcmp(temp, str);  \n  }  \n  puts(temp);  \n     }  \n  \n    \n  \n     当运行以下程序时，从键盘输入以下内容  \n  \n    \n  \n     GOOD  \n     TEACH  \n     SET  \n     ROOM  \n","choices":["\nSET\n","\nTEACH\n","\nROOM\n","\nComputer\n"],"correct_choice":"\nComputer\n"},{"title":"结构体变量S实际所占内存的大小为（ ）字节。","choices":["\nsizeof（S）\n","\nstrlen(S)\n","\n结构体中最长成员的长度\n","\n结构体汇总最短成员的长度\n"],"correct_choice":"\nsizeof（S）\n"},{"title":"  有以下程序 \n#include<stdio. h>\nint fun(char *s)\n{ \n    char *p=s;\n    while(*p !='\\0') p++;\n    return(p-s);\n}\nmain()\n{ \n    printf(\"%d\\n\",fun(\"goodbye!\"));\n}\n  程序的输出结果是? ","choices":["\n0\n","\n6\n","\n7\n","\n8\n"],"correct_choice":"\n8\n"},{"title":"  下面的C语言语句，哪一个可以把一个32位变量的最高位置为1且保持其它位不变？ ","choices":["\nreg32|=1<<31;\n","\nreg32&=1<<31;\n","\nreg32&=~(1<<31);\n","\nreg32^=1<<31;\n"],"correct_choice":"\nreg32|=1<<31;\n"},{"title":"下列代码编译时会产生错误的是（） \n  \n","choices":["\n语句1\n","\n语句2\n","\n语句3\n","\n语句4\n"],"correct_choice":"\n语句4\n"},{"title":"\n  不合法的main函数命令行参数表示形式是__________\n\n\n  \n","choices":["\nmain( int a, char *c[])\n","\nmain(int arc, char **arv)\n","\nmain(int argc, char *argv)\n","\nmain( int argv, char *argc[])\n"],"correct_choice":"\nmain(int argc, char *argv)\n"},{"title":"在下面的一维数组定义中，错误的定义格式为（     ）","choices":["\nint a[]={1,2,3}\n","\nint a[10]={0}\n","\nint a[]\n","\nint a[5]\n"],"correct_choice":"\nint a[]\n"},{"title":"  int  i=1,j=1,k=2;  if((j++||k++)&&  i++) printf(\"%d,%d,%d\\n\",i,j,k); 执行后输出结果是（）。  ","choices":["\n1,1,2\n","\n2,2,1\n","\n2,2,2\n","\n2,2,3\n"],"correct_choice":"\n2,2,2\n"},{"title":"  函数即可以嵌套定义,又可以嵌套调用。请问这句话的说法是正确的吗？ ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"对象引用作函数参数比用对象指针更方便些。","choices":["\n是\n","\n否\n"],"correct_choice":"\n是\n"},{"title":"  运算符的优先级正确排序是：    赋值运算符＜逻辑运算符＜关系运算符＜算术运算符。 ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"\n  若有定义语句：\n  int year=1009\n  ，\n  *p=&year\n  ；以下不能使变量\n  year\n  中的值增至 1010\n  的语句是\n","choices":["\n*p+=1;\n","\n(*p)++;\n","\n++(*p)\n","\n*p++\n"],"correct_choice":"\n*p++\n"},{"title":"int a[3];\n a[0] = 0; a[1] = 1; a[2] = 2;\n int *p, *q;\n p = a;\n q = &a[2];\n     则a[q - p] = ? ","choices":["\n0\n","\n1\n","\n2\n","\n未知\n"],"correct_choice":"\n2\n"},{"title":"全局变量是在所有函数外部的源代码内声明的变量，而局部变量是？","choices":["\n都是\n","\n在函数内部或代码块内部声明的变量\n","\n在函数主体代码的外部声明的变量\n"],"correct_choice":"\n在函数内部或代码块内部声明的变量\n"},{"title":"  有以下程序段 \nint * p;\np =   ______malloc(sizeof(int));\n  若要求使p指向一个int型的动态存储单元,在横线处应填入的是? ","choices":["\n( int * )\n","\nint\n","\nint *\n","\n( *int )\n"],"correct_choice":"\n( int * )\n"},{"title":"  下列程序的运行结果为: \n#include<iostream>\nusing namespace std;\nvoid main() {\n    int a = 2;\n    int b = ++a;\n    cout << a / 6 << endl;\n}\n\n","choices":["\n0.5\n","\n0\n","\n0.7\n","\n0.6666666－\n"],"correct_choice":"\n0\n"},{"title":"假设某C工程包含a.c和b.c两个文件,在a.c中定义了一个全局变量foo, 在b.c中想访问这一变量时该怎么做?","choices":["\n在b.c中同样定义同名的foo\n","\na.c中声明时extern int foo\n","\nb.c中声明时extern int foo\n","\n在一个工程中就可以访问到，不用做任何操作\n"],"correct_choice":"\nb.c中声明时extern int foo\n"},{"title":"在C语言中，以下代码执行之后，*p的值为（）\nvoid func(int *p)\n{\n\tstatic int num = 4;\n\tp = &num;\n\t(*p)--;\n}\nint main()\n{\n\tint i = 5;\n\tint *p = &i;\n\tfunc(p);\n\tprintf(\"%d\", *p);\n\treturn 0;\n}\n\n  \n","choices":["\n3\n","\n4\n","\n5\n","\n以上都不是\n"],"correct_choice":"\n5\n"},{"title":"  有以下程序 \n#include <stdio.h>\n#include <stdlib.h>\nvoid fun ( int *pl,int *p2,int *s )\n{\n    s ＝ (int*) malloc(sizeof(int));\n    *s ＝ *pl + *(p2++ );\n}\nmain( )\n{\n    int a [2] ＝ {l,2},b [2] ＝ ｛10,20｝,*s ＝ a;\n    fun (a,b,s); \n    printf ( \"%d \\n\", *s);\n}\n  程序运行后的输出结果是? ","choices":["\n11\n","\n10\n","\n1\n","\n2\n"],"correct_choice":"\n1\n"},{"title":"下述有关虚函数和纯虚函数说法错误的是？","choices":["\n被virtual关键字修饰的成员函数，就是虚函数\n","\n在基类中实现纯虚函数的方法是在函数原型后加“=0” virtual void funtion1()=0\n","\n同时含有纯虚拟函数的类称为抽象类，它可以被实例化，但是对象不可以调用纯虚函数\n","\n使用纯虚函数的意义是在很多情况下，基类本身生成对象是不合情理的\n"],"correct_choice":"\n同时含有纯虚拟函数的类称为抽象类，它可以被实例化，但是对象不可以调用纯虚函数\n"},{"title":"现有一个程序如下：\n＃include\nclass A\n{\npublic:\n    void f()\n    {\n        cout << “A::f()”;\n    }\n};\nclass B\n{\npublic:\n    void f()\n    {\ncout << “B: f()”;\n    }\n    void g()\n    {\ncout << “B: g()”;\n    }\n};\nclass C : public A, public B\n{\npublic:\n    void g()\n    {\n        cout << ”C::g()”;\n    }\n    void h()\n    {\n        cout << ”C::h()”;\n        f(); //语句1\n    }\n};\nvoid main()\n{\n    C obj;\n    obj.f(); 　　　//语句2\n    obj.A::f(); //语句3\n    obj.B::f(); //语句4\n    obj.g(); //语句5\n}\n\n\n  则编译时会产生错误的语句有","choices":["\n语句1\n","\n语句2\n","\n语句3\n","\n语句4\n","\n语句5\n"],"correct_choice":"\n语句1\n\n语句2\n"},{"title":"什么函数不能声明为虚函数？","choices":["\n静态成员函数\n","\n内联函数\n","\n构造函数\n","\n析构函数\n"],"correct_choice":"\n静态成员函数\n\n内联函数\n\n构造函数\n"},{"title":"  在关键字 private 后面定义的成员为类的（   ）成员。 ","choices":["\n私有\n","\n公用\n","\n保护\n","\n任何\n"],"correct_choice":"\n私有\n"},{"title":"  以下程序的输出结果是(   )？  main()\n{int i,j,k,a=3,b=2;\ni=(--a==b++)?--a:++b;\nj=a++;k=b;\nprintf(\"i=%d,j=%d,k=%d\\n\",i,j,k);\n} ","choices":["\ni=2,j=1,k=3\n","\ni=1,j=1,k=2\n","\ni=4,j=2,k=4\n","\ni=1,j=1,k=3\n"],"correct_choice":"\ni=1,j=1,k=3\n"},{"title":"  以下对二维数组 a 的正确说明是（）。       scanf(“%d”,&n);    int a[n]; ","choices":["\ninta[3][];\n","\nfloat a(3,4);\n","\ndouble a[1][4];\n","\nfloat a(3)(4);\n"],"correct_choice":"\ndouble a[1][4];\n"},{"title":"下列关于构造函数的描述中，错误的是（ ）","choices":["\n构造函数可以设置默认的参数\n","\n构造函数在定义类对象的自动执行\n","\n构造函数可以是内联函数\n","\n构造函数不可以重载\n"],"correct_choice":"\n构造函数不可以重载\n"},{"title":"  下面代码的输出结果是() \nint main(){\n   int pid;\n   int num=1;\n   pid=fork();\n   if(pid>0){\n   num++;\n   printf(\"in parent:num:%d addr:%x\\n\",num,&num);\n   }\n   else if(pid==0){\n   printf(\"in child:num:%d addr:%x\\n\",num,&num);\n   }\n}","choices":["\n父子进程中输出的num相同,num地址不相同\n","\n父子进程中输出的num不同,num地址相同\n","\n父子进程中输出的num相同,num地址也相同\n","\n父子进程中输出的num不同,num地址不相同\n"],"correct_choice":"\n父子进程中输出的num不同,num地址相同\n"},{"title":"以下代码的输出结果是?\n#define a 10 \n\nvoid foo();  \nmain(){ \n\n  printf(\"%d..\",a); \n   foo(); \n   printf(\"%d\",a); \n} \nvoid foo(){ \n   #undef a \n   #define a 50 \n}\n\n","choices":["\n10..10\n","\n10..50\n","\nError\n","\n0\n"],"correct_choice":"\n10..10\n"},{"title":"以下描述正确的是？","choices":["\n虚函数是可以内联的，可以减少函数调用的开销提高效率\n","\n类里面可以同时存在函数名和参数都一样的虚函数和静态函数\n","\n父类的析构函数是非虚的，但是子类的析构函数是虚的，delete子类对象指针会调用父类的析构函数\n","\n以上都不对\n"],"correct_choice":"\n父类的析构函数是非虚的，但是子类的析构函数是虚的，delete子类对象指针会调用父类的析构函数\n"},{"title":"在64位系统中，有如下类：\nclass A\n{\npublic:\n    void *p1;\nprivate:\n    void *p2;\nprotected:\n    void *p3;\n};\nclass B: public A {};\n\n  那么sizeof(B)的数值是（）","choices":["\n8\n","\n12\n","\n16\n","\n20\n","\n24\n"],"correct_choice":"\n24\n"},{"title":"函数 fun（char* p） { \n    return p;\n}\n  的返回值是","choices":["\n无确切值\n","\n形参p中存放的地址值\n","\n一个临时存储单元的地址\n","\n行参p自身的地址值\n"],"correct_choice":"\n形参p中存放的地址值\n"},{"title":"  test.c文件中包括如下语句：\n#define INT_PTR int*\ntypedef int* int_ptr;\nINT_PTR a,b;\nint_ptr c,d;\n  文件中定义的四个变量中，哪个变量类型不是指针类型？","choices":["\na\n","\nb\n","\nc\n","\nd\n","\n都是指针\n","\n都不是指针\n"],"correct_choice":"\nb\n"},{"title":"所谓数据封装就是将一组数据和与这组数据有关操作组装在一起，形成一个实体，这实体也就是（        ）","choices":["\n类\n","\n对象\n","\n函数体\n","\n数据块\n"],"correct_choice":"\n类\n"},{"title":"\n  若i=3,则cout<<-i++;输出的值为 -4.说法是否正确？ \n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"  在 C 语言中，一维数组的定义方式为： \n  元素类型 数组名[E]; \n  E 为（   ）。\n","choices":["\n常量表达式\n","\n整型表达式\n","\n整型常量或整型表达式\n","\n整型常量表达式\n"],"correct_choice":"\n整型常量表达式\n"},{"title":"若用一堆数组名作为调用函数时的实参，则传递给形参的是：（        ）","choices":["\n数组首元素的地址\n","\n数组首元素的值\n","\n数组元素的个数\n","\n数组中全部元素的值\n"],"correct_choice":"\n数组首元素的地址\n"},{"title":"下面有关友元函数与成员函数的区别，描述错误的是？","choices":["\n友元函数可以让本类和友元类对象调用\n","\n友元函数和类的成员函数都可以访问类的私有成员变量或者是成员函数\n","\n类的成员函数是属于类的，调用的时候是通过指针this调用的\n","\n友元函数是有关键字friend修饰，调用的时候也是通过指针this调用的\n"],"correct_choice":"\n友元函数是有关键字friend修饰，调用的时候也是通过指针this调用的\n"},{"title":"test.c文件中包括如下语句：\n#define INT_PTR int*\ntypedef int*int_ptr;\nINT_PTR a,b;\nint_ptr c,d;\n 文件中定义的四个变量，哪个变量不是指针类型？","choices":["\na\n","\nb\n","\nc\n","\nd\n","\n都是指针\n","\n都不是指针\n"],"correct_choice":"\nb\n"},{"title":"  设有定义语句：char c1=92,c2=92;,则以下表达式中值为零的是(   )。  ","choices":["\nc1^c2\n","\nc1&c2\n","\n~c2\n","\nc1|c2\n"],"correct_choice":"\nc1^c2\n"},{"title":"  若指针p已正确定义，要使p指向两个连续的整型动态存储单元，不正确的语句是（  ）。  ","choices":["\np=2*(int*)malloc(sizeof(int));\n","\np=(int*)malloc(2*sizeof(int));\n","\np=(int*)malloc(2*2);\n","\np=(int*)calloc(2,sizeof(int));\n"],"correct_choice":"\np=2*(int*)malloc(sizeof(int));\n"},{"title":"  有以下程序  #include <stdio.h>\nint funa( int a, intB)\n{ \n    return a+b;\n}\nint funb( int a, int b)\n{\n    return a-b;\n}\nint sss( int (*t)(int,int),int x, int y )\n{\n    return(*t)(x,y);\n}\nmain()\n{\n    int x：\n    x=sss( funa, 9,3 ); \n    x+=sss(funb,8,3);\n    printf(\"%d\\n\",x);\n}   程序运行后的输出结果是? ","choices":["\n24\n","\n23\n","\n17\n","\n22\n"],"correct_choice":"\n17\n"},{"title":"以下选项中合法的字符常量是（        ）","choices":["\n'ab'\n","\n'\\101'\n","\n\"A\"\n","\nPI\n"],"correct_choice":"\n'\\101'\n"},{"title":"  有以下程序   main()\n{  \nint m=12,n=34;\n   \nprintf(\"%d%d\",m++,++n);\n   \nprintf(\"%d%d\\n\",n++,++m);\n}   程序运行后的输出结果是(    )  。   ","choices":["\n12353514\n","\n12353513\n","\n12343514\n","\n12343513\n"],"correct_choice":"\n12353514\n"},{"title":"在使用标准 C 库时, 下面哪个选项使用只读模式打开文件?","choices":["\nfopen(\"foo.txt\", \"r\")\n","\nfopen(\"foo.txt\", \"r+\")\n","\nfopen(\"foo.txt\", \"w\")\n","\nfopen(\"foo.txt\", \"w+\")\n","\nfopen(\"foo.txt\", \"a\")\n"],"correct_choice":"\nfopen(\"foo.txt\", \"r\")\n"},{"title":"\n  有如下类的定义：\n\n\n  \n\n\n  在所描述的函数中，具有隐含this指针的是哪个（）\n","choices":["\nF1\n","\nF2\n","\nF3\n","\nF4\n"],"correct_choice":"\nF3\n"},{"title":"  下列关于new delete 与malloc free 的联系与区别描述正确的有? ","choices":["\n都是在栈上进行动态的内存操作\n","\n用malloc函数需要指定内存分配的字节数并且不能初始化对象，new 会自动调用对象的构造函数\n","\ndelete 会调用对象的destructor，而free 不会调用对象的destructor\n","\n以上说法都不正确\n"],"correct_choice":"\n用malloc函数需要指定内存分配的字节数并且不能初始化对象，new 会自动调用对象的构造函数\n\ndelete 会调用对象的destructor，而free 不会调用对象的destructor\n"},{"title":"若言int a[10],*p=a;则以下表示中不能代表a[6]的是（）。","choices":["\np[6]\n","\n*(a+6)\n","\n*(p+6)\n","\np+6\n"],"correct_choice":"\np+6\n"},{"title":"  执行下列语句后变量 x 和 y 的值是（）。    y=10;x=y++; ","choices":["\nx=10,y=10\n","\nx=11,y=11\n","\nx=10,y=11\n","\nx=11,y=10\n"],"correct_choice":"\nx=10,y=11\n"},{"title":"  若 a=3,b=2,c=1 则 关 系 表 达 式\"(a>b)==c\" 的值为\"真\"。请问这句话的说法是正确的吗？  ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"  以下程序的输出结果是 \nint a, b;\nvoid fun()\n{\n    a = 100;\n    b = 200;\n}\nmain()\n{\n    int a = 5, b = 7;\n    fun();\n    printf(“ % d % d / n”, a, b);\n}\n\n","choices":["\n100200\n","\n57\n","\n200100\n","\n75\n"],"correct_choice":"\n57\n"},{"title":"如下函数，在32bits系统foo（2^31-3）的值是_______(这里的^是指数的意思)\nint foo (int x)\n   return x & -x","choices":["\n0\n","\n1\n","\n2\n","\n4\n"],"correct_choice":"\n1\n"},{"title":"以下一维整型数组 a 的声明正确的是（）","choices":["\nint a(10);\n","\nint n = 10, a[n];\n","\nint n;\nscanf(\"%d\", &n);\nint a[n];\n","\n#define N 10\nint a[N];\n"],"correct_choice":"\n#define N 10\nint a[N];\n"},{"title":"  经 过 以 下 语 句 定 义 后 , 表 达 式z+=x>y?++x:++y 的值为（）？     int x=1,y=2,z=3;     ","choices":["\n2\n","\n3\n","\n6\n","\n5\n"],"correct_choice":"\n6\n"},{"title":"\n   C语言中的文件包含是不可以嵌套的 \n","choices":["\nTURE\n","\nFAULT\n"],"correct_choice":"\nFAULT\n"},{"title":"\n  请在程序的下画线处填入正确的内容并将下画线删除，使程序得出正确的结果。该程序的功能是将形参n所指变量中，各位上为奇数的数去掉，剩余的数按原来从低位到高位的顺序组成一个新数。 \nunsigned long fun(unsigned long n)\n{\n    unsigned long x = 0; int t;\n    while (n)\n    {\n        t = n % 10;\n        /********** found **********/\n        if (t % 2 == _______)\n            /********** found **********/\n            x = _____ + t;\n        /********** found **********/\n        n = _______;\n     }\n     return x;\n}\n\n","choices":["\n0    x*10  n/10\n","\n1    x*10  n%10\n","\n1    t*10  n/10\n","\n0    t*10  n%10\n"],"correct_choice":"\n0    x*10  n/10\n"},{"title":"嵌入式系统中经常要用到无限循环，怎么用C编写死循环?","choices":["\nwhile(){}\n","\nwhile(1){}\n","\nfor(){}\n","\nfor(;;){}\n"],"correct_choice":"\nwhile(1){}\n\nfor(;;){}\n"},{"title":"假定\nTT\n为一个类，则该类的拷贝构造函数的声明语句为（\n）。","choices":["\nTT (TT x)\n","\nTT& (TT x)\n","\nTT (TT &x)\n","\nTT (TT *x)\n"],"correct_choice":"\nTT (TT &x)\n"},{"title":"  以下程序的运行结果为（） \n\n     #include <string.h>  \n     #include <stdio.h>  \n  \n    \n  \n     void main()  \n     {  \n  char a[10] = \"abcd\";  \n  printf(\"%d, %d\\n\", strlen(a), sizeof(a));  \n     }  \n","choices":["\n4, 4\n","\n4, 10\n","\n10, 4\n","\n10, 10\n"],"correct_choice":"\n4, 10\n"},{"title":"如果程序中未声明构造函数，则系统自动产生出一个默认形式的无参构造函数。","choices":["\n是\n","\n否\n"],"correct_choice":"\n是\n"},{"title":"  参加位运算的数据可以是任何类型的数据。请问这句话的说法是正确的吗？  ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"假设A为抽象类，下列声明（ ）是正确的。","choices":["\nint fun(A);\n","\nA Obj;\n","\nA fun(int);\n","\nA *p;\n"],"correct_choice":"\nA *p;\n"},{"title":"具有相同类型的指针类型变量p与数组a,不能进行的操作是:","choices":["\np=a;\n","\n*p=a[0];\n","\np=&a[0];\n","\np=&a;\n"],"correct_choice":"\np=&a;\n"},{"title":"\n  有以下程序\n\n\n  #include  <stdio.h> \n\n\n  main() \n\n\n  {\n\n\n   char  c1='A', c2='Y'; \n\n\n   printf( \"%d, %d\\n\", c1,c2 );\n\n\n  }\n\n\n  则程序的输出结果是（）\n","choices":["\n输出格式不合法，输出出错信息\n","\n65,89\n","\n65,90\n","\nA,Y\n"],"correct_choice":"\n65,89\n"},{"title":"  设变量 a 是整型，f 是实型，i 是双精度型，则表达式10+'a'+i*f 值的数据类型为（）。  ","choices":["\nint\n","\nfloat\n","\ndouble\n","\n不确定\n"],"correct_choice":"\ndouble\n"},{"title":"如下一段神奇的代码实现的功能是什么？\nint miracle(unsigned int n)\n{  \n    int m= n==0 ? 0:1;\n    while (n=(n&(n-1)))\n    {\n\tm++;\n    }\n    return m;\n}\n\n","choices":["\nn的二进制表示中“0”的个数\n","\nn的二进制表示的倒序值\n","\nn的二进制表示中“1”的个数\n","\n一个均匀的哈希函数\n"],"correct_choice":"\nn的二进制表示中“1”的个数\n"},{"title":"一张1024×640分辨率的图片，假定每个像素用16位色彩表示，用位图文件（bitmap）格式存储，则这张图片文件需要占用多大的存储空间____。","choices":["\n40KB\n","\n640KB\n","\n1280KB\n","\n2560KB\n","\n5120KB\n","\n10240KB\n"],"correct_choice":"\n1280KB\n"},{"title":"  下列程序的输出结果是 \n#include<iostream>\nusing namespace std;\n\nint main()\n{\n    int a[] = {2, 4, 6, 8, 10}, *p, **k;\n    p = a;\n    k = &p;\n    printf(\" % d\", *(p++));\n    printf(\" % d\\n\", **k);   \n    return 0;\n}\n\n","choices":["\n4 4\n","\n2 4\n","\n2 2\n","\n4 6\n"],"correct_choice":"\n2 4\n"},{"title":"  （1）若有以下程序 \n#include<stdio.h>\nmain()\n{ \n    int s=0,n;\n\tfor(n=0; n<4; n++)\n\t{ \n\t\tswitch(n)\n\t\t{ \n\t\t   default:s+=4;\n\t\t   case 1:s+=1;\n\t\t   case 2:s+=2;\n\t\t   case 3:s+=3;\n\t\t}\n\t}\n\tprintf (\"%d\\n\",s);\n}\n  则程序的输出结果是? ","choices":["\n6\n","\n18\n","\n10\n","\n24\n"],"correct_choice":"\n24\n"},{"title":"引用标准库，下面的说法哪些是正确的？","choices":["\n语句#include \"stdio. h\" 是正确的，而且程序编译的速度比#include<stdio. h>要快\n","\n语句#include <stdio. h>是正确的，而且程序编译的速度比#include\"stdio. h\"要快\n","\n语句#include \"stdio. h\"和#include <stdio. h>都是正确的，程序编译速度没有区别\n","\n语句#include \"stdio. h\"是错误的\n"],"correct_choice":"\n语句#include <stdio. h>是正确的，而且程序编译的速度比#include\"stdio. h\"要快\n"},{"title":"  下列代码的输出为： \n#include<iostream>\n#include<vector>\nusing namespace std;\n\nint main(void)\n{\n    vector<int>array;\n    array.push_back(100);\n    array.push_back(300);\n    array.push_back(300);\n    array.push_back(500);\n    vector<int>::iterator itor;\n    for (itor = array.begin(); itor != array.end(); itor++)\n    {\n        if (*itor == 300)\n        {\n            itor = array.erase(itor);\n        }\n    }\n    for (itor = array.begin(); itor != array.end(); itor++)\n    {\n        cout << *itor << \" \";\n    }\n    return 0;\n}\n","choices":["\n100 300 300 500\n","\n100 300 500\n","\n100 500\n","\n程序错误\n"],"correct_choice":"\n100 300 500\n"},{"title":"关于static变量，请选择下面所有说法正确的内容。","choices":["\n若全局变量仅在单个C文件中访问，则可以将这个变量修改为静态全局变量，以降低模块间的耦合度\n","\n若全局变量仅由单个函数访问，则可以将这个变量改为该函数的静态局部变量，以降低模块间的耦合度\n","\n设计和使用访问动态全局变量、静态全局变量、静态局部变量的函数时，需要考虑重入问题\n","\n静态全局变量过大，可那会导致堆栈溢出\n"],"correct_choice":"\n若全局变量仅在单个C文件中访问，则可以将这个变量修改为静态全局变量，以降低模块间的耦合度\n\n若全局变量仅由单个函数访问，则可以将这个变量改为该函数的静态局部变量，以降低模块间的耦合度\n\n设计和使用访问动态全局变量、静态全局变量、静态局部变量的函数时，需要考虑重入问题\n"},{"title":"以下正确的叙述有（）","choices":["\n在 C 程序中，每行只能写一条语句\n","\n在 C 程序中，一条语句只写在一行上\n","\n在 C 程序中，多条语句必须写在多行上\n","\n在 C 程序中，多条语句可以写在一行上\n"],"correct_choice":"\n在 C 程序中，多条语句可以写在一行上\n"},{"title":"  若二维数组 a 有 m 列，则在 a[i][j] 前面的元素个数为 B  。     scanf(“%d”,&n);    int a[n]; ","choices":["\nj*m+i\n","\ni*m+j\n","\ni*m+j-1\n","\ni*m+j+1\n"],"correct_choice":"\ni*m+j\n"},{"title":"\n  在下列表示引用的方法中，（ ）是正确的。\n\n\n   已知：int m=10;\n","choices":["\nint &x=m\n","\nint &y=10\n","\n.int &z;\n","\nfloat &t=&m;\n"],"correct_choice":"\nint &x=m\n"},{"title":"有关类的说法不正确的是（        ）","choices":["\n类是一种用户自定义的数据类型\n","\n类中的成员函数可以存取类中的私有数据\n","\n在类中，如果不作特别说明，所有的数据均为私有类型\n","\n在类中，如果不作特别说明，所有的成员函数均为公有类型\n"],"correct_choice":"\n在类中，如果不作特别说明，所有的成员函数均为公有类型\n"},{"title":"  在软件生命周期中，（）阶段负责“写出正确、易懂，容易维护的程序模块”。 ","choices":["\n详细设计\n","\n编码和单元测试\n","\n确认测试\n","\n总体设计\n"],"correct_choice":"\n编码和单元测试\n"},{"title":"  下列程序的功能是将实型数据x的整数部分取出存于i中，小数部分取出存于f中，请为横线处选择合适的程序（） \n\n  \n  \n","choices":["\n*f=*（x-i）\n","\n*f=x-*i\n","\n*f=x-i\n","\nf=x-*i\n"],"correct_choice":"\n*f=x-*i\n"},{"title":"写出下面代码的运行结果是（）\nclass AA {\npublic:\n\tint a;\n\tstatic int b;\n\tAA()\n\t{\n\t\ta = 1;\n\t\tadd2();\n\t}\n\tint add1()\n\t{\n\t\ta = a + 1;\n\t\treturn a;\n\t}\n\tint add2()\n\t{\n\t\tb = b + 1;\n\t\treturn b;\n\t}\n};\n\nint AA::b = 1;\nint main()\n{\n\t\n\tAA a1;\n\ta1.add1();\n\ta1.add2();\n\tassert(a1.a<a1.b);\n\tprintf(\"%d,%d\", a1.a, a1.b);\n\treturn 0;\n}\n","choices":["\n2，3\n","\n2，2\n","\n2，1\n","\n断言错误\n"],"correct_choice":"\n2，3\n"},{"title":"  以 下 程 序 段 的 输 出 结 果 是 （）。    int a=21,b=11;printf(\"%d\\n\",--a+b,--b+a);  ","choices":["\n30\n","\n31\n","\n32\n","\n33\n"],"correct_choice":"\n30\n"},{"title":"  C 语言是一种结构化程序设计语言。请问这句话的说法是正确的吗？ ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"已知：类A中一个成员函数说明如下：void Set(A &a);其中，A &a的含意是","choices":["\n指向类A的指针为a;\n","\n将a的地址值赋给变量Set；\n","\na是类A的对象引用，用来作函数Set（）的形参；\n","\n变量A与a按位相与作为函数Set（）的参数。\n"],"correct_choice":"\na是类A的对象引用，用来作函数Set（）的形参；\n"},{"title":"  以下程序的功能是（）？        ","choices":["\n计算文件的起始地址\n","\n计算文件的终止地址\n","\n将文件指针定位到文件末尾\n","\n计算文件内容的字节数\n"],"correct_choice":"\n计算文件内容的字节数\n"},{"title":"  设x和y均为bool量，则x&&y为真的条件是（        ） ","choices":["\n它们均为真\n","\n其中一个为真\n","\n它们均为假\n","\n其中一个为假\n"],"correct_choice":"\n它们均为真\n"},{"title":"\n  在如下结构定义中，不正确的是（ ）。\n\n\n  \n","choices":["\nstruct student \n　　　{int no; \n　　　　char name[10];\n　　　　float score;\n　　　};\n","\nstruct stud[20]\n　　　{\n　　　　int no;\n　　　　char name[10];\n　　　　float score;\n　　　};\n","\nstruct student\n　　　{ \n　　　　int no; \n　　　　char name[10];\n　　　　float score;\n　　　} stud[20]；\n","\nstruct\n　　　{\n　　　　int no;\n　　　　char name[10];\n　　　　float score;\n　　　}stud[100] ;\n"],"correct_choice":"\nstruct stud[20]\n　　　{\n　　　　int no;\n　　　　char name[10];\n　　　　float score;\n　　　};\n"},{"title":"在int b[ ][3] = {{1},{3,2},{4,5,6},{0}};中，sizeof(b) = ？","choices":["\n4\n","\n12\n","\n28\n","\n48\n"],"correct_choice":"\n48\n"},{"title":"静态数据成员必须在类外定义和初始化。","choices":["\n是\n","\n否\n"],"correct_choice":"\n是\n"},{"title":"  若有宏定义：#define S(a,b) t=a;a=b;b=t由于变量 t 没定义，所以此宏定义是错误的。请问这句话的说法是正确的吗？      ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"  下面叙述错误的是（ ）  char acX[]=\"abc\";\nchar acY[]={'a','b','c'};\nchar *szX=\"abc\";\nchar *szY=\"abc\"; ","choices":["\nacX与acY的内容可以修改\n","\nszX与szY指向相同的地址\n","\nacX占用的内存空间比acY占用的大\n","\nszX的内容修改后，szY的内容也会被更改\n"],"correct_choice":"\nszX的内容修改后，szY的内容也会被更改\n"},{"title":"下面关于多态性的描述，错误的是：","choices":["\nC++语言的多态性分为编译时的多态性和运行时的多态性\n","\n编译时的多态性可通过函数重载实现\n","\n运行时的多态性可通过模板和虚函数实现\n","\n实现运行时多态性的机制称为动态绑定\n"],"correct_choice":"\n运行时的多态性可通过模板和虚函数实现\n"},{"title":"重复多次 fclose 一个打开过一次的 FILE *fp 指针会有什么结果？","choices":["\n导致文件描述符结构中指针指向的内存被重复释放，进而导致一些不可预期的异常\n","\n不会出现异常，释放一个已经释放的指针，系统会自动忽略\n","\n无法运行\n","\n以上答案都不正确\n"],"correct_choice":"\n导致文件描述符结构中指针指向的内存被重复释放，进而导致一些不可预期的异常\n"},{"title":"  下述程序的输出是______。 \n\n  #include<stdio.h>\n\nint main()\n{\n    static char *s[] = {\"black\", \"white\", \"pink\", \"violet\"};\n    char **ptr[] = {s+3, s+2, s+1, s}, ***p;\n    p = ptr;\n    ++p;\n    printf(\"%s\", **p+1);\n    return 0;\n}\n\n  \n","choices":["\nink\n","\npink\n","\nwhite\n","\nhite\n"],"correct_choice":"\nink\n"},{"title":"  以下程序输出结果是____ \nclass A\n{\n  public:\n    A ():m_iVal(0){test();}\n    virtual void func() { std::cout<<m_iVal<<‘ ’;}\n    void test(){func();}\n  public:\n      int m_iVal;\n};\nclass B : public A\n{\n  public:\n    B(){test();}\n    virtual void func()\n    {\n      ++m_iVal;\n      std::cout<<m_iVal<<‘ ’;\n      }\n};\nint main(int argc ,char* argv[])\n{\n  A*p = new B;\n  p->test();\n  return 0;\n}","choices":["\n1 0\n","\n0 1\n","\n0 1 2\n","\n2 1 0\n","\n不可预期\n","\n以上都不对\n"],"correct_choice":"\n0 1 2\n"},{"title":"  以下不正确的C语言标识符是（ ）。     ","choices":["\nABC\n","\nabc\n","\na_bc\n","\nab.c\n"],"correct_choice":"\nab.c\n"},{"title":"枚举类型中的每个枚举常量的值都是一个（   ）。 ","choices":["\n整数\n","\n浮点数\n","\n字符\n","\n记录\n"],"correct_choice":"\n整数\n"},{"title":"抽象类是指一些没有说明对象的类。","choices":["\n是\n","\n否\n"],"correct_choice":"\n否\n"},{"title":"  以下程序的输出结果为（）。    main()    {int i=010,j=10;    printf(\"%d,%d\\n\",++i,j--);    } ","choices":["\n11,10\n","\n9,10\n","\n010,9\n","\n10,9\n"],"correct_choice":"\n9,10\n"},{"title":"  若有语句 \n\n     char s1[10], s2[10] = {\"books\"};  \n  \n    \n  \n     则能将字符串 books 存放到数组 s1 的正确语句是（）  \n","choices":["\nstrcpy(s1, s2);\n","\ns1 = {\"books\"};\n","\ns1 = s2;\n","\nstrcpy(s2, s1);\n"],"correct_choice":"\nstrcpy(s1, s2);\n"},{"title":"  以下程序段中,不能正确赋字符串(编译时系统会提示错误)的是（）。  ","choices":["\nchar s[10]=\"abcdefg\";\n","\nchar t[]=\"abcdefg\",*s=t;\n","\nchar s[10];s=\"abcdefg\";\n","\nchar s[10];strcpy(s,\"abcdefg\");\n"],"correct_choice":"\nchar s[10];s=\"abcdefg\";\n"},{"title":"\n  若k是int型变量，且有下面的程序段：\n\n\n  \n\n\n  上面程序段的输出结果是（）\n","choices":["\n&&&&\n","\n####&&&&\n","\n有语法错误，无输出结果\n","\n####\n"],"correct_choice":"\n####\n"},{"title":"在32位机器中，如下代码： void example(char acWelcome[]){\n    printf(\"%d\",sizeof(acWelcome));\n    return;\n}\nvoid main(){\n    char acWelcome[]=\"Welcome to Huawei Test\";\n    example(acWelcome);\n    return;\n}\n  的输出是?","choices":["\n0\n","\n4\n","\n23\n","\n24\n"],"correct_choice":"\n4\n"},{"title":"下面描述中，正确的是","choices":["\n虚函数是没有实现的函数\n","\n纯虚函数的实现是在派生类中\n","\n抽象类是没有纯虚函数的类\n","\n抽象类指针可以指向不同的派生类\n"],"correct_choice":"\n纯虚函数的实现是在派生类中\n\n抽象类指针可以指向不同的派生类\n"},{"title":"  在C++里，堆中存储的数据是（）？  ","choices":["\n局部变量\n","\n函数返回值\n","\n函数参数\n","\nnew和malloc申请的内存\n"],"correct_choice":"\nnew和malloc申请的内存\n"},{"title":"  程序最后输出什么？（    ）    #define Mul(x,y) ++x*++y\n \nvoid main()\n{\nint a = 1;\nint b = 2;\nint c = 3;\n \nprintf(“%d”,Mul(a+b,b+c));\n} ","choices":["\n14\n","\n24\n","\n48\n","\n18\n"],"correct_choice":"\n14\n"},{"title":"\n  定义符号常量pi.const float pi= 3.1415926f; 这句话是否正确\n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"二进制数01011011转化为十进制为（）。","choices":["\n103\n","\n91\n","\n171\n","\n71\n"],"correct_choice":"\n91\n"},{"title":"考虑函数原型void hello(int a,int b=7,char* pszC=\"*\"),下面的函数调用中,属于不合法调用的是","choices":["\nhello(5)\n","\nhello(5,8)\n","\nhello(6,\"#\")\n","\nhello(0,0,\"#\")\n"],"correct_choice":"\nhello(6,\"#\")\n"},{"title":"  有以下程序 \n#include <stdio.h>\nmain(){ \n    int k, j, s;\n    for(k=2;k<6;k + + ,k + +){ \n        s = 1;\n        for(j=k;j<6;j + + ) \n            s + =j;\n    }\n    printf(\"％d\\n\",s);\n}\n  程序运行后的输出结果是? ","choices":["\n6\n","\n10\n","\n24\n","\n40\n"],"correct_choice":"\n10\n"},{"title":"  以下程序统计给定输入中每个大写字母的出现次数(不需要检查输入合法性) \nvoid AlphabetCounting(char a[],int n){\n  int count[26]={},i,kind=0;\n  for(i=0;i<n;++i) (1);\n  for(i=0;i<26;++i){\n    if(++kind>1) putchar(';');\n    printf(\"%c=%d\",(2));\n   }\n}\n  以下能补全程序，正确功能的选项是() ","choices":["\n++count[a[i]-'Z'];'Z'-i,count['Z'-i]\n","\n++count['A'-a[i]];'A'+i,count[i]\n","\n++count[i];i,count[i]\n","\n++count['Z'-a[i]];'Z'-i,count[i]\n","\n++count[a[i]];'A'+i,count[a[i]]\n"],"correct_choice":"\n++count['Z'-a[i]];'Z'-i,count[i]\n"},{"title":"\n  下列运算符函数中，肯定不属于\n  Value\n  的成员函数的是（）\n","choices":["\nValue operator-(Value, Value)\n","\nValue operator+(Value)\n","\nValue operator*(int)\n","\nValue operator/(Value)\n"],"correct_choice":"\nValue operator-(Value, Value)\n"},{"title":"  int main(int argc\n  ,char** argv) \n  { \nint n = 9, i; \nfor (i = 1; i<argc;\n  i++) \nn = n * 10 + *argv[i]\n  - '0'; \nprintf(\"%d\\n\",\n  n); \nreturn 0; \n  } \n\n  经编译连接生成的可执行文件\n  tt.exe\n  。若执行输入以下命令行\n  tt 12 345 678\n  ，则程序运行的输出结果是（）\n","choices":["\n9136\n","\n12345\n","\n12345678\n","\n12\n"],"correct_choice":"\n9136\n"},{"title":"void swap_int(int *a,int *b){\n  *a=*a+*b;\n  *b=*a-*b;\n  *a=*a-*b;\n}\n  以下说法正确的是： ","choices":["\n结果不正确，因为会溢出，用位与的方式就没问题\n","\n结果正确，即使会溢出\n","\n结果正确，不会溢出\n","\n其他选项都不对\n"],"correct_choice":"\n结果正确，即使会溢出\n"},{"title":"字符串\"Hello\"会被输出几次?\nint main() {\n printf(\"Hello\");\n fork();\n printf(\"Hello\");\n}\n","choices":["\n2\n","\n3\n","\n4\n","\n6\n"],"correct_choice":"\n4\n"},{"title":"若已定义：int a[4][3]={1,2,3,4,5,6,7,8,9,10,11,12},(*prt)[3]=a,*p=a[0];则能够正确表示数组元素a[1][2]的表达式是（        ）","choices":["\n*((*prt+1)[2])\n","\n*(*p+5))\n","\n(*prt+1)+2\n","\n*(*(a+1)+2)\n"],"correct_choice":"\n*(*(a+1)+2)\n"},{"title":"\n  数组a的定义语句为“float a[3][4];”,下列（）是对数组元素不正确的引用方法。\n","choices":["\na[i][j]\n","\n*(a[i]+j)\n","\n*(*(a+i)+j)\n","\n*(a+i*4+j)\n"],"correct_choice":"\n*(a+i*4+j)\n"},{"title":"  对以下数据结构中data的处理方式描述正确的是() \nstruct Node\n{\n   int size;\n   char data[0];\n};","choices":["\ndata将会被编译成一个char *类型指针\n","\n全部描述都不正确\n","\n编译器会认为这就是一个长度为0的数组,而且会支持对于数组data的越界访问\n","\n编译器会默认将数组data的长度设置为1\n"],"correct_choice":"\n编译器会认为这就是一个长度为0的数组,而且会支持对于数组data的越界访问\n"},{"title":"  函数调用可以出现在执行语句中,但不能出现在表达式中。请问这句话的说法是正确的吗？  ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"对于任意一个类，析构函数的个数最多为（        ）","choices":["\n0\n","\n1\n","\n2\n","\n3\n"],"correct_choice":"\n1\n"},{"title":"\n  设有数组定义int a[][4]={0,0};则数组的行数为1 \n","choices":["\nTURE\n","\nFAULT\n"],"correct_choice":"\nTURE\n"},{"title":"文件包含命令中被包含的文件的扩展名（    ）。\n","choices":["\n必须是.h\n","\n不能是.h\n","\n可以是.h或.cpp\n","\n必须是.cpp\n"],"correct_choice":"\n可以是.h或.cpp\n"},{"title":"\n  (3,2,1,0)\n  可作为C++合法表达式是否正确\n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"  为了避免在嵌套的条件语句if――else中产生二义性，c语言规定：else子句总是与（ ）配对。  ","choices":["\n缩排位置相同的if\n","\n与之前最近的未与else配对的if配对\n","\n其之后最近的if\n","\n同一行上的if\n"],"correct_choice":"\n与之前最近的未与else配对的if配对\n"},{"title":"\n  若使用一维数组名作函数实参,则\n  必须在主调函数中说明此数组的大小说法正确？\n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"在小端序的机器中,如果 \nunion X{\n\tint x;\n\tchar y[4]; \n};\n  如果:\n  X a;\n  a.x=0x11223344;//16 进制 则:______","choices":["\na.y[0]=0x11\n","\na.y[1]=0x11\n","\na.y[2]=0x11\n","\na.y[3]=0x11\n","\na.y[0]=0x22\n","\na.y[3]=0x22\n"],"correct_choice":"\na.y[3]=0x11\n"},{"title":"由多个源文件组成的C程序，经过编辑、预处理、编译，链接等阶段会生成最终的可执行程序。下面哪个阶段可以发现被调用的函数未定义？","choices":["\n预处理\n","\n编译\n","\n链接\n","\n执行\n"],"correct_choice":"\n链接\n"},{"title":"  执行以下语句，输出结果为（） \nchar *p1=\"hello\";\nchar *p2=\"world\";\nchar *p3=\"a piece of cake\";\nchar *str[]={p1,p2,p3};\nprintf(\"%c\",*(str[0]+1));","choices":["\nworld\n","\nhello\n","\n编译时错误\n","\n其他选项都不正确\n"],"correct_choice":"\n其他选项都不正确\n"},{"title":"关于操作系统heap与stack说法中，正确的是（）。","choices":["\nstack由编译器自动分配和释放,存放函数的参数值，局部变量，全局变量的值\n","\nheap一般由程序员分配和释放，若程序员不释放，可能会造成操作系统的内存泄露\n","\nstack由系统自动分配，无需程序员干涉，heap需要手动申请\n","\nheap与stack都会在初始大小空间用满时，系统自动增加其大小\n"],"correct_choice":"\nheap一般由程序员分配和释放，若程序员不释放，可能会造成操作系统的内存泄露\n\nstack由系统自动分配，无需程序员干涉，heap需要手动申请\n"},{"title":"下列关于数组与指针的区别描述正确的是？","choices":["\n数组要么在静态存储区被创建（如全局数组），要么在栈上被创建。\n","\n用运算符sizeof 可以计算出数组的容量（字节数）\n","\n指针可以随时指向任意类型的内存块。\n","\n用运算符sizeof 可以计算出指针所指向内容的容量（字节数）\n"],"correct_choice":"\n用运算符sizeof 可以计算出数组的容量（字节数）\n"},{"title":"假定 AB 为一个类，r2 为一个AB类的对象，则执行 “AB r1=r2;”语句时将自动调用该类的(    )。","choices":["\n无参构造函数\n","\n带参构造函数\n","\n赋值重载运算\n","\n拷贝构造函数\n"],"correct_choice":"\n拷贝构造函数\n"},{"title":"在C++中，函数名实际上是一个指针，它指向函数的入口。","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"  以下程序的运行结果为（） \n\n     #include <stdio.h>  \n  \n    \n  \n     void main()  \n     {  \n     char s[] = {\"012xy\"};  \n     int i, n = 0;  \n     for (i = 0; s[i]; i++) if (s[i] >= 'a' &&     s[i]\n    <= 'z') n++;  \n     printf(\"%d\\n\", n);  \n     }  \n\n\n  \n","choices":["\n0\n","\n2\n","\n3\n","\n5\n"],"correct_choice":"\n2\n"},{"title":"下列运算符中，（\n）运算符在\nC++\n中不能被重载。","choices":["\n&&\n","\n[]\n","\n::\n","\nnew\n"],"correct_choice":"\n::\n"},{"title":" 以下标识符中不全是保留字的是（    ）。\n","choices":["\ncase    for    int\n","\ndefault  then   while\n","\nbool    class   long\n","\ngoto   return  char\n"],"correct_choice":"\ndefault  then   while\n"},{"title":"\n  设有如下定义:struct jan{int a;float b;}c2,*p;若有p=&c2;则对c2中的成员a的正确引用是:（ ）\n  \n","choices":["\n(*p).c2.a\n","\n(*p).a\n","\np->c2.a\n","\np.c2.a\n"],"correct_choice":"\n(*p).a\n"},{"title":"在多文件结构的程序中，通常把类的定义单独存放于（   ）中。","choices":["\n源文件\n","\n主文件\n","\n库文件\n","\n头文件\n"],"correct_choice":"\n头文件\n"},{"title":"What is output if you compile and execute the following c code? void main() \n{ \n    int i = 11; \n    int const *p = &i; \n    p++; \n    printf(\"%d\",*p); \n} ","choices":["\n11\n","\n12\n","\nGarbage value\n","\nCompile error\n","\nNone of above\n"],"correct_choice":"\nGarbage value\n"},{"title":"1<<3+2的值是（）。","choices":["\n32\n","\n10\n","\n16\n","\n6\n"],"correct_choice":"\n32\n"},{"title":"对于派生类的构造函数，在定义对象时构造函数的执行顺序为？\n 1：成员对象的构造函数\n 2：基类的构造函数\n 3：派生类本身的构造函数","choices":["\n123\n","\n231\n","\n321\n","\n213\n"],"correct_choice":"\n213\n"},{"title":"面向对象的三个基本元素是什么？","choices":["\n封装\n","\n继承\n","\n重载\n","\n多态\n"],"correct_choice":"\n封装\n\n继承\n\n多态\n"},{"title":"  在C++语言中, %运算符要求运算数必须是整型。是否正确？ .      ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"  若定义：int a=511,*b=&a;, 则printf(\"%d\\n\",*b);的输出结果为（  ）。  ","choices":["\n无确定值\n","\na的地址\n","\n512\n","\n511\n"],"correct_choice":"\n511\n"},{"title":"  下列数据中,不合法的 C 语言实型数据的是（）。  ","choices":["\n0.123\n","\n123e3\n","\n2.1e3.5\n","\n789.0\n"],"correct_choice":"\n2.1e3.5\n"},{"title":"在公有继承中,基类中只有公有成员对派生对象是可见的。","choices":["\n是\n","\n否\n"],"correct_choice":"\n是\n"},{"title":"  如下程序的输出结果是 \n#include<iostream>\nusing namespace std;\n\nlong fun(int n)\n{\n    if (n > 2) \n        return (fun(n - 1) + fun(n - 2));\n    else \n        return (n);\n}\nint main()\n{\n    int i;\n    cout << \"Needs an integer: \";\n    cin >> i; cout << endl;\n    cout << fun(i) << endl;\n}\n\n  当分别输入4 2时，输出结果分别是？ ","choices":["\n5，1\n","\n4，2\n","\n5，2\n","\n6，2\n"],"correct_choice":"\n5，2\n"},{"title":"\n  在\n  c++\n  语言中，对函数参数默认值描述正确的是（）\n","choices":["\n函数参数的默认值只能设定一个\n","\n一个函数的参数若有多个，则参数默认值的设定可以不连续\n","\n函数参数必须设定默认值\n","\n在设定了参数的默认值后，该参数后面定义的所有参数都必须设定默认值\n"],"correct_choice":"\n在设定了参数的默认值后，该参数后面定义的所有参数都必须设定默认值\n"},{"title":"以下有关C语言的说法中，错误的是________。","choices":["\n内存泄露一般是指程序申请了一块内存，使用完后，没有及时将这块内存释放，从而导致程序占用大量内存。\n","\n可以通过malloc(size_t)函数调用申请超过该机器物理内存大小的内存块。\n","\n无法通过内存释放函数free(void*)直接将某块已经使用完的物理内存直接还给操作系统。\n","\n可以通过内存分配函数malloc(size_t)直接申请物理内存。\n"],"correct_choice":"\n可以通过内存分配函数malloc(size_t)直接申请物理内存。\n"},{"title":"以下选项中非法的C语言字符常量是？","choices":["\n'\\007'\n","\n'\\b'\n","\n'a'\n","\n\"\\09\"\n"],"correct_choice":"\n\"\\09\"\n"},{"title":"冯诺依曼体系的五部分是什么?","choices":["\n控制器，运算器\n","\n存储器\n","\n输入设备，输出设备\n","\nIO总线\n"],"correct_choice":"\n控制器，运算器\n\n存储器\n\n输入设备，输出设备\n"},{"title":"将“引用”作为函数参数有哪些特点？","choices":["\n引用传递和指针传递没有差别\n","\n传递引用给函数与传递指针的效果是一样的\n","\n使用引用传递函数的参数，在内存中并没有产生实参的副本，它是直接对实参操作；而使用一般变量传递函数的参数，当发生函数调用时，需要给形参分配存储单元，形参变量是实参变量的副本；\n","\n指针传递下，在主调函数的调用点处，必须用变量的地址作为实参。而引用更容易使用，更清晰。\n"],"correct_choice":"\n传递引用给函数与传递指针的效果是一样的\n\n使用引用传递函数的参数，在内存中并没有产生实参的副本，它是直接对实参操作；而使用一般变量传递函数的参数，当发生函数调用时，需要给形参分配存储单元，形参变量是实参变量的副本；\n\n指针传递下，在主调函数的调用点处，必须用变量的地址作为实参。而引用更容易使用，更清晰。\n"},{"title":"\n  派生类只继承基类中的公有成员和保护成员,而不继承私有成员.说法是否正确？\n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"  下 列 各 m 的 值 中 ， 能 使m%3==2&&m%5==3&&m%7==2为真的是（）。  ","choices":["\n8\n","\n23\n","\n17\n","\n6\n"],"correct_choice":"\n23\n"},{"title":"  若有定义:int a=7;float x=2.5,y=4.7;则表达式 x+a%3*(int)(x+y)%2/4的值是（）。  ","choices":["\n2.500000\n","\n2.750000\n","\n3.500000\n","\n0.000000\n"],"correct_choice":"\n2.500000\n"},{"title":"  下面程序的运行结果是（）。 \nmain()\n{\n int a,b;\n a=32767;\n b=a+1;\n printf(\"a=%d,b=%d\\n\",a,b);\n}\n","choices":["\na=32767,b=-32768\n","\na=32767,b=32768\n","\na=32767,b=1\n","\n运行出错\n"],"correct_choice":"\na=32767,b=32768\n"},{"title":"已知const char * node=\"ABC\"；下列语句合法的是___.","choices":["\nnode[2] = 'k';\n","\n*node[2]='k';\n","\n*node = \"xyz\";\n","\nnode=\"xyz\";\n"],"correct_choice":"\nnode=\"xyz\";\n"},{"title":"32位机上根据下面的代码，问哪些说法是正确的？\n  signed char a = 0xe0;\n  unsigned int b = a;\n  unsigned char c = a;","choices":["\na>0 && c>0 为真\n","\na == c 为真\n","\nb 的十六进制表示是：0xffffffe0\n","\n上面都不对\n"],"correct_choice":"\nb 的十六进制表示是：0xffffffe0\n"},{"title":"C语言中运算对象必须是整型的运算符是（        ）","choices":["\n/\n","\n%\n","\n&\n","\n+=\n"],"correct_choice":"\n%\n\n&\n"},{"title":"  以下对一维整形数组 a 的正确说明是（ ）。              ","choices":["\nint a(10);\n","\nint n=10,a[n];\n","\nint n;\n","\nint a[10];\n"],"correct_choice":"\nint a[10];\n"},{"title":"  请写出下列代码的输出内容： \n#include \"stdio.h\"\nint main()\n{\n    int a, b, c, d;\n    a = 10;\n    b = a++;\n    c = ++a;\n    d = 10 * a++;\n    printf(\"b,c,d:%d,%d,%d\", b, c, d);\n    return 0;\n}\n","choices":["\nb,c,d:10,12,120\n","\nb,c,d:11 12 120\n","\nb,c,d:11,12,130\n","\nb,c,d:11,12,130\n"],"correct_choice":"\nb,c,d:10,12,120\n"},{"title":"\n  设有如下定义：\n\n\n  Int * ( *ptr )()；\n\n\n  则以下叙述中正确的是\n  _____\n","choices":["\nptr是指向一维数组的指针变量\n","\nptr是指向int型数据的指针变量\n","\nptr是指向函数的指针，该函数返回一个int型数据\n","\nptr是指向函数的指针，该函数的返回值是指向int型数据的指针\n"],"correct_choice":"\nptr是指向函数的指针，该函数的返回值是指向int型数据的指针\n"},{"title":"\n  设有以下程序段，则值为6的表达式是（）。\n\n\n   struct st { int n; struct st *next;};\n\n\n   static struct st a[3]={5,&a[1],7,&a[2],9,0 }\n  ，*p;\n  \n\n\n   p=&a[0]; \n","choices":["\np++->n\n","\n++p->n\n","\np->n++\n","\n(*p).n++\n"],"correct_choice":"\n++p->n\n"},{"title":"  以下函数调用语句中实参的个数是（）。    exce((v1,v2),(v3,v4,v5),v6); ","choices":["\n3\n","\n4\n","\n5\n","\n6\n"],"correct_choice":"\n3\n"},{"title":"假定一个类的构造函数为A(int aa,int bb){a=aa--;b=a*bb;}，则执行A x(4,5);语句后，x.a和x.b的值分别为（）","choices":["\n20和5\n","\n3和15\n","\n5和4\n","\n4和20\n"],"correct_choice":"\n4和20\n"},{"title":"若有以下程序\nmain( ) \n{ \n    char c1,c2; \n    c1 ='C'+'8'－'3';\n    c2 ='9'－'0';\n    printf(\"%c %d\\n\",c1,c2); \n}\n  则程序的输出结果是 ","choices":["\nH'9'\n","\nH 9\n","\nF'9'\n","\n表达式不合法输出无定值\n"],"correct_choice":"\nH 9\n"},{"title":"以下说法错误的是：","choices":["\n指针和引用做为函数参数都可以改变实参\n","\n指针和引用都可以在定义后任意的改变指向\n","\n引用必须在创建的时候初始化，而指针则不需要\n","\n不能空引用，但是可以有空指针\n"],"correct_choice":"\n指针和引用都可以在定义后任意的改变指向\n"},{"title":"以下代码段有问题的是()","choices":["\n<pre>void func1(char *e){\n  char *p1;\n  p1=malloc(100);\n  sprintf(p1,error:\"%s'.\",e);\n  local_log(p1);\n  }\n</pre>\n","\n<pre>\nint func2(char *filename)\n  {\n    FILE *fp;\n    int key;\n    fp=fopen(filename,\"r\");\n    fscanf(fp,\"%d\",&key);\n    return key;\n   }\n</pre>\n","\n<pre>\nvoid func3(char *info){\n  char *p,*pp;\n  p=malloc(100);\n  pp=p;\n  free(p);\n  sprintf(pp,*info:\"%s'.\",info);\n  free(pp);\n  }\n</pre>\n","\n选项全部正确\n"],"correct_choice":"\n<pre>void func1(char *e){\n  char *p1;\n  p1=malloc(100);\n  sprintf(p1,error:\"%s'.\",e);\n  local_log(p1);\n  }\n</pre>\n\n<pre>\nint func2(char *filename)\n  {\n    FILE *fp;\n    int key;\n    fp=fopen(filename,\"r\");\n    fscanf(fp,\"%d\",&key);\n    return key;\n   }\n</pre>\n\n<pre>\nvoid func3(char *info){\n  char *p,*pp;\n  p=malloc(100);\n  pp=p;\n  free(p);\n  sprintf(pp,*info:\"%s'.\",info);\n  free(pp);\n  }\n</pre>\n"},{"title":"  若二维数组 a 有 m 列，则计算任一元素 a[i][j] 在数组中的位置公式为（） \n  （假设 a[0][0] 位于数组的第一个位置上） ","choices":["\ni*m+j\n","\nj*m+i\n","\ni*m+j-1\n","\ni*m+j+1\n"],"correct_choice":"\ni*m+j+1\n"},{"title":"  语言源程序的基本结构单位是 main 函数。请问这句话的说法是正确的吗？  ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"无类型标识是指（        ）","choices":["\nvoid\n","\nbool\n","\nshort\n","\nlong\n"],"correct_choice":"\nvoid\n"},{"title":"  一个c程序的执行是从（ ）。  ","choices":["\n本程序的main函数开始\n","\n本程序文件的第一个函数开始\n","\n第一行#include<stdio.h>开始\n","\n程序的全局变量的定义开始\n"],"correct_choice":"\n本程序的main函数开始\n"},{"title":"\n  break语句只能跳出switch选择或循环语句的当前嵌套层次.是否正确？ \n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"关于友元函数的描述中，错误的是\n(   )","choices":["\n友元函数不是成员函数\n","\n友元函数只能访问类中私有成员\n","\n友元函数破坏隐藏性，尽量少用\n","\n友元函数说明在类体内，使用关键字friend\n"],"correct_choice":"\n友元函数只能访问类中私有成员\n"},{"title":"\n  若有定义语句：\n\n\n  char  a='\\82';\n\n\n  则变量\n  a（）\n","choices":["\n说明不合法\n","\n包含1个字符\n","\n包含2个字符\n","\n包含3个字符\n"],"correct_choice":"\n包含1个字符\n"},{"title":"  如果类B继承类A，A::x()被声明为虚函数，B::x()重载了A::x()方法，在下述语句中哪个x()方法会被调用： \nB b;\nb.x();","choices":["\nA::x()\n","\nB::x()\n","\nA::x() B::x()\n","\nB::x() A::x()\n"],"correct_choice":"\nB::x()\n"},{"title":"  以下程序段执行后结果是() \n#include<stdio.h>\nvoid main()\n{\n    short *p,*q;\n    short arr[15]={0};\n    p=q=arr;\n    p++;\n    printf(\"%d,\",p-q);\n    printf(\"%d,\",(char*)p-(char*)q);\n    printf(\"%d\",sizeof(arr)/sizeof(*arr));\n}","choices":["\n1,0,15\n","\n0,2,1\n","\n1,1,15\n","\n1,2,15\n"],"correct_choice":"\n1,2,15\n"},{"title":"  在 C 语言中,if 语句后的一对原括号中,用以决定分支的流程的表达式（）。  ","choices":["\n只能用逻辑表达式\n","\n只能用关系表达式\n","\n只能用逻辑表达式或关系表达式\n","\n可用任意表达式\n"],"correct_choice":"\n可用任意表达式\n"},{"title":"  下列程序段的输出结果为（）。    float k=0.8567;    printf(\"%06.1d%%\",k*100); ","choices":["\n0085.6%%\n","\n0085.7%\n","\n0085.6%\n","\n.857\n"],"correct_choice":"\n0085.7%\n"},{"title":"  以下程序的输出结果是（）？    main()\n{ int a=0\na+=(a=8);\nprintf(\"%d\\n\",a);\n}","choices":["\n8\n","\n16\n","\n24\n","\n32\n"],"correct_choice":"\n16\n"},{"title":"  以下哪个属于在预编译阶段执行____,以下哪些指令属于操作符___       a:malloc;        b:++;        c:#pragma;         d:sizeof;          e:#define   ","choices":["\n预编译c,e 操作符a,b\n","\n预编译c,d 操作符b,e\n","\n预编译c,e 操作符b,d\n","\n预编译a,d 操作符b,d\n"],"correct_choice":"\n预编译c,e 操作符b,d\n"},{"title":"  下列程序的功能是求出3×4的矩阵a中最大元素的值，请为横线处选择合适的程序（  ） \n#include <stdio.h>\n main()\n { \n     int i,j,max;\n     int a[3][4]={{1,2,3,4},{9,8,7,6},{-10,10,-5,2}};\n     max=a[0][0];\n     for (i=0;i<=2;i++)\n         for (j=0;j<=3;j++)\n             if (______________)\n                 max=a[i][j];\n     printf(\"max=%d\\n\",max);\n }","choices":["\na[i][j]<max\n","\na[j][i]>max\n","\na[i][j]>max\n","\na[j][i]<max\n"],"correct_choice":"\na[i][j]>max\n"},{"title":"从本质上看，引用是被应用变量的（        ）","choices":["\n拷贝\n","\n别名\n","\n复制\n","\n克隆\n"],"correct_choice":"\n别名\n"},{"title":"\n  通过return语句，函数可以带回一个或一个以上的返回值。（）\n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"  以下不正确的定义语句是（   ）。\n","choices":["\ndouble x[5] = {2.0, 4.0, 6.0, 8.0, 10.0};\n","\nchar c2[] = {'\\x10', '\\xa', '\\8'};\n","\nchar c1[] = {'1','2','3','4','5'};\n","\nint y[5+3]={0, 1, 3, 5, 7, 9};\n"],"correct_choice":"\nchar c2[] = {'\\x10', '\\xa', '\\8'};\n"},{"title":"  先用语句定义字符型变量 c,然后要将字符a 赋给 c,则下列语句中正确的是（）。  ","choices":["\nc='a';\n","\nc=\"a\";\n","\nc=\"97\";\n","\nC='97'\n"],"correct_choice":"\nc='a';\n"},{"title":"下列正确的有（ ）","choices":["\ncall by value不会改变实际参数的数值\n","\ncall by reference能改变实际参数的参考地址\n","\ncall by reference不能改变实际参数的参考地址\n","\ncall by reference能改变实际参数的内容\n"],"correct_choice":"\ncall by value不会改变实际参数的数值\n\ncall by reference不能改变实际参数的参考地址\n\ncall by reference能改变实际参数的内容\n"},{"title":"  定义一个输入文件流对象,并打开d盘du文件夹下的abc.dat文件方法是:     ifstream fin;     fin.open(\"d:\\\\du\\\\abc.dat\");     说法是否正确？  ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"  有以下程序 \n#include <stdio. h>\nmain()\n{ \n    int x;\n    for(x = 3; x < 6; x++)\n        printf( (x%2)?(\"*%d\")：(\"#%d\"),x);\n    printf(\"\\n\");\n}\n  程序的输出结果是？ ","choices":["\n*3#4*5\n","\n#3*4#5\n","\n*3*4#5\n","\n*3#4#5\n"],"correct_choice":"\n*3#4*5\n"},{"title":"实现运行时的多态性要使用（        ）","choices":["\n重载函数\n","\n析构函数\n","\n构造函数\n","\n虚函数\n"],"correct_choice":"\n虚函数\n"},{"title":"\n  一个C程序的执行是从（ ）\n","choices":["\n本程序的main函数开始,到main函数结束\n","\n本程序文件的第一个函数开始,到本程序文件的最后一个函数结束\n","\n本程序的main函数开始,到本程序文件的最后一个函数结束\n","\n本程序文件的第一个函数开始,到本程序main函数结束\n"],"correct_choice":"\n本程序的main函数开始,到main函数结束\n"},{"title":"\n  程序char\n      c[5]={‘a’,’b’,’\\0’,’c’,’\\0’};\n    printf(“%s”,c);}的运行结果是（ ）\n","choices":["\n'a''b'\n","\nab\\0c\\0\n","\nab c\n","\nab\n"],"correct_choice":"\nab\n"},{"title":"  两个指针变量不可以（）。 ","choices":["\n相加\n","\n比较\n","\n相减\n","\n指向同一地址\n"],"correct_choice":"\n相加\n"},{"title":"int x[6][4],(*p)[4]; p=x;   则*(p+2)指向哪里?","choices":["\nx[0][1]\n","\nx[0][2]\n","\nx[1][0]\n","\nx[2][0]\n"],"correct_choice":"\nx[2][0]\n"},{"title":"下列有关this指针使用方法的叙述正确的是（）","choices":["\n保证基类保护成员在子类中可以被访问\n","\n保证基类私有成员在子类中可以被访问\n","\n保证基类共有成员在子类中可以被访问\n","\n保证每个对象拥有自己的数据成员，但共享处理这些数据的代码\n"],"correct_choice":"\n保证每个对象拥有自己的数据成员，但共享处理这些数据的代码\n"},{"title":"  下面两个结构体 \nstruct One{\n\tdouble d;\n\tchar c;\n\tint i;\n}\nstruct Two{\n\tchar c;\n\tdouble d;\n\tint i;\n}\n  在#pragma pack(4)和#pragma pack(8)的情况下，结构体的大小分别是 ","choices":["\n16 24,16 24\n","\n16 20,16 20\n","\n16 16,16 24\n","\n16 16,24 24\n"],"correct_choice":"\n16 16,16 24\n"},{"title":"\n  int a=24; printf(\"%o \", a );\n  输出结果是30。 \n\n\n  \n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"若有数组名作为函数调用时的实参，则实际上传递给形参的是（）","choices":["\n数组首地址\n","\n数组第一个元素的值\n","\n数组中全部元素所占内存字节数\n","\n数组元素的个数\n"],"correct_choice":"\n数组首地址\n"},{"title":"  若有说明 int c;则 while(c=getchar());是正确的 C 语句。请问这句话的说法是正确的吗？  ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"分析一下程序的运行结果: class CBase\n{\npublic:\n    CBase(){cout<<”constructing CBase class”<<endl;}\n    ~CBase(){cout<<”destructing CBase class”<<endl;}\n};\n\nclass CSub : public CBase\n{\npublic:\n    CSub(){cout<<”constructing CSub class”<<endl;}\n    ~CSub(){cout<<”destructing CSub class”<<endl;}\n };\n\nvoid main()\n{\n    CSub obj;\n}\n","choices":["\nconstructing CSub class \nconstructing CBase class   \ndestructing CSub class  \ndestructing CBase class\n","\nconstructing CBase class\nconstructing CSub class\ndestructing CBase class\ndestructing CSub class\n","\nconstructing CBase class        \nconstructing CSub class         \ndestructing CSub class          \ndestructing CBase class\n","\nconstructing CSub class\nconstructing CBase class\ndestructing CBase class\ndestructing CSub class\n"],"correct_choice":"\nconstructing CBase class        \nconstructing CSub class         \ndestructing CSub class          \ndestructing CBase class\n"},{"title":"下列函数f的功能是比较c数组相邻行字符串的大小，比较后将值大的字符串置于值小的字符串的上一行，请为横线处选择合适的程序（      ）\nvoid f(char c[5][6])\n{ \n    int i,j;\n    char temp[10];\n    for(i=0;i<4;i++) \n    for(j=______;j<5;j++)\n    if(strcmp(c[i],c[j])>0)\n    {\n        strcpy(temp,c[i]);\n        strcpy(c[i],c[j]);\n        (c[j],temp);\n    }\n}\n","choices":["\ni+1\n","\n0\n","\n1\n","\ni-1\n"],"correct_choice":"\ni+1\n"},{"title":"\n  下列代码的运行结果（）\n\nshort i=65537;\nint j=i+1;\nprintf(“i=%d,j=%d\\n”, i, j);\n","choices":["\ni=65537,j=65538\n","\ni=1,j=2\n","\ni=-1,j=0\n","\ni=1,j=65538\n"],"correct_choice":"\ni=1,j=2\n"},{"title":"关于Java和C/C++的比较，下列哪个描述是错误的？","choices":["\nJava不支持指针，C/C++支持\n","\nJava程序不需要显式地关心内存释放，而C/C++需要\n","\nJava和C++一样，是纯编译型语言，因此它们的class都是在编译时静态联编(static binding)的\n","\nJava数组、字符串不可能溢出，C/C++数组、字符串则有可能溢出边界\n"],"correct_choice":"\nJava和C++一样，是纯编译型语言，因此它们的class都是在编译时静态联编(static binding)的\n\nJava数组、字符串不可能溢出，C/C++数组、字符串则有可能溢出边界\n"},{"title":"在结构化的程序设计中，模块划分的原则是（）","choices":["\n各模块硬包括尽量多的功能\n","\n各模块的规划应尽量大\n","\n各模块之间的联系尽量紧密\n","\n模块内具有高内聚度，模块间具有低耦合度\n"],"correct_choice":"\n模块内具有高内聚度，模块间具有低耦合度\n"},{"title":"  下列程序的输出结果是 \n#include<iostream.h>\nvoid f() {\n    static int i=15;\n    i++;\n    cout<<\"i=\"<<i<<endl;\n}\nvoid main(){\n    for(int k=0;k<2;k++) \n        f();\n}","choices":["\ni=16     i=15\n","\ni=15     i=17\n","\ni=16     i=17\n","\ni=15     i=16\n","\ni=15     i=18\n"],"correct_choice":"\ni=16     i=17\n"},{"title":"  以下程序的运行结果为：（） \n\n     #include <stdio.h>  \n  \n    \n  \n     void main()  \n     {  \n  int i, j, k = 10;  \n  for (i = 0; i < 2; i++)  \n  {  \n  k++;  \n  for (j = 0; j <= 3; j++)  \n  {  \n  if (j % 2) continue;  \n  k++;  \n  }  \n  }  \n  k++;  \n  printf(\"%d\", k);  \n     }  \n","choices":["\n17\n","\n18\n","\n8\n","\n4\n"],"correct_choice":"\n17\n"},{"title":"下列选项中，能正确定义数组的语句是：","choices":["\n#define N 2008 \nint num[N];\n","\nint N=2008;\n","\nint num[0..2008];\n","\nint num[];\n"],"correct_choice":"\n#define N 2008 \nint num[N];\n"},{"title":"\n  以下关于运算符优先顺序的描述中正确的是（ ）\n","choices":["\n关系运算符<算术运算符<赋值运算符<逻辑与运算符\n","\n逻辑与运算符<关系运算符<算术运算符<赋值运算符\n","\n赋值运算符<逻辑与运算符<关系运算符<算术运算符\n","\n算术运算符<关系运算符<赋值运算符<逻辑与运算符\n"],"correct_choice":"\n赋值运算符<逻辑与运算符<关系运算符<算术运算符\n"},{"title":"  下列定义不正确的是（）。 ","choices":["\n#define PI 3.141592\n","\n#define S345\n","\nint max(x,y); int x,y; { }\n","\nstatic char c;\n"],"correct_choice":"\nint max(x,y); int x,y; { }\n"},{"title":"下列循环语句中有语法错误的是 ","choices":["\nint i;for（ i=1;i<10;i++）cout<<‘*‘;\n","\nint i,j;for（i=1,j＝0;i<10;i++,j++）cout<<‘*‘;\n","\nint i=0;for（;i<10;i++）cout<<‘*‘;\n","\nfor（1）cout<<‘*‘;\n"],"correct_choice":"\nfor（1）cout<<‘*‘;\n"},{"title":"  在位运算中，操作数每左移一位，其结果相当于（）。  ","choices":["\n操作数乘以2\n","\n操作数除以2\n","\n操作数除以4\n","\n操作数乘以4\n"],"correct_choice":"\n操作数乘以2\n"},{"title":"C++程序的基本模块为（    ）。","choices":["\n表达式\n","\n标识符\n","\n语句\n","\n函数\n"],"correct_choice":"\n函数\n"},{"title":"  执行下面程序后，输出结果是（）。  main()\n{ a=45,b=27,c=0;\nc=max(a,b);\nprintf(\"%d\\n\",c);\n}\nint max(x,y)\nint x,y;\n{ int z;\nif(x>y) z=x;\nelse z=y;\nreturn(z);\n}    ","choices":["\n45\n","\n27\n","\n18\n","\n72\n"],"correct_choice":"\n45\n"},{"title":"  根据下面递归函数：调用函数Fun（2），返回值是多少（） \nint Fun(int n)          \n{ \n    if(n==5)     \n        return 2;        \n    else        \n        return 2*Fun(n+1);           \n}","choices":["\n2\n","\n4\n","\n8\n","\n16\n"],"correct_choice":"\n16\n"},{"title":"  一个算法应该具有“确定性”等 5 个特性，对另外 4 个特性的描述中错误的是（ ）。  ","choices":["\n有零个或多个输入\n","\n有零个或多个输出\n","\n有穷性\n","\n可行性\n"],"correct_choice":"\n有零个或多个输出\n"},{"title":"\n  程序的开发过程:编辑、编译预处理、编译、连接、运行。说法是否正确？ \n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"  请指出下列代表有几处错误。    #include<stdio.h>\nclass A\n{\n    public:\n      virtual void f(){}\n    public :\n       A()\n       {\n           f();\n        }\n};\nclass B1:public A()\n{\n    private:\n        char *_s;\n    public:\n        B1()\n        {\n            _s=new char[1024];\n        }\n    private:\n        void f()\n        {\n            delete _s[];\n            _s=NULL;\n        }\n}\nclass B2:public A\n{\n    private:\n    int * _m;\n    public:\n        B2()\n        {\n            _m=new int(2016);\n        }\n    private:\n        virtual void f()\n        {\n            delete _m;\n            _m=NULL;\n        }\n}\nint main()\n{\n    A*a1=new B();\n    A*a2=new C;\n    delete a1;\n    delete a2;\n    return 0;\n} ","choices":["\n3\n","\n4\n","\n5\n","\n6\n"],"correct_choice":"\n6\n"},{"title":"  若局部变量和全局变量重名，会发生什么？（）  ","choices":["\n只能访问局部变量\n","\n局部变量会屏蔽全局变量，要使用全局变量，需要使用“::”\n","\n全局变量会屏蔽局部变量，要使用局部变量，需要使用“::”\n","\n只能访问全局变量\n"],"correct_choice":"\n局部变量会屏蔽全局变量，要使用全局变量，需要使用“::”\n"},{"title":"  下列四组选项中,均不是 C 语言关键字的选项是（）。  ","choices":["\ndefine IF type\n","\ngetc char printf\n","\ninclude scanf case\n","\nwhile go pow\n"],"correct_choice":"\ndefine IF type\n"},{"title":"switch(c)语句中，c不可以是什么类型（）","choices":["\nint\n","\nlong\n","\nchar\n","\nfloat\n"],"correct_choice":"\nfloat\n"},{"title":"对于一个频繁使用的短小函数,在C语言中用宏实现,在C++中应用什么实现?","choices":["\n虚函数\n","\n内联函数\n","\n友元\n","\n抽象类\n"],"correct_choice":"\n内联函数\n"},{"title":"\n  语言中哪一种形式声明了一个指向char类型变量的指针p，p的值不可修改，但p指向的变量值可修改？ ","choices":["\nconst char *p\n","\nchar const *p\n","\nchar*const p\n","\nconst char *const p\n"],"correct_choice":"\nchar*const p\n"},{"title":"unsigned int a= 0x1234; unsigned char b=*(unsigned char *)&a; 在32位大端模式处理器上变量b等于()?","choices":["\n0x00\n","\n0x12\n","\n0x34\n","\n0x1234\n"],"correct_choice":"\n0x00\n"},{"title":"  请问下列代码的输出结果有可能是哪些（）？ \n#include<stdint.h>\n#include<stdio.h>\nunion X\n{\n\tint32_t a;\n\tstruct \n\t{\n\t\tint16_t b;\n\t\tint16_t c;\n\t};\n};\nint main(){\n\tX x;\n\tx.a=0x20150810;\n\tprintf(\"%x,%x\\n\",x.b,x.c);\n\treturn 0;\n}","choices":["\n2015,810\n","\n50810,201\n","\n810,2015\n","\n20150,810\n"],"correct_choice":"\n2015,810\n\n810,2015\n"},{"title":"\n  设有如下定义：\n\n\n  struct ss\n\n\n  { char name[10];int age; char sex;}std[3],*p=std;\n\n\n  下面各输入语句中错误的是____________\n\n\n  \n","choices":["\nscanf(“%d”,&(*p).age);\n","\nscanf(“%s”,&std.name);\n","\nscanf(“%c”,&std[0].sex);\n","\nscanf(“%c”,&(p->sex));\n"],"correct_choice":"\nscanf(“%s”,&std.name);\n"},{"title":"\n  若有说明：int  a[3][4];则对a数组元素的非法引用是（ ）\n","choices":["\na[0][2*1]\n","\na[1][3]\n","\na[4-2][0]\n","\na[0][4]\n"],"correct_choice":"\na[0][4]\n"},{"title":"  下面字符常量正确的是（ ）。  ","choices":["\n“c”\n","\n‘\\\\''\n","\n‘n’\n","\n‘ab’\n"],"correct_choice":"\n‘n’\n"},{"title":"  以下程序的输出结果为（） \n\n     #include <stdio.h>  \n  \n    \n  \n     void main()  \n     {  \n  int x[6], a=0, b, c=14;  \n  do  \n  {  \n  x[a] = c % 2;  \n  a++;  \n  c /= 2;  \n  }while (c >= 1);  \n  for (b = a-1; b >= 0; b--) printf(\"%d \",     x[b]);  \n  printf(\"\\n\");  \n     }  \n","choices":["\n1 1 1 0\n","\n1 1 1 1\n","\n1 1 0 0\n","\n1 1 0 1\n"],"correct_choice":"\n1 1 1 0\n"},{"title":"  下列运算符中,不属于关系运算符的是（）？ ","choices":["\n<\n","\n>\n","\n>=\n","\n!\n"],"correct_choice":"\n!\n"},{"title":"   下述   程序   执行后的输出结果是    ()    ＃include\nmain() \n{ \n    int x='f'; \n    printf(\"%c\\n\",'a'+(x-'a'+1)); \n}  ","choices":["\ng\n","\nH\n","\nI\n","\nJ\n"],"correct_choice":"\ng\n"},{"title":"  下列程序的输出结果是（）。  main()\n{ int x=1,y=0,a=0,b=0;\nswitch(x)\n{\ncase 1:switch(y)\n{\ncase\n0:a++;break;\ncase\n1:b++;break;\n}\ncase 2:a++;b++;break;\ncase 3:a++;b++;break;\n}\nprintf(\"a=%d,b=%d\\n\",a,b);\n}","choices":["\na=1,b=0\n","\na=2,b=1\n","\na=1,b=1\n","\na=2,b=2\n"],"correct_choice":"\na=2,b=1\n"},{"title":"  int Func（int，int）；不可与下列哪个函数构成重载（        ）\n","choices":["\nint Func（int，int，int）；\n","\ndouble Func（int，int）；\n","\ndouble Func（double，double）；\n","\ndouble Func（int，double）\n"],"correct_choice":"\ndouble Func（int，int）；\n"},{"title":"\n   对于\"int *pa[5]；\"的描述中，（ ）是正确的。\n","choices":["\npa是一个指向数组的指针，所指向的数组是5个int型元素\n","\npa是一个指向某数组中第5个元素的指针，该元素是int型变量\n","\npa [5]表示某个元素的第5个元素的值\n","\npa是一个具有5个元素的指针数组，每个元素是一个int型指针\n"],"correct_choice":"\npa是一个具有5个元素的指针数组，每个元素是一个int型指针\n"},{"title":"若有说明：int a[10];，则对数组元素的正确引用是（）","choices":["\na[10]\n","\na[3,5]\n","\na(5)\n","\na[10-10]\n"],"correct_choice":"\na[10-10]\n"},{"title":"  下面程序段的输出结果为（） \n\n     char s[]=\"abcde\";  \n     printf(\"%d\", s);  \n","choices":["\nabcde\n","\n97\n","\n5\n","\n数组 s 的首地址\n"],"correct_choice":"\n数组 s 的首地址\n"},{"title":"  若有以下定义 int a,b; float x ，则正确的赋值语句是（）。  ","choices":["\na=1,b=2\n","\nb++;\n","\na=b=5\n","\nb=int(x);\n"],"correct_choice":"\nb++;\n"},{"title":"若要以写方式打开当前目录下文件abc:txt，则以下语句正确的是（）。","choices":["\nfopen(\"abc.txt\",\"r\");\n","\nfopen(\"abc.txt\",\"w\");\n","\nfopen(\"abc.txt\",'r');\n","\nfopen(\"abc.txt\",'w’);\n"],"correct_choice":"\nfopen(\"abc.txt\",\"w\");\n"},{"title":"下列for循环的循环体执行次数为 for(int i=10, j=1; i=j=0; i++, j--)","choices":["\n0\n","\n1\n","\n无限\n","\n以上都不对\n"],"correct_choice":"\n0\n"},{"title":"  有如下程序段： \n\n  #include <iostream>\nusing namespace std;\n\nclass A {\n    public:\n    ~A() {\n        cout << \"~A()\";\n    }\n};\nclass B{\n    public:\n    virtual ~B() {\n    cout << \"~B()\";\n}\n};\nclass C: public A, public B {\n    public:\n    ~C() {\n        cout << \"~C()\";\n    }\n};\nint main() {\n    C * c = new C;\n    B * b1 = dynamic_cast<B *>(c);\n    A * a2 = dynamic_cast<A *>(b1);\n    delete a2;\n}\n\n  则程序输出： ","choices":["\n~C()~B()~A()\n","\n~C()~A()~B()\n","\nA)B)都有可能\n","\n以上都不对\n"],"correct_choice":"\n以上都不对\n"},{"title":"  func函数如下，则func(10)的返回值为（）       ","choices":["\n30\n","\n29\n","\n55\n","\n54\n"],"correct_choice":"\n29\n"},{"title":"用于包含C++标准库iostream的预处理指令是（        ）","choices":["\n#define<iostream>\n","\n#include<iostream>\n","\n#define‘iostream’\n","\n#include‘iostream’\n"],"correct_choice":"\n#include<iostream>\n"},{"title":"\n  \n    \n  \n  C\n  语言中的基本数据类型包括（）。\n","choices":["\n整型，实型，逻辑型\n","\n整型，实型，字符型\n","\n整型，逻辑型，字符型\n","\n整型，实型，逻辑型，字符型\n"],"correct_choice":"\n整型，实型，字符型\n"},{"title":"十进制变量i的值为100，那么八进制的变量i的值为:","choices":["\n146\n","\n148\n","\n144\n","\n142\n"],"correct_choice":"\n144\n"},{"title":"以下代码的输出结果是？\nchar *p=\"abc\";\nchar *q=\"abc123\";\nwhile(*p=*q)\nprint(\"%c %c\",*p,*q);\n","choices":["\naabbcc\n","\naabbcc123\n","\nabcabc123\n","\n代码段错误\n"],"correct_choice":"\n代码段错误\n"},{"title":"对静态成员的不正确描述是（）","choices":["\n静态成员不属于对象，是类的共享成员\n","\n静态数据成员要在类外定义和初始化\n","\n调用静态成员函数时要通过类或对象激活，所以静态成员函数拥有this指针\n","\n非静态成员函数也可以操作静态数据成员\n"],"correct_choice":"\n调用静态成员函数时要通过类或对象激活，所以静态成员函数拥有this指针\n"},{"title":"  C++语言中,64位环境下double类型数据占 8个字节。说法是否正确？ ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"假定一个二维数组的定义语句为“int a[3][4]={{3,4},{2,8,6}};”，则元素a[1][2]的值为（    ）。","choices":["\n2\n","\n4\n","\n6\n","\n8\n"],"correct_choice":"\n6\n"},{"title":"\n  DO是C++语言中的关键字.  说法是否正确？\n\n\n  \n    \n  \n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"下列哪些表达式的值等于0（）","choices":["\n5 % 6\n","\n5 / 6\n","\n5 / 6.0\n","\n5.0 / 6\n"],"correct_choice":"\n5 / 6\n"},{"title":"  在32位系统环境，编译选项为4字节对齐，那么sizeof(A)和sizeof(B)是：  \n\n  struct A\n{\n int a;\n short b;\n int c;\n char d;\n};\nstruct B\n{\n int a;\n short b;\n char c;\n int d;\n};\n","choices":["\n16,16\n","\n13,12\n","\n16,12\n","\n11,16\n"],"correct_choice":"\n16,12\n"},{"title":"发生传值调用时，形参和实参各占一个独立的存储空间。","choices":["\n是\n","\n否\n"],"correct_choice":"\n是\n"},{"title":"\n  char *p=\"girl\"\n  ；的含义是定义字符型指针变量p，p的值是字符串\"girl\"。（）\n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"  若有定义:int *p[3];,则以下叙述中正确的是（）。  ","choices":["\n定义了一个基类型为 int 的指针变量 p,该变量具有三个指针\n","\n定义了一个指针数组 p,该数组含有三个元素,每个元素都是基类型为 int 的指针\n","\n定义了一个名为*p 的整型数组,该数组含有三个 int 类型元素\n","\n定义了一个可指向一维数组的指针变量p,所指一维数组应具有三个 int 类型元素\n"],"correct_choice":"\n定义了一个指针数组 p,该数组含有三个元素,每个元素都是基类型为 int 的指针\n"},{"title":"  7&3+12的值是15。请问这个说法是正确的吗？ ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"以下能对一维数组 a 进行正确初始化的语句是（）","choices":["\nint a[10]=(0, 0, 0, 0, 0);\n","\nint a[10]={  };\n","\nint a[]={0};\n","\nint a[10]={10*a};\n"],"correct_choice":"\nint a[10]={  };\n\nint a[]={0};\n"},{"title":"  int a[10];    给数组 a 的所有元素分别赋值为1、2、3、……的语句是（）。  ","choices":["\nfor(i=1;i<11;i++)a[i]=i;\n","\nfor(i=1;i<11;i++)a[i-1]=i;\n","\nfor(i=1;i<11;i++)a[i+1]=i;\n","\nfor(i=1;i<11;i++)a[0]=1;\n"],"correct_choice":"\nfor(i=1;i<11;i++)a[i-1]=i;\n"},{"title":"表示关系式x≤y≤z的C语言表达式的是?","choices":["\n(x <=y)&&(y <=z)\n","\n(x <=y)‖(y <=z)\n","\n(x <=y<=z)\n","\nx<=y＝!(y <=z)\n"],"correct_choice":"\n(x <=y)&&(y <=z)\n"},{"title":"\n  a=7%4;最终a的结果是1。说法是否正确？ \n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"  下列程序的输出是：（）  #define add(a,b) a+b\nint main() {\n    printf(\"%d\\n\", 5 * add(3,4));\n    return 0;\n}\n ","choices":["\n23\n","\n35\n","\n16\n","\n19\n"],"correct_choice":"\n19\n"},{"title":"下列运算符中，在C++语言中不能重载的是：","choices":["\n*\n","\n>=\n","\n::\n","\ndelete\n"],"correct_choice":"\n::\n"},{"title":"  有如下程序段： \n\n\t#include \"stdio.h\"\n\nclass A\n{\n    public:\n    A()\n    {\n        printf(\"1\");\n    }\n    A(A &a)\n    {\n        printf(\"2\");\n    }\n    A &operator=(const A &a)\n    {\n        printf(\"3\");\n        return *this;\n    }\n};\nint main()\n{\n    A a;\n    A b = a;\n}\n\n\n  则程序输出为： ","choices":["\n12\n","\n13\n","\n无法确定\n","\n编译出错\n"],"correct_choice":"\n12\n"},{"title":"#include<stdio.h>\nint main()\n{\n    unsigned char i=7;\n    int j=0;\n    for(;i>0;i-=3)\n    {\n       ++j;\n     }\n     printf(\"%d\\n\",j);\n     return 0;\n}\n  请问该程序的输出是多少? ","choices":["\n2\n","\n死循环\n","\n173\n","\n172\n"],"correct_choice":"\n173\n"},{"title":"类成员的访问权限有","choices":["\npublic\n","\nprivate\n","\nprotected\n","\nstatic\n"],"correct_choice":"\npublic\n\nprivate\n\nprotected\n"},{"title":"  语句 scanf(\"%7.2f\",&a);是一个合法的scanf 函数。请问这句话的说法是正确的吗？  ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"\n  函数的返回值是指函数被调用之后,执行函数体中的程序段所取得的并返回给主调函数的值。说法是否正确？\n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"  在任何情况下,对二维数组的初始化都可以省略第一维的大小。请问这句话的说法是正确的吗？  ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"  若有以下程序 \n#include< stdio.h>\nchar f(char x)\n{ \n    return x*x +'a'; \n}\nmain (){ \n    char a,b=0;\n    for (a=0; a<4; a+=1){\n        b=f(a);\n        putchar(b);\n    }\n}\n  则程序的输出结果是？ ","choices":["\nabcd\n","\nABEJ\n","\nabej\n","\nABCD\n"],"correct_choice":"\nabej\n"},{"title":"  以下表达式选择结果。（    ）  int a = 0;\nint b = (a=-1) ? 2:3;\nint c = (a=0) ? 2:3; ","choices":["\nb=2, c=2\n","\nb=3, c=3\n","\nb=2, c=3\n","\nb=3, c=2\n"],"correct_choice":"\nb=2, c=3\n"},{"title":"\n  定义\n  int*swap()\n  指的是（）\n","choices":["\n一个返回整型值的函数swap()\n","\n一个返回指向整型值指针的函数swap()\n","\n一个指向函数swap()的指针，函数返回一个整型值\n","\n以上说法均错\n"],"correct_choice":"\n一个返回指向整型值指针的函数swap()\n"},{"title":"有定义如下：\nstatic char x[ ]= \"abcde\"; \nstatic char y[ ]={ 'a', 'b', 'c', 'd', 'e'}; \n 则正确的说法是？","choices":["\nx数组的长度大于y数组的长度\n","\nx数组和y数组的长度相同\n","\nx数组的长度小于y数组的长度\n","\nx数组与y数组等价\n"],"correct_choice":"\nx数组的长度大于y数组的长度\n"},{"title":"一个双目运算符作为类的成员函数重载时，重载函数的参数表中有()个参数。","choices":["\n1\n","\n2\n","\n3\n","\n0\n"],"correct_choice":"\n1\n"},{"title":"写出下列程序所有可能的运行结果。\nint a;\nint b;\nint c;\n\nvoid F1()\n{\n    b = a * 2;\n    a = b;\n}\n\nvoid F2()\n{\n    c = a + 1;\n    a = c;\n}\n\nmain()\n{\n    a = 5;\n    //Start F1,F2 in parallel\n    F1(); \n    F2();\n    printf(\"a=%d\\n\", a);\n}\n","choices":["\n11\n","\n6\n","\n12\n","\n以上都不正确\n"],"correct_choice":"\n11\n\n6\n\n12\n"},{"title":"  下列选项中，不能用作标识符的是(   )。  ","choices":["\n_1234_\n","\n_1_2\n","\nint_2_\n","\n2_int_\n"],"correct_choice":"\n2_int_\n"},{"title":"已知fun(int)是类Test的公有成员函数，p是指向成员函数fun()的指针，采用（  ）是正确的。","choices":["\np=fun\n","\np=Test::fun()\n","\np=fun()\n","\np=&Test::fun\n"],"correct_choice":"\np=&Test::fun\n"},{"title":"下述有关c++的虚类和java接口的描述，说法错误的是？","choices":["\nc++虚类相当与java里面的抽象类\n","\nc++中没有接口的概念，与之对应的是纯虚类，对应的是java的接口\n","\n纯虚函数和虚函数的区别在于前者只包含定义，而后者还可以包含函数体。\n","\n一个抽象类和接口中的方法必须是抽象方法\n"],"correct_choice":"\n纯虚函数和虚函数的区别在于前者只包含定义，而后者还可以包含函数体。\n\n一个抽象类和接口中的方法必须是抽象方法\n"},{"title":"break 语句可用于循环体内,它将退出该重循环。请问这句话的说法是正确的吗？","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"下列（    ）的调用方式是引用调用。","choices":["\n形参和实参都是变量\n","\n形参是指针，实参是地址值\n","\n形参是引用，实参是变量\n","\n形参是变量，实参是地址值\n"],"correct_choice":"\n形参是引用，实参是变量\n"},{"title":"  以下代码打印的结果是（假设运行在 64 位计算机上）：   struct st_t {\n    int status;\n    short *pdata;\n    char errstr[32]; \n};\nst_t st[16];\nchar *p=(char *)(st[2].esstr+32);\nprintf(“%d”,(p-(char *)(st))); ","choices":["\n32\n","\n120\n","\n114\n","\n144\n"],"correct_choice":"\n144\n"},{"title":"  以下定义语句中正确的是(  )。  ","choices":["\nchar a='A'b='B';\n","\nfloat a=b=10.0;\n","\nint a=10,*b=&a;\n","\nfloat *a,b=&a;\n"],"correct_choice":"\nint a=10,*b=&a;\n"},{"title":"  若从键盘输入58,则以下程序输出的结果是（）？   main()\n{ int a;\nscanf(\"%d\",&a);\nif(a>50)\nprintf(\"%d\",a);\nif(a>40)\nprintf(\"%d\",a);\nif(a>30)\nprintf(\"%d\",a);\n}","choices":["\n58\n","\n5858\n","\n585858\n","\n58585858\n"],"correct_choice":"\n585858\n"},{"title":"在下面的选项中，不能作为函数的返回值类型的是（   ）。","choices":["\nvoid\n","\nnode\n","\nint\n","\nlong\n"],"correct_choice":"\nnode\n"},{"title":"\n  下列函数的功能是（）\n\nvoid abc(int *p1,int *p2){\n    int p;\n    p=*p1;\n    *p1=*p2;\n    *p2=p;\n}\n","choices":["\n交换*p1和*p2的值\n","\n交换*p1和*p2的地址\n","\n正确，但无法改变*p1和*p2的值\n","\n可能造成系统故障\n"],"correct_choice":"\n交换*p1和*p2的值\n"},{"title":"类A是类B的友元,类C是类A的公有派生类,忽略特殊情况则下列说法正确的是()","choices":["\n类B是类A的友元\n","\n类C不是类B的友元\n","\n类C是类B的友元\n","\n类B不是类A的友元\n"],"correct_choice":"\n类C不是类B的友元\n\n类B不是类A的友元\n"},{"title":"  在 if 语句中,else 前一个语句可不加\";\"。请问这句话的说法是否正确？  ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"  以下代码输出的值是：   int x=4;\nvoid incre() \n{\n    static int x=1;\n    x*=x+1;\n    printf(“%d”,x);\n}\nint _tmain(int argc,_TCHAR* argv[]) \n{\n    int I;\n    for(i=1;i<x;i++){\n        incre();\n    }\n    return 0;\n} ","choices":["\n2642\n","\n2\n","\n4\n","\n5\n"],"correct_choice":"\n2642\n"},{"title":"  所谓数据封装就是将一组数据和与这组数据有关操作组装在一起，形成一个集合，这集合也就是（） ","choices":["\n类\n","\n对象\n","\n函数体\n","\n数据块\n"],"correct_choice":"\n类\n"},{"title":"  若有 int i=10,j=2;则执行完 i*=j+8;后?的值为28。请问这个说法是正确的吗？  ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"\n  下列程序执行后的输出结果是\n  __________\n\n\n  void func(int *a,int b[])\n\n\n  { b[0]=*a+6; }\n\n\n  main()\n\n\n  { int a,b[5];\n\n\n  a=0; b[0]=3;\n\n\n  func(&a,b); printf(\"%d\\n\",\n  b[0]);}\n\n\n  \n","choices":["\n6\n","\n7\n","\n8\n","\n9\n"],"correct_choice":"\n6\n"},{"title":"对C++中主函数的描述正确的是（        ）","choices":["\n名称为main，可为多个\n","\n名称不限，可为多个\n","\n名称为main，必须有且只有一个\n","\n名称不限，必须有且只有一个\n"],"correct_choice":"\n名称为main，必须有且只有一个\n"},{"title":"不能说明为虚函数的是（\n）。","choices":["\n析构函数\n","\n构造函数\n","\n类的成员函数\n","\n以上都不对\n"],"correct_choice":"\n构造函数\n"},{"title":"有一个二维数组A[10][5]，每个数据元素占1个字节，且A[0][0]的存储地址是1000，则A[i][j]的地址是多少 ？","choices":["\n1000+10i+j\n","\n1000+i+j\n","\n1000+5i+j\n","\n1000+10i+5j\n"],"correct_choice":"\n1000+5i+j\n"},{"title":"  查看下面两段代码 \n(1)\nclass classA {...};\nclass classB\n{\npublic:\n\tclassB(classA a) {mA = a;}\nprivate:\n\tclassA mA;\n};\n(2)\nclass classA {...};\nclass classB\n{\npublic:\n\tclassB(classA a): mA(a) {}\nprivate:\n\tclassA mA;\n};","choices":["\n两种方法产生的结果和效率完全相同\n","\n通常情况下（2）的效率更高\n","\n通常情况下（1）的效率更高\n","\n两种调用方法会产生不同的结果\n"],"correct_choice":"\n通常情况下（2）的效率更高\n"},{"title":"  下面代码的输出是什么？ \nclass A  \n{  \npublic:  \n    A()  {     }  \n    ~A() {    cout<<\"~A\"<<endl;   }  \n};  \n  \nclass B:public A  \n{  \n    public:  \n        B(A &a):_a(a)  \n        {  \n            \n        }  \n        ~B()  \n        {  \n            cout<<\"~B\"<<endl;  \n        }  \n    private:  \n        A _a;  \n    };  \n      \nint main(void)  \n {  \n        A a;       //很简单，定义a的时候调用了一次构造函数  \n        B b(a); \n}\n\n  \n","choices":["\n~B\n","\n~B\n~A\n","\n~B\n~A\n~A\n","\n~B\n~A\n~A\n~A\n"],"correct_choice":"\n~B\n~A\n~A\n~A\n"},{"title":"\n  设j和k都是int类型,则for循环语句\n\n\n   for(j=0,k=0;j<=9&&k!=876;j++) cin>>k;\n\n\n  最多执行10次\n\n\n  说法是否正确？\n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"  以下说法正确的是（）。 ","choices":["\nC 语言程序总是从第一个的函数开始执行\n","\n在 C 语言程序中,要调用函数必须在main()函数中定义\n","\nC 语言程序总是从 main()函数开始执行\n","\nC 语言程序中的 main()函数必须放在程序的开始部分\n"],"correct_choice":"\nC 语言程序总是从 main()函数开始执行\n"},{"title":"  结构化程序设计所规定的三种基本控制结构是顺序、选择、输出。请问这句话的说法是正确的吗？  ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"\n  \n  在C++中，定义结构体类型struct时不能有成员函数，只有class可以有成员函数。\n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"  以下叙述中正确的是 (       )。  ","choices":["\n预处理命令行必须位于源文件的开头\n","\n在源文件的一行上可以有多条预处理命令\n","\n宏名必须用大写字母表示\n","\n宏替换不占用程序的运行时间\n"],"correct_choice":"\n宏替换不占用程序的运行时间\n"},{"title":"下面这段程序的输出是什么?\nclass A{\n    public:\n        A(){p();}\n        virtual void p(){print(\"A\")}\n        virtual ~A(){p();}\n};\nclass B:public A{\n    public:\n        B(){p();}\n        void p(){print(\"B\")}\n        ~B(){p();}\n};\nint main(int, char**){\n        A* a=new B();\n        delete a;\n}\n\n","choices":["\nAABB\n","\nBBAA\n","\nABAB\n","\nABBA\n"],"correct_choice":"\nABBA\n"},{"title":"\n  C语言用（）表示逻辑“真”。\n","choices":["\ntrue\n","\n整数值\n","\n非零整数值\n","\nT\n"],"correct_choice":"\n非零整数值\n"},{"title":"写出下面程序的输出结果 class A\n{\npublic:\n void FuncA()\n {\n     printf( \"FuncA called\\n\" );\n }\n virtual void FuncB()\n {\n     printf( \"FuncB called\\n\" );\n }\n};\nclass B : public A\n{\npublic:\n void FuncA()\n {\n     A::FuncA();\n     printf( \"FuncAB called\\n\" );\n }\n virtual void FuncB()\n {\n     printf( \"FuncBB called\\n\" );\n }\n};\nvoid main( void )\n{\n B\tb;\n A\t*pa;\n pa = &b;\n A *pa2 = new A;\n pa->FuncA(); （ 3） \n pa->FuncB(); （ 4）\n pa2->FuncA(); （ 5）\n pa2->FuncB();\n delete pa2;\n}\n\n","choices":["\nFuncA called\nFuncB called\nFuncA called\nFuncB called\n","\nFuncA called\nFuncBB called\nFuncA called\nFuncB called\n","\nFuncA called\nFuncBB called\nFuncAB called\nFuncBB called\n","\nFuncAB called\nFuncBB called\nFuncA called\nFuncB called\n"],"correct_choice":"\nFuncA called\nFuncBB called\nFuncA called\nFuncB called\n"},{"title":"  有如下类定义： \nclass A\n{\npublic:\n    int fun1();\n    virtual void fun2();\nprivate:\n    int _a;\n};\n  在32位机器上，请问sizeof(A)的值为： ","choices":["\n12\n","\n8\n","\n4\n","\n1\n"],"correct_choice":"\n8\n"},{"title":"有一段年代久远的C++代码，内部逻辑复杂，现在需要利用其实现一个新的需求，假定有以下可行的方案，应当优先选择","choices":["\n修改老代码的接口，满足新的需求\n","\n将老代码抛弃，自己重新实现类似的逻辑\n","\n修改老代码的内部逻辑，满足新的需求\n","\n在这段代码之外写一段代码，调用该代码的一些模块，完成新功能需求\n"],"correct_choice":"\n在这段代码之外写一段代码，调用该代码的一些模块，完成新功能需求\n"},{"title":"  有以下程序 \n#include < stdio.h >\nstruct S\n{ \n    int a;\n    int b; \n};\nmain( )\n{ \n    struct S a, *p=&a;\n    a.a = 99;\n    printf( \"%d\\n\",  ____);\n}\n  程序要求输出结构体中成员a的数据,以下不能填入横线处的内容是? ","choices":["\na.a\n","\n* p.a\n","\np - > a\n","\n( * p ) . a\n"],"correct_choice":"\n* p.a\n"},{"title":"  若有以下程序 \n#include < stdio. h > \nchar *a =\" you\";\nchar b[ ] =\" Welcome you to China!\" ;\nmain()\n{\n    int i,j=0; char * p;\n    for(i=0;b[ i ] ! ='\\0';i + + ) \n    { \n        if ( * a = = b[ i ] )\n        { \n            p=a;\n            for(j=i;*p!='\\0';j+ +)\n            {\n                if(*p! = b[ j ]) break;\n                p++ ;\n            }\n            if(*p= ='\\0') \n                break;\n            ｝\n   }\n   printf(\"%s\",& b[ i ] );\n｝\n  则程序的输出结果是? ","choices":["\nChina!\n","\nto China!\n","\nme you to China!\n","\nyou to China!\n"],"correct_choice":"\nyou to China!\n"},{"title":"如果是类 B 在类 A 的基础上构造，那么就称（   ）。","choices":["\n类 A 为基类、父类或超类，类 B 为派生类、子类或友元类\n","\n类 A 为基类、父类或超类，类 B 为派生类或子类\n","\n类 A 为派生类、子类或友元类，类 B 为基类、父类或超类\n","\n类 A 为派生类或子类类，B 为基类、父类或超类\n"],"correct_choice":"\n类 A 为基类、父类或超类，类 B 为派生类或子类\n"},{"title":"  字符常量的长度肯定为1。请问这句话的说法是正确的吗？ ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"以下代码的输出是（）\nint a[5]={1,2,3,4,5};\nint *ptr=(int*)(&a+1);\nprintf(\"%d,%d\",*(a+1),*(ptr-1));\n","choices":["\n1，2\n","\n2，5\n","\n2，1\n","\n1，5\n"],"correct_choice":"\n2，5\n"},{"title":"下列 描述中，（） 是抽象类特有的","choices":["\n不可以声明虚函数\n","\n不可以定义友元函数\n","\n不可以进行构造函数重载\n","\n不可以实例化\n"],"correct_choice":"\n不可以实例化\n"},{"title":"  假定CSomething是一个类，执行下面这些语句之后，内存里创建了____个CSomething对象。 \n\n  CSomething a();\nCSomething b(2);\nCSomething c[3];\nCSomething &ra = b;\nCSomething d=b;\nCSomething *pA = c;\nCSomething *p = new CSomething(4);\n","choices":["\n10\n","\n9\n","\n8\n","\n7\n","\n6\n","\n5\n"],"correct_choice":"\n6\n"},{"title":"  有以下定义语句 double a,b; int w; long c;     若各变量已正确赋值，则下列选项中正确的表达式是(  )。  ","choices":["\na=a+b=b++\n","\nw%(int)a+b)\n","\n(c+w)%(int)a\n","\nw=a==b;\n"],"correct_choice":"\n(c+w)%(int)a\n\nw=a==b;\n"},{"title":"在 C 语言中下面那个语句的结果是 1 ？","choices":["\nmain 函数正常结束的返回值\n","\nreturn 7&1;\n","\nchar *p=\"hello\"; return p == \"hello\";\n","\n上面都不对\n"],"correct_choice":"\nreturn 7&1;\n\nchar *p=\"hello\"; return p == \"hello\";\n"},{"title":"\n  设变量a是整型，f是实型，i是双精度型，则表达式10+'a'+i*f值的数据类型为_____（）\n\n\n  \n","choices":["\nint\n","\nfloat\n","\ndouble\n","\n不确定\n"],"correct_choice":"\ndouble\n"},{"title":"  若有定义:int aa[ 8];则以下表达式中不能代表数组元 aa[1]的地址的是（）。  ","choices":["\n&aa[0]+1\n","\n&aa[1]\n","\n&aa[0]++\n","\naa+1\n"],"correct_choice":"\n&aa[0]++\n"},{"title":"\n  没用参数的两个函数是不能重载的.说法是否正确？\n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"bool v0=2*0&&2*2;\nbool v1=2*0||2*2; \nv0、v1的值分别是 ","choices":["\n4,0\n","\n0,4\n","\n1,0\n","\n0,1\n"],"correct_choice":"\n0,1\n"},{"title":"假定x和y为double型，则表达式x=2，y=x+3/2的值是","choices":["\n3.500000\n","\n3\n","\n2.000000\n","\n3.000000\n"],"correct_choice":"\n3.000000\n"},{"title":"STL中的哪种结构在增加成员时可能会引起原有成员的存储位置发生：","choices":["\nmap；\n","\nset;\n","\nlist;\n","\nvector;\n"],"correct_choice":"\nvector;\n"},{"title":"下列关于赋值运算符“=”重载的叙述中，正确的是\n","choices":["\n赋值运算符只能作为类的成员函数重载\n","\n默认的赋值运算符实现了“深层复制”功能\n","\n重载的赋值运算符函数有两个本类对象作为形参\n","\n如果己经定义了复制拷贝构造函数，就不能重载赋值运算符\n"],"correct_choice":"\n赋值运算符只能作为类的成员函数重载\n"},{"title":"  关于 return 语句，下列正确的说法是（）。 ","choices":["\n在主函数和其他函数中均可出现\n","\n必须在每个函数中出现\n","\n可以在同一个函数中出现多次\n","\n只能在除主函数之外的函数中出现一次\n"],"correct_choice":"\n在主函数和其他函数中均可出现\n\n可以在同一个函数中出现多次\n"},{"title":"  C 语言中，函数值类型的定义可以缺省，此时函数值的隐含类型是（）。  ","choices":["\nvoid\n","\nint\n","\nfloat\n","\ndouble\n"],"correct_choice":"\nint\n"},{"title":"do……while和while……do有什么区别？","choices":["\n两个都是循环一遍再判断\n","\n前一个循环一遍再判断，后一个判断以后再循环\n","\n前一个判断以后再循环，后一个循环一遍再判断\n","\n两个都是判断以后再循环\n"],"correct_choice":"\n前一个循环一遍再判断，后一个判断以后再循环\n"},{"title":"  C 语言源程序的基本单位是（）。 ","choices":["\n过程\n","\n函数\n","\n子程序\n","\n标识符\n"],"correct_choice":"\n函数\n"},{"title":"\n  循环语句while（!E）；中的表达式!E等价于_______\n  _（）\n\n\n  \n","choices":["\nE!＝0\n","\nE!＝1\n","\nE＝＝0\n","\nE＝＝1\n"],"correct_choice":"\nE＝＝0\n"},{"title":"  下面的程序段的运行结果是（） \n\n     char a[7] = \"abcdef\";  \n     char b[4] = \"ABC\";  \n     strcpy(a, b);  \n     printf(\"%c\", a[5]);  \n","choices":["\n空格\n","\n\\0\n","\ne\n","\nf\n"],"correct_choice":"\nf\n"},{"title":"\n  下列程序的执行结果是（）\n\n\n  \n    \n  \n","choices":["\na=639,b=78,c=12\n","\na=12,b=639,c=78\n","\na=639,b=12,c=78\n","\na=78,b=12,c=639\n"],"correct_choice":"\na=639,b=78,c=12\n"},{"title":"  Test执行后的输出是： \nvoid Test {\n    class B {\n        public:\n        B( void )\n        {\n            cout << \"B\\t\";\n        }\n        \n        \n        ~B( void )\n        {\n            cout << \"~B\\t\";\n        }\n    };\n    struct C {\n        C( void )\n        {\n            cout << \"C\\t\";\n        }\n        \n        \n        ~C( void )\n        {\n            cout << \"~C\\t\";\n        }\n    };\n    struct D : B {\n        D { cout << \"D\\t\"; }\n        ~D { cout << \"~D\\t\"; }\n        private: C c;\n    };\n    D d;\n}\n\n","choices":["\nB C D ~D ~ C ~B\n","\nD C B ~B ~C ~D\n","\nC D B ~B ~D ~C\n","\nC ~C D ~D B ~B\n"],"correct_choice":"\nB C D ~D ~ C ~B\n"},{"title":"  有以下程序   void \nf(int  *x,int  *y)\n{    \nint  t;\n   \nt=*x;*x=*y;*y=t;\n}\nmain()\n{  \nint \na[8]={1,2,3,4,5,6,7,8},i,*p,*q;\n   \np=a;q=&a[7];\n   \nwhile(p<q)\n   {\n  \nf(p,q);\n  \np++;\n  \nq--;\n   }\n  \nfor(i=0;i<8;i++)\n      printf(\"%d,\",a[i]);\n}   程序运行后的输出结果是(     ) 。  ","choices":["\n8，2，3，4，5，6，7，1，\n","\n5，6，7，8，1，2，3，4，\n","\n1，2，3，4，5，6，7，8，\n","\n8，7，6，5，4，3，2，1，\n"],"correct_choice":"\n8，7，6，5，4，3，2，1，\n"},{"title":"  求下面函数的返回值。 \nint func(x)\n {\n    int countx = 0;     \n     while (x)\n     {\n      countx ++; \n      x = x & (x - 1); \n     } \n     return countx;\n }\n\n  \n\n  假定x = 9999。 ","choices":["\n8\n","\n1\n","\n100\n","\n其他\n"],"correct_choice":"\n8\n"},{"title":"下面程序执行结果: using namespace std; \nclass A{ \n    public: \n        virtual void f() { cout << \"A::f() \"; } \n        void f() const { cout << \"A::f() const \"; } \n}; \nclass B : public A { \n    public: \n        void f() { cout << \"B::f() \"; } \n        void f() const { cout << \"B::f() const \"; } \n}; \nvoid g(const A* a) { \n    a->f(); \n} \nint main(int argc, char *argv[]) { \n    A* p = new B(); \n    p->f(); \n    g(p); \n    delete(p); \n    return 0; \n}","choices":["\nB::f() B::f() const\n","\nB::f() A::f() const\n","\nA::f() B::f() const\n","\nA::f() A::f() const\n"],"correct_choice":"\nB::f() A::f() const\n"},{"title":"（  ）面向对象程序设计语言不同于其他语言的主要特点。","choices":["\n继承性\n","\n消息传递\n","\n多态性\n","\n封装性\n"],"correct_choice":"\n继承性\n\n多态性\n\n封装性\n"},{"title":"下述静态数据成员的特征中，(       )是错误的。","choices":["\n定义静态数据成员时前边要加修饰符 static\n","\n静态数据成员要在类体外进行初始化\n","\n引用静态数据成员时，要在静态数据成员名前加＜类名＞和作用域运算符\n","\n静态数据成员不是所有对象所共用的。\n"],"correct_choice":"\n静态数据成员不是所有对象所共用的。\n"},{"title":"两个指针变量的值相等时，表明两个指针变量是（        ）","choices":["\n占据同一内存单位\n","\n指向同一内存单元地址或者都为空\n","\n是两个空指针\n","\n都没有指向\n"],"correct_choice":"\n指向同一内存单元地址或者都为空\n"},{"title":"  运行下面代码，输出的结果是：        ","choices":["\n17,70\n","\n17,72\n","\n16,72\n","\n30,60\n"],"correct_choice":"\n17,72\n"},{"title":"  对于下面的代码，说法正确的是____。 \n\n  char* s1 = \"Hello world\";\nchar s2[] = \"Hello world\";\ns1[2] = 'E';     // 1\ns2[2] = 'E';     // 2\n*(s1 + 2) = 'E';  // 3\n*(s2 + 2) = 'E';  // 4\n\n","choices":["\n语句2、4是非法的\n","\n语句3、4是非法的\n","\n语句1、3是非法的\n","\n仅语句1是非法的\n","\n仅语句2是非法的\n","\n语句1～4都是合法的\n"],"correct_choice":"\n语句1、3是非法的\n"},{"title":"  C 语言中，char 类型数据占（）。 ","choices":["\n1个字节\n","\n2个字节\n","\n4个字节\n","\n8个字节\n"],"correct_choice":"\n1个字节\n"},{"title":"有如下程序段： \nint c = 23;\nprintf(“%d\\n”, c&c);\n 请问执行结果是：","choices":["\n0\n","\n46\n","\n23\n","\n以上都不对\n"],"correct_choice":"\n23\n"},{"title":"  下列代码的输出是什么？（）        ","choices":["\nWORLD,LO,SAYHI,EW\n","\nWORLD,LO,HI,NEW\n","\nNEW,LO,SAYHI,EW\n","\nWORLD,LO,HI,EW\n"],"correct_choice":"\nWORLD,LO,HI,EW\n"},{"title":"在（    ）情况下适宜采用内联函数","choices":["\n函数代码小，频繁调用\n","\n函数代码多，频繁调用\n","\n函数体含有递归语句\n","\n函数体含有循环语句\n"],"correct_choice":"\n函数代码小，频繁调用\n"},{"title":"下列关于构造函数的描述中，错误的是（）","choices":["\n构造函数可以设置默认的参数\n","\n构造函数在定义类对象时自动执行\n","\n构造函数可以是内联函数\n","\n构造函数不可以重载\n"],"correct_choice":"\n构造函数不可以重载\n"},{"title":"下面程序段的输出结果是：\nint a = 5, b = 4, c = 3, d = 2;\n\tif (a>b>c)\n\t\tprintf(\"%d\\n\", d);\n\telse if ((c - 1 >= d) == 1)\n\t\tprintf(\"%d\\n\", d + 1);\n\telse\n\t\tprintf(\"%d\\n\", d + 1);","choices":["\n2\n","\n3\n","\n4\n","\n编译错误\n"],"correct_choice":"\n3\n"},{"title":"  通过 return 语句，函数可以带回一个或一个以上的返回值。请问这句话的说法是正确的吗？  ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"  执行下列语句后的结果为（）。    int x=3,y;    int *px=&x;    y=*px++; ","choices":["\nx=3,y=4\n","\nx=3,y=3\n","\nx=4,y=4\n","\nx=3,y 不知\n"],"correct_choice":"\nx=3,y=3\n"},{"title":"int **pp,*p,a=10,b=20; \npp=&p;\np=&a;\np=&b; \nprintf(\"%d,%d\",*p,**pp)\n若有定义和语句，则输出结果是？\n","choices":["\n10 10\n","\n10 20\n","\n20 10\n","\n20 20\n"],"correct_choice":"\n20 20\n"},{"title":"局部变量只对main函数起作用，而全局变量对所有函数起作用。","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"设C语言中，一个int型数据在内存中占2个字节，则unsigned int型数据的取值范围为","choices":["\n0~255\n","\n0~3267\n","\n0~65535\n","\n0~2147483647\n"],"correct_choice":"\n0~65535\n"},{"title":"以下代码的输出结果是？\nmain() { \n int i=0; \n switch(i) { \n   case 0: \n     i++; \n     printf(\"%d..\",i);  \n   case 1: \n     printf(\"%d..\",i); \n   case 2: \n      printf(\"%d..\",i); \n    } \n}","choices":["\n..1..1..0\n","\n0..1..1\n","\n1..1..1..\n","\n1\n"],"correct_choice":"\n1..1..1..\n"},{"title":"  在32位编译器上,设有定义  char * strl = \"Hello\",str2[ ] = \"Hello\";   则以下语句  printf(\"%d %d\",sizeof(str1),sizeof(str2));   的输出结果是 ","choices":["\n5 6\n","\n5 5\n","\n6 5\n","\n4 6\n"],"correct_choice":"\n4 6\n"},{"title":"  关于虚函数和纯虚函数，以下说法正确的是（）?  ","choices":["\n子类必须重载父类里的虚函数\n","\n子类必须重载父类里的纯虚函数\n","\n虚基类的构造函数在非虚基类之前调用\n","\n带有纯虚函数的类不能直接实例化\n"],"correct_choice":"\n虚基类的构造函数在非虚基类之前调用\n\n带有纯虚函数的类不能直接实例化\n"},{"title":"  逻辑表达式（x>0 || y==5）的相反表达式为（   ）。","choices":["\nx<=0 || y！=5\n","\nx<=0 && y！=5\n","\nx>0 || y！=5\n","\nx>0 && y==5\n"],"correct_choice":"\nx<=0 && y！=5\n"},{"title":"  字符串只能存放在字符型数组中。请问这句话的说法是正确的吗？ ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"  以下叙述正确的是（  ）。  ","choices":["\n可以把define和if定义为用户标识符\n","\n可以把define定义为用户标识符，但不能把if定义为用户标识符\n","\n可以把if定义为用户标识符，但不能把define定义为用户标识符\n","\ndefine和if都不能定义为用户标识符\n"],"correct_choice":"\n可以把define定义为用户标识符，但不能把if定义为用户标识符\n"},{"title":"全局对象在main退出后，程序结束前析构吗？","choices":["\n是\n","\n错\n"],"correct_choice":"\n是\n"},{"title":"64位机上，一个结构体有三个成员，分别是char、int、short类型，三个成员位于结构体中不同位置时整个结构体的大小可能是下面哪些值？","choices":["\n12\n","\n7\n","\n8\n","\n16\n"],"correct_choice":"\n12\n\n8\n"},{"title":"由C++源程序文件编译而成的目标文件的缺省扩展名为(     )。","choices":["\ncpp\n","\nexe\n","\nobj\n","\nlik\n"],"correct_choice":"\nobj\n"},{"title":"  已知各变量的类型说明如下：     int k,a,b ；     unsigned int w=5 ；     double x=1.42 ；   则以下不符合c语言语法的表达式是","choices":["\nx％3\n","\nw+=-20\n","\nk=（a=200,b=300）\n","\na+=a-=a=9\n"],"correct_choice":"\nx％3\n"},{"title":"下面选项中合法的字符常量是？","choices":["\n\"X\"\n","\n'X'\n","\n'abc'\n","\n'\\'\n"],"correct_choice":"\n'X'\n"},{"title":"在C语言中,关于静态变量的说法,正确的有()","choices":["\n静态变量和常量的作用相同\n","\n函数中的静态变量,在函数退出后不被释放\n","\n静态变量只可以赋值一次,赋值后则不能改变\n","\n静态全局变量的作用域为一个程序的所有源文件\n"],"correct_choice":"\n函数中的静态变量,在函数退出后不被释放\n"},{"title":"若建立以下链表结构,指针P,S分别指向如图所示结点    data next  data next   data next\n  \n\n  则不能将S所指结点插入到链表末尾的语句组是? ","choices":["\np=p-> next; s->next=p;p-> next=s;\n","\ns->next= '\\0'; p=p-> next; p-> next=s;\n","\np=p-> next; s ->next=p-> next;p-> next=s;\n","\np= ( *p ).next; ( * s ).next=( * p ).next; ( *p ).next=s;\n"],"correct_choice":"\np=p-> next; s->next=p;p-> next=s;\n"},{"title":"  下列不属于软件本质特征的是（）。 ","choices":["\n一致性\n","\n复杂性\n","\n可见性\n","\n可变性\n"],"correct_choice":"\n可见性\n"},{"title":"  What is output if you compile and execute the following code?  \nvoid main()\n{\n    int i = 11;\n    int const *p = &i;\n    p++;\n    printf(“ % d”, *p);\n}\n\n","choices":["\n11\n","\n12\n","\nGarbage value\n","\nCompile error\n","\nNone of above\n"],"correct_choice":"\nGarbage value\n"},{"title":"下列关于联合的描述中，错误的是？","choices":["\n联合变量定义时不可初始化\n","\n联合的成员是共址的\n","\n联合的成员在某一个时刻只有当前的是有效的\n","\n联合变量占有的内存空间是该联合变量中占有最大内存空间的成员在内存对齐时所需的存储空间\n"],"correct_choice":"\n联合变量定义时不可初始化\n"},{"title":"  有以下程序 \n#include<stdio.h>\nmain(){\n    int i=1;\n    i=i^i;\n    printf(\"%d\\n\",i);\n｝\n  程序运行后的输出结果是？ ","choices":["\n1\n","\n-1\n","\n0\n","\n7\n"],"correct_choice":"\n0\n"},{"title":"拷贝构造函数的特点是（）","choices":["\n该函数名同类名，也是一种构造函数，该函数返回自身引用\n","\n该函数只有一个参数，是对某个对象的引用\n","\n每个类都必须有一个拷贝初始化构造函数，如果类中没有说明拷贝构造函数，则编译器系统会自动生成一个缺省拷贝构造函数，作为该类的保护成员\n","\n拷贝初始化构造函数的作用是将一个已知对象的数据成员值拷贝给正在创建的另一个同类的对象\n"],"correct_choice":"\n拷贝初始化构造函数的作用是将一个已知对象的数据成员值拷贝给正在创建的另一个同类的对象\n"},{"title":"假定n的值为5，则表达式n++的值为（   ）。","choices":["\n6\n","\n5\n","\n4\n","\n7\n"],"correct_choice":"\n5\n"},{"title":"\n  设有定义: double array[10]; 表达式  sizeof(array)/sizeof(array[0])的结果是\n  array数组中元素个数。说法是否正确？\n\n\n  \n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"  在 C 语言中，引用数组元素时，其数组下标的数据类型允许是（） \n  注：选择最适当的 ","choices":["\n整型常量\n","\n整型表达式\n","\n整型变量\n","\n任何类型的表达式\n"],"correct_choice":"\n整型表达式\n"},{"title":"  C 语言俗称\"低级语言的高级形式\",这说明C 语言的功能不强。请问这句话的说法是正确的吗？  ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"\n  在C语言程序中，以下说法正确的是（ ）。\n","choices":["\n函数的定义可以嵌套,但函数的调用不可以嵌套\n","\n函数的定义不可以嵌套,但函数的调用可以嵌套\n","\n函数的定义和函数的调用都不可以嵌套\n","\n函数的定义和函数的调用都可以嵌套\n"],"correct_choice":"\n函数的定义不可以嵌套,但函数的调用可以嵌套\n"},{"title":"\n  有以下定义：\n\n\n     int a[10];  \n     char b[80];  \n\n\n  函数声明为：\n\n\n     void sss(char[],int[]);  \n\n\n  则正确的函数调用形式是（）。\n","choices":["\nsss(a,b);\n","\nsss(char b[],int a[]);\n","\nsss(b[],a[]);\n","\nsss(b,a);\n"],"correct_choice":"\nsss(b,a);\n"},{"title":"若要重载+、=、<<、=和[]运算符，则必须作为类成员重载的运算符是\n","choices":["\n+和=\n","\n=和<<\n","\n＝＝和<<\n","\n＝和[]\n"],"correct_choice":"\n＝和[]\n"},{"title":"  在 C 语言中，char 型数据在内存中的存储形式是（）。  ","choices":["\n补码\n","\n反码\n","\n原码\n","\nASCII 码\n"],"correct_choice":"\nASCII 码\n"},{"title":"一个32位的机器,该机器的指针是多少字节?","choices":["\n2\n","\n4\n","\n8\n","\n不确定\n"],"correct_choice":"\n4\n"},{"title":"设 x 和 y 均为 int 型变量，在不考虑数据溢出的情况下，则以下语句:x+=y;y=x-y;x-=y;的功能是?","choices":["\n把x和y按从大到小排列\n","\n把x和y按从小到大排列\n","\n无确定结果\n","\n交换x和y中的值\n"],"correct_choice":"\n交换x和y中的值\n"},{"title":"有变量int i = 0; int a = i++; int b=++a; int c = a+b; 请问表达式 a?b:c 的值是","choices":["\n0\n","\n1\n","\n2\n","\n3\n"],"correct_choice":"\n1\n"},{"title":"\n  对二维数组正确定义的形式是:int a(2)(3);是否正确？ \n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"  下面程序的输出是（ ）？   #include <stdio.h>\nint fun3(int x)\n{\n static int a=2;\n a+=x;\n return(a);\n}\nvoid main()\n{\n int k=2,m=1,n;\n n=fun3(k);\n n+=fun3(m);\n printf(\"%d\\n\",n);\n} ","choices":["\n3\n","\n5\n","\n7\n","\n9\n"],"correct_choice":"\n9\n"},{"title":"  若有以下说明： \n\n     int x[9] = {1,2,3,4,5,6,7,8,9};  \n     char c = 'a', d, f;  \n  \n    \n  \n     以下表达式中值为 3 的是（）  \n","choices":["\nx[f-c]\n","\nx[3]\n","\nx['c'-'d']\n","\nx['c'-c];\n"],"correct_choice":"\nx['c'-c];\n"},{"title":"  下 面 程 序 段 的 输 出 结 果 为 （）。    int a,b;b=(a=3*5,a*4,a*5); printf(\"%d\",b);  ","choices":["\n60\n","\n75\n","\n65\n","\n无确定值\n"],"correct_choice":"\n75\n"},{"title":"如下程序用于输出“Welcome to Huawei Test”,请指出其中的两处错误。\nchar * GetWelcome(void){\n    char * pcWelcome;\n    char * pcNewWelcome;\n    pcWelcome=\"Welcome to Huawei Test\";\n    pcNewWelcome=(char *)malloc(strlen(pcWelcome));    //1\n    if(NULL==pcNewWelcome){\n        return NULL;        //2\n    }\n    strcpy(pcNewWelcome, pcWelcome);    //3\n    return pcNewWelcome;            //4\n}\n\n  \n","choices":["\n1\n","\n2\n","\n3\n","\n4\n"],"correct_choice":"\n1\n\n3\n"},{"title":"  执行下面的程序段后，变量 k 的值为（） \n\n     int k = 3, s[2];  \n     s[0] = k;  \n     k = s[1] * 10;  \n","choices":["\n无法确定\n","\n33\n","\n30\n","\n10\n"],"correct_choice":"\n无法确定\n"},{"title":"  若有以下程序 \n#include<stdio.h>\nmain( )\n{ \n    int a=-2,b=0;\n    while(a++) ++b;\n    printf(\"%d,%d\\n\",a,b);\n}\n  则程序的输出结果是? ","choices":["\n1,1\n","\n1,2\n","\n2,1\n","\n2,2\n"],"correct_choice":"\n1,2\n"},{"title":"关于重载和多态正确的是","choices":["\n如果父类和子类都有相同的方法,参数个数不同,将子类对象赋给父类后,由于子类继承于父类,所以使用父类指针\n调用父类方法时,实际调用的是子类的方法\n","\n选项全部都不正确\n","\n重载和多态在C++面向对象编程中经常用到的方法,都只在实现子类的方法时才会使用\n","\nclass A{\n\tvoid test(float a){cout<<\"1\";}\n};\nclass B:public A{\n\tvoid test(int b){cout<<\"2\";}\n};\nA *a=new A;\nB *b=new B;\na=b;\na.test(1.1);\n结果是1\n\n"],"correct_choice":"\n选项全部都不正确\n"},{"title":"\n  在声明类时,关键字private、public和protected出现\n  任意次数。说法是否正确？\n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"  有以下程序   #define \nP   3\n#define \nF(int  x)   { \nreturn  (P*x*x);}\nmain()\n{\n  \nprintf(\"%d\\n\",F(3+5));\n}   程序运行后的输出结果是(     ) 。  ","choices":["\n192\n","\n29\n","\n25\n","\n编译出错\n"],"correct_choice":"\n编译出错\n"},{"title":"C++里面如何声明const void f(void)函数为C程序中的库函数。","choices":["\nstatic \"C\"\n","\nextern \"C\"\n","\nexplict \"C\"\n","\nregister \"C\"\n"],"correct_choice":"\nextern \"C\"\n"},{"title":"  下面程序的输出是什么？ \n\n  #include<stdio.h>\n#include<string.h>\n#include <pthread.h>\n \nvoid* print1(void* data){\n    printf(\"1 \");\n}\n \nvoid* print2(void* data){\n    printf(\"2 \");\n}\n\nvoid* print3(void* data){\n    printf(\"3 \");\n}\n\nint main(void){\n    pthread_t t,t1,t2;\n    \n    pthread_create(&t,0,print1,NULL);\n    pthread_create(&t1,0,print2,NULL);\n    pthread_create(&t2,0,print3,NULL);\n    \n    pthread_join(t,NULL);\n    pthread_join(t1,NULL);\n    pthread_join(t2,NULL);\n    printf(\"\\n\");\n}\n","choices":["\n1 2 3\n","\n1 3 2\n","\n3 2 1\n","\n不确定\n"],"correct_choice":"\n不确定\n"},{"title":"void getmemory(char *p)\n{ \n    p=(char*)malloc(100);\n}\nvoid test(void)\n{\n   char * str = null;\n   getmemory(str);\n   strcpy(str,”hello,world”);\n   printf(str);\n}\n\n 请问运行test函数会有什么样的结果？ ","choices":["\n编译错误\n","\n输出\"hello world\"\n","\n输出\"\"\n","\nsegmentation fault\n"],"correct_choice":"\nsegmentation fault\n"},{"title":"  在位运算中,操作数每右移一位,其结果相当于（）。  ","choices":["\n操作数乘以2\n","\n操作数除以2\n","\n操作数乘以16\n","\n操作数除以16\n"],"correct_choice":"\n操作数除以2\n"},{"title":"unsigned char *p1; \nunsigned long *p2; \np1=(unsigned char *)0x801000; \np2=(unsigned long *)0x810000; \n  请问p1+5= 什么？\n  p2+5= 什么？","choices":["\n801005   810005\n","\n801010   810014\n","\n801005   810014\n","\n801010  810015\n"],"correct_choice":"\n801005   810014\n"},{"title":"\n  int a [10]={0, 1, 2, 3, 4, 5};a[6]~ a[9]均为0.说法是否正确？\n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"（）是给对象取了一个别名，他引入了对象的同义词：","choices":["\n指针\n","\n枚举\n","\n引用\n","\n结构\n"],"correct_choice":"\n引用\n"},{"title":"下面关于类和对象的描述中，错误的是：","choices":["\n类就是C语言中的结构体类型，对象就是C语言中的结构体变量\n","\n类和对象之间的关系是抽象和具体的关系\n","\n对象是类的实例，一个对象必须属于一个已知的类\n","\n类是具有共同行为的若干对象的统一描述体\n"],"correct_choice":"\n类就是C语言中的结构体类型，对象就是C语言中的结构体变量\n"},{"title":"基类的公有成员是其私有派生类的（   ）成员","choices":["\n不可见\n","\n私有\n","\n保护\n","\n公有\n"],"correct_choice":"\n私有\n"},{"title":"  若要打开A盘上user子目录下名为abc.txt的文本文件进行读、写操作，下面符合此要求的函数调用是（ ）。  ","choices":["\nfopen(\"A:\\user\\abc.txt\",\"r\")\n","\nfopen(\"A:\\\\user\\\\abc.txt\",\"r+\")\n","\nfopen(\"A:\\user\\abc.txt\",\"rb\")\n","\nfopen(\"A:\\\\user\\\\abc.txt\",\"w\")\n"],"correct_choice":"\nfopen(\"A:\\\\user\\\\abc.txt\",\"r+\")\n"},{"title":"  函数的形式参数隐含的存储类型说明是（）。  ","choices":["\nextern\n","\nstatic\n","\nregister\n","\nauto\n"],"correct_choice":"\nauto\n"},{"title":"  下列代码的运行结果（ ）  int a[]={1,2,3,4};\nint *b=a;\n*b+=2;\n*(b+2)=2;\nb++;\nprintf(\"%d,%d\\n\",*b,*(b+2));","choices":["\n1,3\n","\n1,2\n","\n2,4\n","\n3,2\n"],"correct_choice":"\n2,4\n"},{"title":"类模板的使用实际上是类模板实例化成一个具体的__________。","choices":["\n类\n","\n函数\n","\n模板类\n","\n对象\n"],"correct_choice":"\n类\n"},{"title":"使用 char* p = new char[100]申请一段内存，然后使用delete p释放，有什么问题？","choices":["\n会有内存泄露\n","\n不会有内存泄露，但不建议用\n","\n编译就会报错，必须使用delete []p;\n","\n编译没问题，运行会直接崩溃\n"],"correct_choice":"\n不会有内存泄露，但不建议用\n"},{"title":"\n  用户不可以调用的函数是\n  main函数。说法是否正确？\n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"下面有关虚函数和非虚函数的区别说法错误的是？","choices":["\n子类的指针访问虚函数访问的是子类的方法\n","\n子类的指针访问非虚函数访问的是子类的方法\n","\n父类的指针访问虚函数访问的是父类的方法\n","\n父类的指针访问非虚函数访问的是父类的方法\n"],"correct_choice":"\n父类的指针访问虚函数访问的是父类的方法\n"},{"title":"  阅读程序，请选择输出结果 \n\n  \n\n#include <iostream>\nusing namespace std;\n\n#define N 7\nint fun1(char s[], char a, int n)\n{\n    int j;\n    j = n;\n    while (a < s[j] && j > 0) j--;\n    return j;\n}\n\nint fun2(char s[], char a, int n)\n{\n    int j;\n    j = 1;\n    while (a > s[j] && j <= n)\n        j++;\n    return j;\n}\nint main()\n{\n    char s[N + 1];\n    int k, p;\n    for (k = 1; k <= N; k++)\n        s[k] = 'A' + 2 * k + 1;\n    p = fun1(s, 'M', N);\n    cout << p + fun2(s, 'M', N) << endl;\n    \n    return 0;\n}\n","choices":["\n9\n","\n10\n","\n11\n","\n12\n"],"correct_choice":"\n11\n"},{"title":"\n  一维字符数组的输入:char str[21] ;cin<< str;说法是否正确？ \n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"\n  使用fseek函数可以实现的操作是（ ）\n","choices":["\n改变文件指针的当前位置\n","\n文件的顺序读写\n","\n文件的随机读写\n","\n以上都不对\n"],"correct_choice":"\n改变文件指针的当前位置\n"},{"title":"  对结构体类型的变量的成员的访问，无论数据类型如何都可使用的运算符是（）。  ","choices":["\n.\n","\n-\n","\n*\n","\n&\n"],"correct_choice":"\n.\n"},{"title":"  在一个16位的机器，以下结构由于边界对齐浪费了多少空间（） \n\n  struct{\n     char a;\n     int b;\n     char c;\n}\n","choices":["\n8\n","\n4\n","\n6\n","\n2\n"],"correct_choice":"\n2\n"},{"title":"若希望当 A 的值为奇数时,表达式的值为\"真\",A 的值为偶数时,表达式的值为\"假\",则以下不能满足要求的表达式是（）。","choices":["\nA%2==1\n","\n!(A%2==0)\n","\n!(A%2)\n","\nA%2\n"],"correct_choice":"\n!(A%2)\n"},{"title":"\n  下面选项中关于位运算的叙述正确的是（）\n","choices":["\n位运算的对象只能是整型或字符型数据\n","\n位运算符都需要两个操作数\n","\n左移运算的结果总是原操作数据2倍\n","\n右移运算时，高位总是补0\n"],"correct_choice":"\n位运算的对象只能是整型或字符型数据\n"},{"title":"  下列标识符中,不合法的 C 语言用户自定义标识符是（）。  ","choices":["\nprintf\n","\nenum\n","\n_\n","\nsin\n"],"correct_choice":"\nenum\n"},{"title":"  () 的作用是将源程序文件进行处理，生成一个中间文件，编译系统将对此中间文件进行编译并生成目标代码。  ","choices":["\n编译预处理\n","\n汇编\n","\n生成安装文件\n","\n编译\n"],"correct_choice":"\n编译预处理\n"},{"title":"在公有派生情况下，有关派生类对象和基类对象的关系，下列叙述不正确的是(    ) ","choices":["\n派生类的对象可以赋给基类的对象\n","\n派生类的对象可以初始化基类的引用\n","\n派生类的对象可以直接访问基类中的成员\n","\n派生类的对象的地址可以赋给指向基类的指针\n"],"correct_choice":"\n派生类的对象可以直接访问基类中的成员\n"},{"title":"  下列选项中正确的语句组是（）。 ","choices":["\nchar s[8]; s={\"Beijing\"};\n","\nchar *s; s={\"Beijing\"};\n","\nchar s[8]; s=\"Beijing\";\n","\nchar *s; s=\"Beijing\";\n"],"correct_choice":"\nchar *s; s={\"Beijing\"};\n\nchar *s; s=\"Beijing\";\n"},{"title":"  以下选项中合法的用户标识符是（）。 ","choices":["\nlong\n","\n_2Test\n","\n3Dmax\n","\nA.dat\n"],"correct_choice":"\n_2Test\n"},{"title":"\n  int a(5),b(3);a || b结果为1.说法是否正确？ \n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"\n  设有定义\n\n\n  char str[] = \"Hello\";\n\n\n  则语句\n  printf(\"%d %d\", sizeof(str), strlen(str));\n  的输出结果是（）\n","choices":["\n5 5\n","\n6 6\n","\n6 5\n","\n5 6\n"],"correct_choice":"\n6 5\n"},{"title":"  有以下程序运行结果为: \n#include<iostream>\nusing namespace std;\nchar fun(char x, char y) {\n\tif (x < y)\n\t\treturn x;\n\treturn y;\n}\nint main() {\n\tint a = '1', b = '1', c = '2';\n\tcout << fun(fun(a, b), fun(b, c));\n\treturn 0;\n}","choices":["\n运行出错\n","\n2\n","\n3\n","\n1\n"],"correct_choice":"\n1\n"},{"title":"\n  经过下列的语句 int j,a[10],*p;定义后,则\n  :p=p+2;合法。这句话是否正确？\n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"  有以下程序   #include <stdio.h>\nmain()\n{int\na[]={1,2,3,4,5,6,7,8,9,10,11,12,},*p=a+5,*q=NULL;\n  *q=*(p+5);\n  \nprintf(\"%d %d\\n\",*p,*q);\n}   程序运行后的输出结果是(  )。  ","choices":["\n运行后报错\n","\n6 6\n","\n6 11\n","\n5 10\n"],"correct_choice":"\n运行后报错\n"},{"title":"若有说明：int a[][4]={0,0};，则下面不正确的叙述为（）","choices":["\n数组 a 中的每个元素都可以得到初值 0\n","\n二维数组 a 的第一维大小为 1\n","\n数组 a 的行数为 1\n","\n只有数组元素 a[0][0] 和 a[0][1] 可以得到初值 0，其余元素的初值无法确定。\n"],"correct_choice":"\n只有数组元素 a[0][0] 和 a[0][1] 可以得到初值 0，其余元素的初值无法确定。\n"},{"title":"  下列程序编译时会产生错误，请根据行号选择错误的位置（）                       ","choices":["\n4\n","\n5,6\n","\n2,3\n","\n1\n"],"correct_choice":"\n4\n"},{"title":"下列代码的结果是\nmain() \n{ \n    int a[5]={1,2,3,4,5}; \n    int *ptr=(int *)(&a+1); \n    printf(\"%d,%d\",*(a+1),*(ptr-1)); \n}","choices":["\n3，5\n","\n2，4\n","\n2，5\n","\n3，4\n"],"correct_choice":"\n2，5\n"},{"title":"以下是C++的不同数据类型值的比较语句，请问这些判断语句中作为条件部分的语句编写有问题的有:","choices":["\n如果变量bVar是布尔类型：if(false==bVar){doSomeThing();}\n","\n如果变量nVar是int型：if(0==nVar){doSomeThing();}\n","\n如果变量fVar为浮点型:if(0.02=fVar){doSomeThing();}\n","\n如果变量sVar为字符串型：if（\"\"==sVar){doSomeThing();}\n"],"correct_choice":"\n如果变量fVar为浮点型:if(0.02=fVar){doSomeThing();}\n"},{"title":"已知n阶矩阵A的行列式满足|A|=1,求|A^(-1)|(A^(-1)表示A的逆矩阵）=？","choices":["\n正无穷\n","\n0\n","\n1\n","\n-1\n"],"correct_choice":"\n1\n"},{"title":"\n  指针变量的值是指指针所指向的变量在内存中的地址.说法是否正确？\n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"Which of following C++ code is correct?","choices":["\nint f() { int *a = new int(3); return *a; }\n","\nint *f() { int a[3] = {1, 2, 3}; return a; }\n","\nvector<int> f() {vector<int> v(3); return v; }\n","\nvoid f(int *ret) { int a[3] = {1, 2, 3}; ret = a++; return; }\n"],"correct_choice":"\nvector<int> f() {vector<int> v(3); return v; }\n"},{"title":"对以下二维数组的正确声明是（）","choices":["\nint a[3][];\n","\nfloat a(3,4)\n","\ndouble a[3][4];\n","\nfloat a(3)(4);\n"],"correct_choice":"\ndouble a[3][4];\n"},{"title":"  以下运算符中,优先级最高的运算符是（）。 ","choices":["\n?:\n","\n++\n","\n&&\n","\n,\n"],"correct_choice":"\n++\n"},{"title":"全局变量和局部变量在内存中的区别是什么？","choices":["\n二者没有区别\n","\n生存周期不同\n","\n作用范围不同\n","\n占用的内存大小一样\n"],"correct_choice":"\n生存周期不同\n\n作用范围不同\n"},{"title":"  若有 int a[10]={0,1,2,3,4,5,6,7,8,9},*p=a;则输出结果不为5的语句为（）。  ","choices":["\nprintf(\"%d\",*(a+5));\n","\nprintf(\"%d\",p[5]);\n","\nprintf(\"%d\",*(p+5));\n","\nprintf(\"%d\",*p[5]);\n"],"correct_choice":"\nprintf(\"%d\",*p[5]);\n"},{"title":"\n  定义输入文件流对象fin方法是:ofstream fin;  这句话是否正确？\n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"\n  定义一个输出文件流对象,并打开d盘du文件夹下的abc.dat文件方法是:\n\n\n  ofstream fout;\n\n\n  fout.open(\"d:\\\\du\\\\abc.dat\");\n\n\n  是否正确？\n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"  x*=y+8 等价于 x=x*(y+8)。请问这句话是正确的吗？ ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"  已有定义：int i,a[10],*p;,则合法的赋值语句是(   )。  ","choices":["\np=100;\n","\np=a[5];\n","\np=a[2]+2;\n","\np=a+2;\n"],"correct_choice":"\np=a+2;\n"},{"title":"若用数组名作为函数调用的实参，传递给形参的是（    ）。","choices":["\n数组的首地址\n","\n数组中第一个元素的值\n","\n数组全部元素的值\n","\n数组元素的个数\n"],"correct_choice":"\n数组的首地址\n"},{"title":"#include <filename.h>  和 ＃include“filename.h” 有什么区别?","choices":["\n没有区别\n","\n前者用来包含开发环境提供的库头文件，后者用来包含自己编写的头文件\n","\n前者用来包含自己编写的头文件，后者用来包含开发环境提供的库头文件\n"],"correct_choice":"\n前者用来包含开发环境提供的库头文件，后者用来包含自己编写的头文件\n"},{"title":"  有以下程序   main()\n{\nint a=3,b=4,c=5,d=2;\n \nif(a>b)\n  \nif(b>c)\n   \nprintf(\"%d\",d++ +1);\n \nelse\n   \nprintf(\"%d\",++d +1);\n \nprintf(\"%d\\n\",d);\n}   程序运行后的输出结果是(  )。  ","choices":["\n2\n","\n3\n","\n43\n","\n44\n"],"correct_choice":"\n2\n"},{"title":"设p是指针变量,语句P ＝ NULL;等价于?","choices":["\np ＝ '0 ';\n","\nP ＝ ‘’;\n","\nP ＝ \"\" ;\n","\np ＝ 0 ;\n"],"correct_choice":"\np ＝ 0 ;\n"},{"title":"已知int a[3][4];则下列能表示a[1][2]元素值的是","choices":["\n*（*（a+1）+2）\n","\n*(a+1+2)\n","\n(&a[0]+1)[2]\n","\n*(a[0]+1)\n"],"correct_choice":"\n*（*（a+1）+2）\n"},{"title":"关于内联函数说法错误的是:","choices":["\n不是任何一个函数都可定义成内联函数\n","\n内联函数的函数体内不能含有复杂的结构控制语句\n","\n递归函数可以被用来作为内联函数\n","\n内联函数一般适合于只有1~5行语句的小函数\n"],"correct_choice":"\n递归函数可以被用来作为内联函数\n"},{"title":"下列情况中，不会调用拷贝构造函数的是（）","choices":["\n用一个对象去初始化同一个类的另一个新对象时\n","\n将类的一个对象赋值给该类的另一个对象时\n","\n函数的形参对象，调用函数进行形参和实参结合时\n","\n函数的返回值是类的对象，函数执行返回调用时\n","\n\n    1、用一个对象去初始化同一个类的另一个新对象时\n2、函数的形参对象，调用函数进行形参和实参结合时 3、函数的返回值是类的对象，函数执行返回调用时 将一个对象赋值给另一个对象，两个对象都存在，调用的是赋值构造函数，不涉及内存的分配。\n当被赋值的对象不存在调用的是拷贝构造函数。\n  "],"correct_choice":"\n将类的一个对象赋值给该类的另一个对象时\n"},{"title":"  有以下语句：              对字符串的正确引用是（），其中0≤k<4    ","choices":["\n*strp\n","\nstrp\n","\nstr[k]\n","\nstrp[k]\n"],"correct_choice":"\n*strp\n\nstr[k]\n\nstrp[k]\n"},{"title":"当n=6时，下列函数的返回值是____________。  int foo(int n)\n {\n     if(n<=2) \n        return n; \n      return foo(n-1)+foo(n-2); \n }","choices":["\n1\n","\n8\n","\n13\n","\n21\n"],"correct_choice":"\n13\n"},{"title":"  执行下面语句后的输出为 \nint I=1;\nif(I<=0) \n    printf(\"****\\n\") ;\nelse \n    printf(\"%%%%\\n\");","choices":["\n%%\n","\n****\n","\n有语法错，不能正确执行\n","\n%%%%\n"],"correct_choice":"\n%%\n"},{"title":"\n  若有以下的定义:int t[3][2];能正确表示t数组元素地址的表达式是\n  t[2]。说法是否正确？\n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"  int  i, sum=0; \n  for(i=0;i<10;++i,sum+=i); i 的最终结果是？ ","choices":["\n10\n","\n9\n","\n11\n","\n以上答案都不正确\n"],"correct_choice":"\n10\n"},{"title":"下列哪项不属于C++的基本数据类型？","choices":["\nwide\n","\nchar\n","\nbool\n"],"correct_choice":"\nwide\n"},{"title":"在C语言中，非法的八进制是（        ）","choices":["\n018\n","\n016\n","\n017\n","\n0257\n"],"correct_choice":"\n018\n"},{"title":"  以下叙述中正确的是（）  ","choices":["\n如果p是指针变量，则&p是不合法的表达式\n","\n如果p是指针变量，则*p表示变量p的地址值\n","\n在对指针进行加、减算术运算时，数字1表示1个存储单元的长度\n","\n如果p是指针变量，则*p+1和*(p+1)的效果是一样的\n"],"correct_choice":"\n在对指针进行加、减算术运算时，数字1表示1个存储单元的长度\n"},{"title":"向一个二进制文件中写入信息的函数为（     ）","choices":["\nfgets()\n","\nfputs()\n","\nfread()\n","\nfwrite()\n"],"correct_choice":"\nfwrite()\n"},{"title":"  下列哪种方法不能用于文本加密（）  ","choices":["\nRSA\n","\nRC4\n","\nMD5\n","\nDES\n"],"correct_choice":"\nMD5\n"},{"title":"给出以下定义: \n char acX[]=\"abcdefg\"; \n char acY[]={'a', 'b', 'c',  'd', 'e', 'f', 'g'}; \n 则正确的叙述为","choices":["\n数组acX和数组acY等价\n","\n数组acX和数组acY的长度相同\n","\n数组acX的长度大于数组acY的长度\n","\n数组acX的长度小于数组acY的长度\n"],"correct_choice":"\n数组acX的长度大于数组acY的长度\n"},{"title":"  将一个字符串\"abc\"赋给字符串变量 str 的方法是 str=\"abc\"。请问这个说法是正确的吗？  ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"  有以下程序   prt(int \n*m,int  n)\n{\n  \nint i;\n  \nfor(i=0;i<n;i++)\n      \nm[i]++;\n}\nmain()\n{\n  \nint a[]={1,2,3,4,5},i;\n  \nprt(a,5);\n  \nfor(i=0;i<5;i++)\n     \nprintf(\"%d,\",a[i]);\n}   程序运行后的输出结果是：(  ) 。  ","choices":["\n1，2，3，4，5，\n","\n2，3，4，5，6，\n","\n3，4，5，6，7，\n","\n2，3，4，5，1，\n"],"correct_choice":"\n2，3，4，5，6，\n"},{"title":"  有以下程序   main()\n{\n  \nint  a[3][3],*p,i;\n  \np=&a[0][0];\n  \nfor(i=0;i<9;i++)\n     \np[i]=i;\n  \nfor(i=0;i<3;i++)\n     \nprintf(\"%d \",a[1][i]);\n}   程序运行后的输出结果是(    )。   ","choices":["\n0 1\n","\n1 2 3\n","\n2 3 4\n","\n3 4 5\n"],"correct_choice":"\n3 4 5\n"},{"title":"有如下程序段，请问k的值是 enum {\n    a, b=5, c, d=4, e\n} k; \nk =c;","choices":["\n3\n","\n4\n","\n5\n","\n6\n"],"correct_choice":"\n6\n"},{"title":"  关于代码输出正确的结果是()（Linux g++\n  环境下编译运行） \nint main(int argc, char *argv[])\n{\n\tstring a=\"hello world\";\n\tstring b=a;\n\tif (a.c_str()==b.c_str())\n\t{\n\t\tcout<<\"true\"<<endl;\n\t}\n\telse cout<<\"false\"<<endl;\n\tstring c=b;\n\tc=\"\";\n\tif (a.c_str()==b.c_str())\n\t{\n\t\tcout<<\"true\"<<endl;\n\t}\n\telse cout<<\"false\"<<endl;\n\ta=\"\";\n\tif (a.c_str()==b.c_str())\n\t{\n\t\tcout<<\"true\"<<endl;\n\t}\n\telse cout<<\"false\"<<endl;\n\treturn 0;\n}","choices":["\nfalse false false\n","\ntrue false false\n","\ntrue true true\n","\ntrue true false\n"],"correct_choice":"\ntrue true false\n"},{"title":" 以下叙述中正确的是(    )","choices":["\n在C++中数据封装是通过各种类型来实现的\n","\n在C++中，数据封装可以由struct关键字提供\n","\n数据封装就是使用结构类型将数据代码连接在一起\n","\n数据封装以后，仍然可以不通过使用函数就能直接存取数据\n"],"correct_choice":"\n在C++中，数据封装可以由struct关键字提供\n\n数据封装以后，仍然可以不通过使用函数就能直接存取数据\n"},{"title":"类的私有成员可在何处访问（         ）","choices":["\n通过子类的对象访问\n","\n本类及子类的成员函数中\n","\n通过该类对象访问\n","\n本类的成员函数中\n"],"correct_choice":"\n本类的成员函数中\n"},{"title":"  数组说明 :int array[][4]是否正确  ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"C++中，能作为函数重载判断依据的是？\n","choices":["\n参数类型\n","\nConst\n","\n参数个数\n","\n返回类型\n"],"correct_choice":"\n参数类型\n\nConst\n\n参数个数\n"},{"title":"在C++面向对象编程语言中，以下阐述不正确的是：","choices":["\n接口中可以用虚方法\n","\n一个类可以实现多个接口\n","\n接口不能被实例化\n","\n接口中可以包含已经实现的方法\n"],"correct_choice":"\n接口中可以用虚方法\n\n接口中可以包含已经实现的方法\n"},{"title":"考虑函数原型void test（int a，int b=7，char z=‘*’），下面的函数调用中，属于不合法调用的是（        ）","choices":["\ntest（5）\n","\ntest（5,8）\n","\ntest（6，‘#’）\n","\ntest（0,0，‘#’）\n"],"correct_choice":"\ntest（6，‘#’）\n"},{"title":"x > 0 || y == 5的相反表达式为（    ）。","choices":["\nx <= 0 || y!=5\n","\nx <= 0 && y!=5\n","\nx > 0 || y != 5\n","\nx > 0 && y == 5\n"],"correct_choice":"\nx <= 0 && y!=5\n"},{"title":"  以下程序段的输出结果是（  ）。     char s[]=\"\\\\141\\141abc\\t\";     printf (\"%d\\n\",strlen(s));  ","choices":["\n9\n","\n12\n","\n13\n","\n14\n"],"correct_choice":"\n9\n"},{"title":"以下关于\ntypedef\n正确的描述是（）","choices":["\n用typedef可以定义各种类型名，但不能定义变量\n","\n用typedef只是将已存在的类型用一个新的名称代替\n","\n用typedef可以增加新类型\n","\n使用typedef便于程序的通用\n"],"correct_choice":"\n用typedef可以定义各种类型名，但不能定义变量\n\n用typedef只是将已存在的类型用一个新的名称代替\n\n使用typedef便于程序的通用\n"},{"title":"  下面有关 for 循环的正确描述是 (   )？ ","choices":["\nfor 循环只能用于循环次数已经确定的情况\n","\nfor 循环是先执行循环体语句,后判断表达式\n","\n在 for 循环中,不能用 break 语句跳出循环体\n","\nfor 循环的循环体语句中,可以包含多条语句,但必须用花括号括起来\n"],"correct_choice":"\nfor 循环的循环体语句中,可以包含多条语句,但必须用花括号括起来\n"},{"title":"\n   下列for循环的次数为（ ）。\n\n\n   for（i=0, x=0; !x&&i<=5; i++）\n\n\n  \n","choices":["\n5\n","\n6\n","\n1\n","\n无限\n"],"correct_choice":"\n6\n"},{"title":"  C 语言规定:在一个源程序中,main 函数的位置必须在最开始。请问这句话的说法是正确的吗？  ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"已知ii，j都是整型变量，下列表达式中，与下标引用X[ii][j]不等效的是（）。","choices":["\n*（X[ii]+j）\n","\n*(X+ii)[j]\n","\n*(X+ii+j)\n","\n*(*(X+ii)+j)\n"],"correct_choice":"\n*(X+ii)[j]\n\n*(X+ii+j)\n"},{"title":"  以下程序段的输出结果是（  ）。     int a=1234；     printf(\"%2d\\n\",a);   ","choices":["\n12\n","\n34\n","\n1234\n","\n提示出错、无结果\n"],"correct_choice":"\n1234\n"},{"title":"int fun(int i = 1, int j = 2)\n {\n     return (i + j);\n }\n\n  \n\n  则fun（3）的值为： ","choices":["\n5\n","\n4\n","\n3\n","\n2\n"],"correct_choice":"\n5\n"},{"title":"#define  A(x) x+x\nint i=5*A(4)*A(6);\ncout<<i;\n  以上程序输出是多少? ","choices":["\n50\n","\n100\n","\n120\n","\n480\n"],"correct_choice":"\n50\n"},{"title":"关于c++的inline关键字,以下说法正确的是()","choices":["\n使用inline关键字的函数会被编译器在调用处展开\n","\n头文件中可以包含inline函数的声明\n","\n可以在同一个项目的不同源文件内定义函数名相同但实现不同的inline函数\n","\n定义在Class声明内的成员函数默认是inline函数\n","\n优先使用Class声明内定义的inline函数\n","\n优先使用Class实现的内inline函数的实现\n"],"correct_choice":"\n定义在Class声明内的成员函数默认是inline函数\n"},{"title":"  有以下程序     main()     {      int  c=35;  printf(\"%d\\n\",c&c);     }     程序运行后的输出结果是 (      ) 。  ","choices":["\n0\n","\n70\n","\n35\n","\n1\n"],"correct_choice":"\n35\n"},{"title":"由C++目标文件连接而成的可执行文件的缺省扩展名为(     )。","choices":["\ncpp\n","\nexe\n","\nobj\n","\nlik\n"],"correct_choice":"\nexe\n"},{"title":"  假定所有变量均已正确定义，则下列程序段运行后x的值是（）  \na=b=c=0;x=35;\nif(!a) x--;\nelse if(b);\nif(c) x=3;\nelse x=4;","choices":["\n3\n","\n4\n","\n35\n","\n34\n"],"correct_choice":"\n4\n"},{"title":"  如输入1，最后输出什么？（    ）    void main()\n{\n    char c;\n    scanf(“%c”,&c);\n    switch(c)\n    {\n        case’1’:\n        printf(“1”);\n        case’2’:\n        printf(“2”)\n        case’3’:\n        printf(“3”)\n        default:\n        printf(“error”);\n    }\n} ","choices":["\n1\n","\n2\n","\n3\n","\n123error\n"],"correct_choice":"\n123error\n"},{"title":"  以下程序的输出结果是（） \n\n     #include <stdio.h>  \n  \n    \n  \n     void main()  \n     {  \n  int a[5] = {1, 2, 3, 4, 5}, b[5] = {0, 2, 1, 3, 0}, i,     s = 0;  \n  for (i = 0; i < 5; i++) s += a[b[i]];  \n  printf(\"%d\\n\", s);  \n     }  \n","choices":["\n6\n","\n10\n","\n11\n","\n15\n"],"correct_choice":"\n11\n"},{"title":"  有以下程序 \n  #include<stdio.h> \n  main() \n  { \n  int  a, b; \n  for( a=1,b=1; a&lt;=100; a++ ) \n  { \n  if(b&gt;=20) \n  break; \n  if(b % 3==1) \n  { \n  b=b+3; \n  continue; \n  } \n  b=b-5; \n\n   } \n\n  printf(\"%d\\n\",a); \n  } \n  程序的输出结果是（） ","choices":["\n10\n","\n9\n","\n8\n","\n7\n"],"correct_choice":"\n8\n"},{"title":"32位环境下，int *p=new int[10];请问sizeof(p)的值为。","choices":["\n4\n","\n10\n","\n40\n","\n8\n"],"correct_choice":"\n4\n"},{"title":"  以下程序的输出是 \nclass Base {\n    public:\n    Base(int j): i(j)  {}\n    virtual~Base() {}\n    void func1() {\n        i *= 10;\n        func2();\n    }\n    int getValue() {\n        return  i;\n    }\n    protected:\n    virtual void func2() {\n        i++;\n    }\n    protected:\n    int i;\n};\nclass Child: public Base {\n    public:\n    Child(int j): Base(j) {}\n    void func1() {\n        i *= 100;\n        func2();\n    }\n    protected:\n    void func2() {\n        i += 2;\n    }\n};\nint main() {\n    Base * pb = new Child(1);\n    pb->func1();\n    cout << pb->getValue() << endl; delete pb; } \n","choices":["\n11\n","\n101\n","\n12\n","\n102\n"],"correct_choice":"\n12\n"},{"title":"\n  字符串复制函数strcpy (字符数组1, 字符数组2),字符数组1的长度应大于等于字符数组2的长度.  说法是否正确？\n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"下面有关析构函数和虚函数的说法，错误的是？","choices":["\n析构函数的作用是当对象生命期结束时释放对象所占用的资源\n","\n析构函数是特殊的类成员函数，它的名字和类名相同，没有返回值，没有参数不能随意调用，但是可以重载\n","\n使用虚函数，我们可以灵活的进行动态绑定\n","\n如果一个类可能做为基类使用的话，将其析构函数虚拟化， 这样当其子类的对象退出时，也会一并调用子类的析构函数释放内存\n"],"correct_choice":"\n析构函数是特殊的类成员函数，它的名字和类名相同，没有返回值，没有参数不能随意调用，但是可以重载\n"},{"title":"  若变量已正确定义    for( x=0,y=0; ( y!=99 && x<4 ); x++ )；    则以上for循环（） ","choices":["\n执行3次\n","\n执行4次\n","\n执行无限次\n","\n执行次数不定\n"],"correct_choice":"\n执行4次\n"},{"title":"  若有以下程序 \n#include < stdio. h >\nmain ( )\n{ \n    int i, j = 0;\n    char a[] = \"How are you!\", b[10]; \n    for (i=0; a[i]; i++) \n        if ( a[i] == ' ') \n            b[j++] = a[i+1];\n    b[j]='\\0';\n    printf(\"%s\\n\", b) ;\n}\n  则程序的输出结果是? ","choices":["\nHowareyou!\n","\nHowareyou\n","\nHay!\n","\nay\n"],"correct_choice":"\nay\n"},{"title":"\n  sizeof( double )\n  是（）\n","choices":["\n一个整型表达式\n","\n一个双精度型表达式\n","\n一个不合法的表达式\n","\n一种函数调用\n"],"correct_choice":"\n一个整型表达式\n"},{"title":"  若整型变量a、b、c、d中的值依次为：1、4、3、2。则条件表达式a<b?a:c<d?c:d的值 (   )  。  ","choices":["\n1\n","\n2\n","\n3\n","\n4\n"],"correct_choice":"\n1\n"},{"title":"以下数组定义中错误的是（）","choices":["\nint x[][3] = {0};\n","\nint x[2][3] = {{1,2},{3,4},{5,6}};\n","\nint x[][3] = {{1,2,3},{4,5,6}};\n","\nint x[2][3] = {1,2,3,4,5,6};\n"],"correct_choice":"\nint x[2][3] = {{1,2},{3,4},{5,6}};\n"},{"title":"假定有语句为“int     *p=calloc（10+20,sizeof（int））;”，则p所指向的动态数组中所包含的元素个数为（ ）。","choices":["\n10\n","\n20\n","\n30\n","\n40\n"],"correct_choice":"\n30\n"},{"title":"  C 语言程序中,若对函数类型未加显式说明,则函数的隐含说明类型为（）。  ","choices":["\nvoid\n","\ndouble\n","\nint\n","\nchar\n"],"correct_choice":"\nint\n"},{"title":"  对于函数中以下代码，  char* p=new char[100];    正确的是（） ","choices":["\np和new出来的内存都在栈上\n","\np在堆上，new出来的在栈上\n","\np和new出来的内存都在堆上\n","\np在栈上，new出来的在堆上\n"],"correct_choice":"\np在栈上，new出来的在堆上\n"},{"title":"  有如下程序段： \n\n  class A\n{\n    public:\n        A()\n        {\n            printf(“0”);\n        }\n        A(int a)\n        {\n            printf(“1”);\n        }\n        A& operator=(const A& a)\n        {\n            printf(“2”);\n            return*this;\n        }\n}\nint main()\n{\n    A al;\n    al=10;\n}\n  则程序输出是： ","choices":["\n02\n","\n012\n","\n01\n","\n以上都不对\n"],"correct_choice":"\n012\n"},{"title":"当说明一个共用体变量时系统分配给它的内存是成员中占内存最大者所需的容量。","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"  下面函数的执行结果是输出 \nfunc(char para[100])\n{\n    void *p = malloc(100);\n    printf(\"%d, %d\\n\", sizeof(para), sizeof(p));\n}\n\n","choices":["\n4，4\n","\n100，4\n","\n4，100\n","\n100，100\n"],"correct_choice":"\n4，4\n"},{"title":"  一个 C 语言程序是由（）。  ","choices":["\n一个主程序和若干子程序组成\n","\n函数组成\n","\n若干过程组成\n","\n若干子程序组成\n"],"correct_choice":"\n函数组成\n"},{"title":"  如果不使用多态机制，那么通过基类的指针虽然可以指向派生类对象，但是只能访问从基类继承的成员。 \n\n  \n","choices":["\n是\n","\n否\n"],"correct_choice":"\n是\n"},{"title":"  7&3+12的值是15。请问这句话的说法是正确的吗？ ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"  写出下列程序的运行结果。 \n#include \"stdio.h\"\nint sum(int a)\n{\n    auto int c = 0;\n    static int b = 3;\n    c += 1;\n    b += 2;\n    return (a + b + c);\n}\nint main()\n{\n    int i;\n    int a = 2;\n    for (i = 0; i < 5; i++) \n    { \n        printf(\"%d,\", sum(a)); \n    } \n} \n","choices":["\n6，8，10，12，14，\n","\n8，10，12，14，16，\n","\n10，12，14，16，18\n","\n12，14，16，18，20\n"],"correct_choice":"\n8，10，12，14，16，\n"},{"title":"\n  for ( ; ; )和while (1)的功能是相同的 \n","choices":["\nTURE\n","\nFAULT\n"],"correct_choice":"\nTURE\n"},{"title":"  以下正确的函数定义形式是（）。 ","choices":["\ndouble fun(int x,int y){}\n","\ndouble fun(int x;int y)\n","\ndouble fun(int x,int y);\n","\ndouble fun(int x,y);\n"],"correct_choice":"\ndouble fun(int x,int y){}\n"},{"title":"#define F(X,Y)   (X)--, (Y)++, (X)*(Y);\n…\nint i, a = 3, b = 4;\nfor( i = 0; i<5; i++) \n    F(a,b) ;\nprintf(“%d, %d”, a, b);\n  输出结果是","choices":["\n3, 4\n","\n3, 5\n","\n-2, 5\n","\n-2, 9\n"],"correct_choice":"\n-2, 9\n"},{"title":"下面关于\"指针\"的描述不正确的是()","choices":["\n当使用free释放掉一个指针内容后,指针变量的值被置为NULL\n","\n32位系统下任何类型指针的长度都是4个字节\n","\n指针的数据类型声明的是指针实际指向内容的数据类型\n","\n野指针是指向未分配或者已经释放的内存地址\n"],"correct_choice":"\n当使用free释放掉一个指针内容后,指针变量的值被置为NULL\n"},{"title":"  strcat(s1,s2)函数是将字符串 s1复制到字符串 s2中。请问这句话的说法是正确的吗？  ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"下列关于类的权限的描述错误的是（        ）","choices":["\n类本身的成员函数只能访问自身的私有成员\n","\n类的对象只能访问该类的共有成员\n","\n普通函数不能直接访问的公有成员，必须通过对象访问\n","\n一个类可以将另一个类的对象作为成员\n"],"correct_choice":"\n类本身的成员函数只能访问自身的私有成员\n"},{"title":"由C++源程序文件编译而成的目标文件的缺省扩展名为(     )。","choices":["\ncpp\n","\nexe\n","\nobj\n","\nlik\n"],"correct_choice":"\nobj\n"},{"title":"  用 printf 函数输出一个字符串时,格式字符为%s,输出项可以是此字符串或存放此字符串的数组的数组名。请问这句话的说法是正确的吗？  ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"关于函数模板,描述错误的是？ ","choices":["\n函数模板必须由程序员实例化为可执行的函数模板\n","\n函数模板的实例化由编译器实现\n","\n一个类定义中，只要有一个函数模板，则这个类是类模板\n","\n类模板的成员函数都是函数模板，类模板实例化后，成员函数也随之实例化\n"],"correct_choice":"\n函数模板必须由程序员实例化为可执行的函数模板\n\n一个类定义中，只要有一个函数模板，则这个类是类模板\n\n类模板的成员函数都是函数模板，类模板实例化后，成员函数也随之实例化\n"},{"title":"C++中，下列关于基类和派生类关系的叙述中，正确的是","choices":["\n每个类最多只能有一个直接基类\n","\n派生类中的成员可以访问基类中的任何成员\n","\n基类的构造函数必须在派生类的构造函数体中进行显示调用\n","\n派生类除了继承基类的成员，还可以定义新的成员\n"],"correct_choice":"\n派生类除了继承基类的成员，还可以定义新的成员\n"},{"title":"C语言标识符大小写通用。","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"已知一运行正常的程序中有这样两个语句：int p1,*p2=&a; p1=b; 由此可知，变量a和b的类型分别是（）。","choices":["\nint和int\n","\nint*和int\n","\nint和int*\n","\nint*和int*\n"],"correct_choice":"\nint和int\n"},{"title":"下面说法正确的是()","choices":["\n一个空类默认一定生成构造函数,拷贝构造函数,赋值操作符,引用操作符,析构函数\n","\n可以有多个析构函数\n","\n析构函数可以为virtual,可以被重载\n","\n类的构造函数如果都不是public访问属性,则类的实例无法创建\n"],"correct_choice":"\n一个空类默认一定生成构造函数,拷贝构造函数,赋值操作符,引用操作符,析构函数\n"},{"title":"  定义函数模板add，以下说法正确的有：（）       ","choices":["\npfun2 = add失败，需要显示定义为pfun2 = add<int>\n","\npfun1 = add\n","\npfun3 = add失败，add无法正确推导\n","\npfun4 = add<int>失败,函数指针不可赋值\n"],"correct_choice":"\npfun1 = add\n\npfun3 = add失败，add无法正确推导\n"},{"title":"  下面一段c代码正确输出的是（    ）    #include<stdio.h>\nint main()\n{\n  \nint*p = NULL;\n  \nint a[]={1,2,3,4}\n   \n   p\n=a;\n  \n*(p++) + = 100;\n  \nprintf(%d%d%d%d%d\\n”,*p,a[0],a[1],a[2],a[3]);\n  \nreturn 0;\n} ","choices":["\n1 101 2 3 4\n","\n2 101 2 3 4\n","\n1 102 2 3 4\n","\n2 102 2 3 4\n"],"correct_choice":"\n2 101 2 3 4\n"},{"title":"设a是整型变量，不能表达数学关系式11<a<15的C++表达式是（        ）","choices":["\na>11&&a<15\n","\na==12||a==13||a==14\n","\n!(a<=11)&&!(a>=15)\n","\n11<a<=14\n"],"correct_choice":"\n11<a<=14\n"},{"title":"下面有关继承、多态、组合的描述，说法错误的是?","choices":["\n封装，把客观事物封装成抽象的类，并且类可以把自己的数据和方法只让可信的类或者对象操作，对不可信的进行信息隐藏\n","\n继承可以使用现有类的所有功能，并在无需重新编写原来的类的情况下对这些功能进行扩展\n","\n隐藏是指派生类中的函数把基类中相同名字的函数屏蔽掉了\n","\n覆盖是指不同的函数使用相同的函数名，但是函数的参数个数或类型不同\n"],"correct_choice":"\n覆盖是指不同的函数使用相同的函数名，但是函数的参数个数或类型不同\n"},{"title":"  以下程序的输出结果是（  ）。   int f()\n{ static int\ni=0;\nint s=1;\ns+=i; i++;\nreturn s;\n}\n main()\n{ int i,a=0;\nfor(i=0;i<5;i++)\na+=f();\nprintf(\"%d\\n\",a);\n}","choices":["\n20\n","\n24\n","\n25\n","\n15\n"],"correct_choice":"\n15\n"},{"title":"语句for( ;1;)是什么意思？","choices":["\n死循环\n","\n编译错误\n","\n执行1次\n","\n执行2次\n"],"correct_choice":"\n死循环\n"},{"title":"下面有关类的静态成员和非静态成员，说法错误的是？ ","choices":["\n静态成员存在于内存，非静态成员需要实例化才会分配内存\n","\n非静态成员可以直接访问类中静态的成员\n","\n静态成员能访问非静态的成员\n","\n非静态成员的生存期决定于该类的生存期，而静态成员生存期则与程序生命期相同\n"],"correct_choice":"\n静态成员能访问非静态的成员\n"},{"title":"  面向对象的程序设计语言具有（）等共同特性。","choices":["\n封装性\n","\n多态性\n","\n简单性\n","\n复杂性\n","\n继承性\n"],"correct_choice":"\n封装性\n\n多态性\n\n继承性\n"},{"title":"  下面程序段（） \n\n     char a[3], b[]=\"China\";  \n     a = b;  \n     printf(\"%s\", a);  \n","choices":["\n输出结果为 China\n","\n输出结果为 Ch\n","\n输出结果为 Chi\n","\n无法通过编译。\n"],"correct_choice":"\n无法通过编译。\n"},{"title":"执行printf(  “ %5s ” , “abcdefg  ” ) 后，则输出结果为    ","choices":["\nabcde\n","\nabcdefg\n","\ncdefg\n","\n输出错误信息\n"],"correct_choice":"\nabcdefg\n"},{"title":"定义一个函数指针，指向的函数有两个int形参并且返回一个函数指针，返回的指针指向一个有一个int形参且返回int的函数？","choices":["\nint (*(*F)(int, int))(int)\n","\nint (*F)(int, int)\n","\nint (*(*F)(int, int))\n","\n*(*F)(int, int)(int)\n"],"correct_choice":"\nint (*(*F)(int, int))(int)\n"},{"title":"关于纯虚函数和抽象类的描述中，(   )是错误的。","choices":["\n纯虚函数是一种特殊的虚函数\n","\n抽象类是指具有纯虚函数的类\n","\n一个基类说明有纯虚函数，该基类的派生类一定不再是抽象类\n","\n抽象类只能作为基类来使用，其纯虚函数的实现由派生类给出。\n"],"correct_choice":"\n一个基类说明有纯虚函数，该基类的派生类一定不再是抽象类\n"},{"title":"下列描述中，（ ）是错误的。","choices":["\n内联函数的主要解决程序的运行效率问题。\n","\n内联函数的定义或声明必须出现在内联函数第一次补调用之前。\n","\n内联函数中可以包括各种语句\n","\n对内联不可以进行异常接口声明\n"],"correct_choice":"\n内联函数中可以包括各种语句\n"},{"title":"下列程序段，循环体执行次数是：\ny = 2;\nwhile (y <= 8)\n    y = y + y;\n","choices":["\n2\n","\n16\n","\n4\n","\n3\n"],"correct_choice":"\n3\n"},{"title":"有字符数组 a[80] 和 b[80]，则正确的输出语句是（）","choices":["\nputs(a); puts(b);\n","\nprintf(\"%s,%s\", a[], b[]);\n","\nputchar(a, b);\n","\nputs(a, b);\n"],"correct_choice":"\nputs(a); puts(b);\n"},{"title":"  以下描述中正确的是（）。 ","choices":["\n由于 do-while 循环中循环体语句只能是一条可执行语句,所以循环体内不能使用复合语句\n","\ndo-while 循环由 do 开始,用 while 结束,在 while(表达式)后面不能写分号\n","\n在 do-while 循环体中,不一定要有能使while 后面表达式的值变为零(\"假\")的操作\n","\ndo-while 循环中,根据情况可以省略while\n"],"correct_choice":"\n在 do-while 循环体中,不一定要有能使while 后面表达式的值变为零(\"假\")的操作\n"},{"title":"C语言程序的模块化通过以下哪个选项来实现？","choices":["\n变量\n","\n函数\n","\n程序行\n","\n语句\n"],"correct_choice":"\n函数\n"},{"title":"判断字符串 a 和 b 是否相等，正确的是（）","choices":["\nif (strcmp(a, b))\n","\nif (!strcmp(a, b))\n","\nif (a == b)\n","\nif (a != b)\n"],"correct_choice":"\nif (!strcmp(a, b))\n"},{"title":"  以下字符中不是转义字符的是（）。 ","choices":["\n'\\a'\n","\n'\\b'\n","\n'\\c'\n","\n'\\\\'\n"],"correct_choice":"\n'\\c'\n"},{"title":"  以下能正确定义一维数组的选项是(      ) 。  ","choices":["\nint  a[5]={0,1,2,3,4,5};\n","\nchar  a[]={0,1,2,3,4,5};\n","\nchar  a={'A','B','C'};\n","\nint  a[5]=\"0123\";\n"],"correct_choice":"\nchar  a[]={0,1,2,3,4,5};\n"},{"title":"  设有说明语句:char a='\\72';则变量 a（）。 ","choices":["\n包含1个字符\n","\n包含2个字符\n","\n包含3个字符\n","\n说明不合法\n"],"correct_choice":"\n包含1个字符\n"},{"title":"下面两段代码中for循环分别执行了多少次？\n1.\nunsigned short i,j;\nfor(i=0, j=2; i!=j; i+=5, j+=7)\n{}\n\n2.\nunsigned short i,j;\nfor(i=3,j=7;i!=j;i+=3,j+=7)\n{}\n\n\n","choices":["\n32767 16383\n","\n32767 16363\n","\n33787 16363\n","\n33787 16383\n"],"correct_choice":"\n32767 16383\n"},{"title":"\n  下面叙述错误的是（）\n\n         char acX[]=”abc”;\n         char acY[]={‘a’,’b’,’c’};\n         char *szX=”abc”;\n         char *szY=”abc”;","choices":["\nacX与acY的内容可以修改\n","\nszX与szY指向同一个地址\n","\nacX占用的内存空间比acY占用的大\n","\nszX的内容修改后，szY的内容也会被更改\n"],"correct_choice":"\nszX的内容修改后，szY的内容也会被更改\n"},{"title":"struct 和 class 的区别?","choices":["\nstruct 的成员默认是公有的\n","\nstruct 的成员默认是私有的\n","\n类的成员默认是私有的\n","\n类的成员默认是公有的\n"],"correct_choice":"\nstruct 的成员默认是公有的\n\n类的成员默认是私有的\n"},{"title":"若有说明：int *p1，*p2，m=5，n；以下均是正确赋值语句的选项是（        ）","choices":["\np1=&m;p2=&p1;\n","\np1=&m;p2=&n,*p1=*p2\n","\np1=&m;p2=p1;\n","\np1=&m;*p2=*p1;\n"],"correct_choice":"\np1=&m;p2=p1;\n"},{"title":"  有以下程序 \n#include <stdio.h>  \nvoid  fun ( int  n ,int *s ) {        \n int  f;      \n if(n==1) \n *s = n+1      \n else {\n fun( n-1, &f) ;         \n  *s = f  ;     \n } \n}  \nmain() {        \n int  x =0;     \n fun( 4,&x );      \n printf(\"%d\\n\",x);   \n}\n\n  程序的输出结果是? ","choices":["\n3\n","\n1\n","\n2\n","\n4\n"],"correct_choice":"\n2\n"},{"title":"以下定义错误的是：","choices":["\nstruct A{A  _a};\n","\nstruct A{A* _a;};\n","\nstruct A{A& _a;};\n","\nstruct B;struct A{B& _b;};struct B{A& _a;};\n"],"correct_choice":"\nstruct A{A  _a};\n"},{"title":"下面的说明汇总，正确的函数定义有（）。","choices":["\nvoid f(void)\n","\nvoid f(void){}\n","\nf(int s){}\n","\nf(int s){return s+1;}\n","\ndouble f(){return 0.0;}\n"],"correct_choice":"\nvoid f(void){}\n\ndouble f(){return 0.0;}\n"},{"title":"模板的使用实际上是将类模板实例化成一个（\n）。","choices":["\n函数\n","\n对象\n","\n类\n","\n抽象类\n"],"correct_choice":"\n类\n"},{"title":"  类B和类A的公有派生类，类A和类B中都定义了虚函数func(),p是一个指向类A对象的指针，则p->A::func()将（）？     ","choices":["\n调用类B中函数func()\n","\n即调用类A中函数，也调用类B中的函数\n","\n调用类A中函数func()\n","\n根据p所指的对象类型而确定调用类A中或类B中的函数func()\n"],"correct_choice":"\n调用类A中函数func()\n"},{"title":"  下列程序的输出结果为 \n\n  #include\nusing namespace std;\n\nint func(int n)\n{\n    if (n < 1)\n        return 1;\n    else\n        return n + func(n - 1);\n    return 0;\n}\nint main()\n{\n    cout << func(5) << endl;\n    return 0;\n}\n\t\n\t\t\n\t\n\n","choices":["\n0\n","\n10\n","\n15\n","\n16\n"],"correct_choice":"\n16\n"},{"title":"  以下对C语言函数的描述中，正确的是（）。 ","choices":["\nC 程序必须由一个或一个以上的函数组成\n","\nC 函数既可以嵌套定义又可以递归调用\n","\n函数必须有返回值,否则不能使用函数\n","\nC 程序中有调用关系的所有函数必须放在同一个程序文件中\n"],"correct_choice":"\nC 程序必须由一个或一个以上的函数组成\n"},{"title":"设整型变量n的值为2，执行语句“n+=n-=n*n”后，n的值是（        ）","choices":["\n-4\n","\n2\n","\n-1\n","\n4\n"],"correct_choice":"\n-4\n"},{"title":"你认为可以完成编写一个C语言编译器的语言是()","choices":["\n汇编\n","\nC语言\n","\n:VB\n","\n以上全可以\n"],"correct_choice":"\n以上全可以\n"},{"title":"  下列程序的运行结果是3,5，请为横线处选择合适的程序（） \n\n  \n  \n","choices":["\np++ ->n\n","\n(++p) ->n\n","\n(a+1) ->n\n","\n(p+1) ->n\n"],"correct_choice":"\n(++p) ->n\n\n(a+1) ->n\n\n(p+1) ->n\n"},{"title":"\n  设在程序中a、b、c均被定义成整型，所赋的值都大于1，则下列C++表达式能正确表示右图所示代数式的是(    )。\n\n\n  \n    \n    \n  \n","choices":["\n1.0/a*b*c\n","\n1/(a*b*c)\n","\n1/a/b/(float)c\n","\n1.0/a/b/c\n"],"correct_choice":"\n1.0/a/b/c\n"},{"title":"C语言是由（        ）基本单位组成的。","choices":["\n过程\n","\n语句\n","\n函数\n","\n程序\n"],"correct_choice":"\n函数\n"},{"title":"   已知：print( )函数是一个类的常成员函数，它无返回值，下列表示中，（ ）是正确的  ","choices":["\nvoid print( ) const;\n","\nconst void print( );\n","\nvoid const print( );\n","\nvoid print(const);\n"],"correct_choice":"\nvoid print( ) const;\n"},{"title":"\n  x\n\n  、y、z被定义为int型变量，若从键盘给x、y、z输入数据，正确的输入语句是\n    （  ）\n","choices":["\nINPUT x、y、z;\n","\nscanf(\"%d%d%d\",&x,&y,&z);\n","\nscanf(\"%d%d%d\",x,y,z);\n","\nread(\"%d%d%d\",&x,&y,&z);\n"],"correct_choice":"\nscanf(\"%d%d%d\",&x,&y,&z);\n"},{"title":"  有以下程序   main()\n{\n  \nint p[8]={11,12,13,14,15,16,17,18}，i=0,j=0;  \nwhile(i++<7)  if(p[i]%2)   j+=p[i];\n  \nprintf(\"%d\\n\",j);\n}   程序运行后的输出结果是(      ) 。  ","choices":["\n42\n","\n45\n","\n56\n","\n60\n"],"correct_choice":"\n45\n"},{"title":"\n  若有int i=10,j=0;则执行完语句\n\n\n  if (j=0)i++; else i--; i的值为11.\n\n\n  说法是否正确？\n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"  与实际参数为实型数组名相对应的形式参数不可以定义为（）。  ","choices":["\nfloat a[];\n","\nfloat *a;\n","\nfloat a;\n","\nfloat (*a)[3];\n"],"correct_choice":"\nfloat a;\n"},{"title":"  以下程序段的输出结果是（）？    int i=9;    printf(\"%o\\n\",i); ","choices":["\n11\n","\n12\n","\n22\n","\n21\n"],"correct_choice":"\n11\n"},{"title":"以下系统中，int类型占几个字节，指针占几个字节，操作系统可以使用的最大内存空间是多大：","choices":["\n32位下：4,4,2^32     64位下：8,8,2^64\n","\n32位下：4,4,不限制   64位下：4,8,不限制\n","\n32位下：4,4,2^32     64位下：4,8,2^64\n","\n32位下：4,4,2^32     64位下：4,4,2^64\n"],"correct_choice":"\n32位下：4,4,2^32     64位下：4,8,2^64\n"},{"title":"派生类的对象对它的基类成员中，（）是可以访问的。","choices":["\n公有继承的公有成员\n","\n公有继承的私有成员\n","\n公有继承的保护成员\n","\n私有继承的公有成员\n"],"correct_choice":"\n公有继承的公有成员\n"},{"title":"  以下选项中合法的实型常数是（）。 ","choices":["\n5E2.0\n","\nE-3\n","\n2E0\n","\n1.3E\n"],"correct_choice":"\n2E0\n"},{"title":"  以下叙述中错误的是 (     )   。  ","choices":["\n对于double类型数组，不可以直接用数组名对数组进行整体输入或输出\n","\n数组名代表的是数组所占存储区的首地址，其值不可改变\n","\n当程序执行中，数组元素的下标超出所定义的下标范围时，系统将给出“下标越界”的出错信息\n","\n可以通过赋初值的方式确定数组元素的个数\n"],"correct_choice":"\n当程序执行中，数组元素的下标超出所定义的下标范围时，系统将给出“下标越界”的出错信息\n"},{"title":"以下哪个不是对象的特征：（  ）","choices":["\n每一个对象必须有一个名字以区别于其他对象。\n","\n需要用属性来描述它的某些特性。\n","\n有一组操作，每一个操作决定了对象的一种行为。\n","\n必须使用 new 操作动态生成\n"],"correct_choice":"\n必须使用 new 操作动态生成\n"},{"title":"  有如下程序段： \n#include \"stdio.h\"\n\nclass A\n{\npublic:\n    int _a;\n    A()\n    {\n        _a = 1;\n    }\n    void print()\n    {\n        printf(\"%d\", _a);\n    }\n};\nclass B: public A\n{\npublic:\n    int _a;\n    B()\n    {\n        _a = 2;\n    }\n};\nint main()\n{\n    B b;\n    b.print();\n    printf(\"%d\", b._a);\n}\n  请问程序输出： ","choices":["\n22\n","\n11\n","\n21\n","\n12\n"],"correct_choice":"\n12\n"},{"title":"假定编译器不做优化，对一个int型变量k，做前缀自加和后缀自加，哪个执行速度更快？","choices":["\nk++\n","\n++k\n","\n效果一样\n","\n依赖处理器的架构\n"],"correct_choice":"\n++k\n"},{"title":"假定x的值为5，y的值为6，则表达式x++*--y的值为 （   ）。","choices":["\n25\n","\n30\n","\n36\n","\n42\n"],"correct_choice":"\n25\n"},{"title":"\n  如果某类是从另一个类继承来的,对象释放时析构函数的调用顺序是\n  先调用派生类的析构函数,再调用基类的析构函数。说法是否正确？\n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"若char是一字节，int是4字节，指针类型是4字节，代码如下： class CTest\n{\n    public:\n        CTest():m_chData(‘\\0’),m_nData(0)\n        {\n        }\n        virtual void mem_fun(){}\n    private:\n        char m_chData;\n        int m_nData;\n        static char s_chData;\n};\nchar CTest::s_chData=’\\0’;\n  问： \n  （1）若按4字节对齐sizeof(CTest)的值是多少？ \n  （2）若按1字节对齐sizeof(CTest)的值是多少？ \n  请选择正确的答案。 ","choices":["\n16 4\n","\n16 10\n","\n12 9\n","\n10 10\n"],"correct_choice":"\n12 9\n"},{"title":"  下面程序的运行结果为（        ） \n  #include <iostream> \n  using namespace std； \n  class A{ \n  public：A(){cout<<\"1\";} \n  ~A(){cout<<\"2\";1} \n  }; \n  class B:public A{ \n  public:B(){cout<<\"3\";} \n  ~B(){cout<<\"4\";} \n  }; \n  void main(){B b;} ","choices":["\n1234\n","\n1324\n","\n1342\n","\n3142\n"],"correct_choice":"\n1342\n"},{"title":"\n  设 int  x=1, y=1; 表达式(!x||y--)的值是（  ）\n","choices":["\n0\n","\n1\n","\n2\n","\n-1\n"],"correct_choice":"\n1\n"},{"title":"下面说法哪些正确:","choices":["\nconst int a; // a 是常数\n","\nint const a; // a 是常数\n","\nint const *a; // a 是常量指针\n","\nconst int *a; // a 是指针常量\n","\nint const *a; // a 是指针常量\n"],"correct_choice":"\nconst int a; // a 是常数\n\nint const a; // a 是常数\n\nint const *a; // a 是常量指针\n"},{"title":"请用声明为int result（int a，int b）的函数时，正确的方法是（        ）","choices":["\nresult（1,2）\n","\nresult（1）\n","\nresult（0.1,0.3）\n","\nresult（1,2,3）\n"],"correct_choice":"\nresult（1,2）\n"},{"title":"\n  关于new运算符的下列描述中，（ ）是错的。\n","choices":["\n它可以用来动态创建对象和对象数组\n","\n使用它创建的对象和对象数组可以使用运算符delete删除\n","\n使用它创建对象时要调用构造函数\n","\n使用它创建对象数组时必须指定初始值\n"],"correct_choice":"\n使用它创建对象数组时必须指定初始值\n"},{"title":"参加位运算的数据其类型不能是（）。","choices":["\nint\n","\nchar\n","\nfloat\n","\nlong int\n"],"correct_choice":"\nfloat\n"},{"title":"以下关于纯虚函数的说法,正确的是()","choices":["\n声明纯虚函数的类不能实例化\n","\n声明纯虚函数的类成虚基类\n","\n子类必须实现基类的\n","\n纯虚函数必须是空函数\n"],"correct_choice":"\n声明纯虚函数的类不能实例化\n"},{"title":"  在标准 C 中,\"=\"是判断两个数是否相等。请问这句话的说法是正确的吗？ ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"  有以下程序   #define \nN  20\nfun(int \na[],int  n,int m)\n{  \nint i,j;\n   \nfor(i=m;i>=n;i--)\n      \na[i+1]=a[i];\n}\nmain()\n{\n  \nint i,a[N]={1,2,3,4,5,6,7,8,9,10};\n  \nfun(a,2,9);\n  \nfor(i=0;i<5;i++)\n    \nprintf(\"%d\",a[i]);\n}   程序运行后的输出结果是（  ）。  ","choices":["\n10234\n","\n12344\n","\n12334\n","\n12234\n"],"correct_choice":"\n12334\n"},{"title":"  对静态成员的不正确描述是（）？  ","choices":["\n静态数据成员要在类外定义和初始化\n","\n非静态成员函数也可以操作静态数据成员\n","\n静态成员不属于对象，是类的共享成员\n","\n调用静态成员函数时要通过类或对象激活，所以静态成员函数拥有this指针\n"],"correct_choice":"\n调用静态成员函数时要通过类或对象激活，所以静态成员函数拥有this指针\n"},{"title":"以下正确的说法是（   ）。 ","choices":["\n用户调用标准库函数前，必须重新定义\n","\n若已包含标准库头文件及相关命名空间，用户也可以重新定义标准库函数，但是该函数将失去原有含义\n","\n若已包含标准库头文件及相关命名空间，则系统不允许用户重新定义标准库函数\n","\n用户调用标准库函数前，不必使用预编译命令将该函数所在文件包括到用户源文件中\n"],"correct_choice":"\n若已包含标准库头文件及相关命名空间，则系统不允许用户重新定义标准库函数\n"},{"title":"\n  若有int\n    a[3][5]={2，2}，{2，6}，{2，6，2}}，则数组a共有7个元素。 \n\n\n  \n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"  关于C++与C语言关系的描述中，（\n  ）是错误的。 \n\n  \n","choices":["\nC语言是C++语言的一个子集\n","\nC语言与C++语言是兼容的\n","\nC++语言对C语言进行了一些改进\n","\nC++语言和C语言都是面向对象的\n"],"correct_choice":"\nC++语言和C语言都是面向对象的\n"},{"title":"  C 语言中运算对象必须是整型的运算符是（）。  ","choices":["\n%=\n","\n/\n","\n=\n","\n〈=\n"],"correct_choice":"\n%=\n"},{"title":"  设x和y均为int型变量,则以下语句:  x+=y;\ny=x-y;\nx-=y;   的功能是？ ","choices":["\n把x和y按从大到小排列\n","\n把x和y按从小到大排列\n","\n无确定结果\n","\n交换x和y中的值\n"],"correct_choice":"\n交换x和y中的值\n"},{"title":"  算法具有五个特性，以下选项中不属于算法特性的是(       )。  ","choices":["\n有穷性\n","\n简洁性\n","\n可行性\n","\n确定性\n"],"correct_choice":"\n简洁性\n"},{"title":"在C++，下列哪一个可以做为对象继承之间的转换()","choices":["\nstatic_cast\n","\nreinterpret_cast\n","\ndynamic_cast\n","\nconst_cast\n"],"correct_choice":"\ndynamic_cast\n"},{"title":"假定有定义为“ int a[10], x, *pa=a; ”，若要把数组 a 中下标为 3 的元素值赋给 x ，则不正确的赋值为 （         ）","choices":["\nx=pa[3]\n","\nx=*(a+3)\n","\nx=a[3]\n","\nx=*pa+3\n"],"correct_choice":"\nx=*pa+3\n"},{"title":"\n  在（）情况下适宜采用\n  inline\n  定义内联函数\n","choices":["\n函数体含有循环语句\n","\n函数体含有递归语句\n","\n函数代码少、频繁调用\n","\n函数代码多，不常调用\n"],"correct_choice":"\n函数代码少、频繁调用\n"},{"title":"  对于以下代码 \nchar * p= new char[100]\n","choices":["\np 和 new出来的内存都在栈上\n","\np 和 new出来的内存都在堆上\n","\np在栈上 new出来的在堆上\n","\np在堆上 new出来的在栈上\n"],"correct_choice":"\np在栈上 new出来的在堆上\n"},{"title":"  下面的代码段中，执行之后 i 和 j 的值是什么（）  int i=1;\nint j;\nj=i++;","choices":["\n1,1\n","\n1,2\n","\n2,1\n","\n2,2\n"],"correct_choice":"\n2,1\n"},{"title":"\n  由于函数的递归调用函数是在调用自己,因此在递归调用中必须有方法避免函数无休止运行.说法是否正确？ \n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"\n  以下函数调用语句中含有（）个实参。\n\n\n  func((e1,e2),(e3,e4,e5)); \n","choices":["\n2\n","\n3\n","\n4\n","\n语法错误\n"],"correct_choice":"\n2\n"},{"title":"函数调用exec((v1,v2), (v3,v4,v5),v6,v7);中，实参的个数是","choices":["\n4\n","\n5\n","\n6\n","\n7\n"],"correct_choice":"\n4\n"},{"title":"用变量a给出下面的定义:一个有10个指针的数组,该指针指向一个函数,该函数有一个整形参数并返回一个整型数","choices":["\nint *a[10];\n","\nint (*a)[10];\n","\nint (*a)(int);\n","\nint (*a[10])(int);\n"],"correct_choice":"\nint (*a[10])(int);\n"},{"title":"在C++中，若要定义一个具有 5 元素的整型数组，以下错误的定义语句是（）","choices":["\nint a[5] = {0};\n","\nint a[] = {0, 0, 0, 0, 0};\n","\nint a[2+3];\n","\nint i = 5, a[i];\n"],"correct_choice":"\nint i = 5, a[i];\n"},{"title":"下面哪个语句无法通过编译?","choices":["\nif (x>y);\n","\nif (x=y) && (x!=0) x+= y;\n","\nif (x!=y) scanf(\"%d\",&x); else scanf(\"%d\",&y);\n","\nif (x<y) {x++; y++;}\n"],"correct_choice":"\nif (x=y) && (x!=0) x+= y;\n"},{"title":"  设有如下函数定义 \n int f(char *s)\n {\n  char *p=s;\n  while(*p!='\\0') p++;\n         return(p-s);\n }\n  在主函数中用 cout<< f(\"good\"); 调用上述函数, 则输出结果为（    ）。\n","choices":["\n3\n","\n4\n","\n5\n","\n6\n"],"correct_choice":"\n4\n"},{"title":"  若给定条件表达式(M)?(a++):(a--)，则其中表达式 M（）。  ","choices":["\n和(M==0)等价\n","\n和(M==1)等价\n","\n和(M!=0)等价\n","\n和(M!=1)等价\n"],"correct_choice":"\n和(M!=0)等价\n"},{"title":"关于static用途说法正确的是？","choices":["\n声明静态外部类\n","\n声明静态全局变量\n","\n声明静态函数\n","\n声明静态局部变量\n"],"correct_choice":"\n声明静态全局变量\n\n声明静态函数\n\n声明静态局部变量\n"},{"title":"  以下哪项不属于STL container？（    ） ","choices":["\nstack\n","\nqueue\n","\nmultimap\n","\nstring\n"],"correct_choice":"\nstring\n"},{"title":"  下列数组说明中，正确的是（）。 ","choices":["\nint array[][4];\n","\nint array[][];\n","\nint array[][][5];\n","\nint array[3][];\n"],"correct_choice":"\nint array[][4];\n"},{"title":"  在 C 语言中，此定义和语句是合法的：enum aa{ a=5,b,c}bb;bb=(enum aa)5;请问这句话的说法是正确的吗？  ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"  有以下程序 \n#include <stdio.h>\nvoid fun ( int x,int y,int ﹡c,int ﹡d )\n{\n    ﹡c ＝ x + y;  ﹡d ＝ x – y;\n｝\nmain ()\n{\n    int a ＝ 4,b ＝ 3,c ＝ 0,d ＝ 0;\n    fun(a,b,&c,&d);\n    printf( \"%d %d＼n\",c,d);\n｝\n  程序的输出结果是? ","choices":["\n0 0\n","\n4 3\n","\n3 4\n","\n7 1\n"],"correct_choice":"\n7 1\n"},{"title":"下面的函数中哪个是系统调用而不是库函数？","choices":["\nprintf\n","\nscanf\n","\nfgetc\n","\nread\n","\nprint_s\n","\nscan_s\n"],"correct_choice":"\nread\n"},{"title":"void func()\n{\n   char b[2]={0};\n   strcpy(b,\"aaaa\");\n}\n  以下说法那个正确() ","choices":["\nDebug版崩溃，Release版正常\n","\nDebug版正常，Release版崩溃\n","\nDebug版崩溃，Release版崩溃\n","\nDebug版正常，Release版正常\n"],"correct_choice":"\nDebug版崩溃，Release版正常\n"},{"title":"使用public公有继承时，基类中的私有成员在派生类中可以直接访问。","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"下列字符串为合法标识符的是","choices":["\n_1_A\n","\n5_stu\n","\n$char\n","\ndefine\n"],"correct_choice":"\n_1_A\n"},{"title":"#include <iostream>\nusing namespace std;\nclass parent\n{  \n    int i;\n  protected:\n    int x;\n  public:\n   parent(){x=0;i=0;}\n   void change(){x++;i++;}\n   void display();\n};\nclass son:public parent\n{ \n    public:\n        void modify();\n};\n void parent::display(){cout<<\"x=\"<<x<<endl;}\n void son:: modify() {x++;}\nint main()\n{ \n  son A; parent B;\n  A.display();\n  A.change();\n  A.modify(); \n  A.display();\n  B.change();\n  B.display();\n}\n  下面程序的输出是什么？ ","choices":["\nx=1 x=0 x=2\n","\nx=2 x=0 x=1\n","\nx=0 x=2 x=1\n","\nx=0 x=1 x=2\n"],"correct_choice":"\nx=0 x=2 x=1\n"},{"title":"在异常处理中，如释放资源，关闭数据库、关闭文件应由（    ）语句来完成。","choices":["\ntry子句\n","\ncatch子句\n","\nfinally子句\n","\nthrow子句\n"],"correct_choice":"\nfinally子句\n"},{"title":"  结构体类型只有一种。请问这句话的说法是正确的吗？ ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"  以下程序的最终的输出结果为：  #include<stdio.h>\n#include<stdlib.h>\n\nint a=1;\nvoid test(){\n    int a=2;\n    a+=1;\n}\n\nint main(){\n\n    test();\n    printf(\"%d\\n\",a);\n    return 0;\n}\n       此时打印a的值为： ","choices":["\n1\n","\n2\n","\n3\n","\n4\n"],"correct_choice":"\n1\n"},{"title":"  若已定义 x 为 int 类型变量，下列语句中说明指针变量 p 的正确语句是（）。  ","choices":["\nint p=&x;\n","\nint *p=x;\n","\nint *p=&x;\n","\n*p=*x;\n"],"correct_choice":"\nint *p=&x;\n"},{"title":"  对下列语句正确的描述是? \n  const int *x;   //① int * const x;   //②\n  \n","choices":["\n语句①的含义是指针变量x不能更改\n","\n语句②的含义是指针变量x所指向的值不能更改\n","\n语句②的含义是指针变量x不能更改\n","\n语句①和②相同含义的不同定义方式\n"],"correct_choice":"\n语句②的含义是指针变量x不能更改\n"},{"title":"\n  在调用函数时，如果实参是简单变量，它与对应形参之间的数据传递方式是\n  ________\n  （\n  ）\n\n\n  \n","choices":["\n地址传递\n","\n单向值传递\n","\n由实参传给形参，再由形参传回实参\n","\n传递方式由用户指定\n"],"correct_choice":"\n单向值传递\n"},{"title":"函数调用exec((vl，v2)，(v3，v4)，v5，v6);中，实参的个数是：","choices":["\n3\n","\n4\n","\n5\n","\n6\n"],"correct_choice":"\n4\n"},{"title":"已知表达式++a中的\"++\"是作为成员函数重载的运算符,则与++a等效的运算符函数调用形式为()","choices":["\na.operator++()\n","\na.operator++(0)\n","\na.operator++(int)\n","\noperator++(a,0)\n"],"correct_choice":"\na.operator++()\n"},{"title":"\n  以下选项中，与\n  n=i++ \n  完全等价的表达式是（ ）。\n","choices":["\nn=i,i=i+1\n","\nn+=i+1\n","\ni=i+1,n=i\n","\nn=++i\n"],"correct_choice":"\nn=i,i=i+1\n"},{"title":"\n  函数定义时,出现在函数名后括号中的参数是形参.说法是否正确？ \n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"  有数组定义int a[2][2]={{1},{2,3}};则a[0][1]的值为0。  ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"  表达式 ++i 表示对变量 i 自加1。请问这句话的说法是正确的吗？ ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"\n  有如下函数，则\n  funb(10)\n  为（）\n\n\n  \n    \n    \n  \n","choices":["\n255\n","\n511\n","\n512\n","\n1024\n"],"correct_choice":"\n512\n"},{"title":"基类的（）在派生类内不能被访问。","choices":["\n私有成员\n","\n保护成员\n","\n公有数据成员\n","\n公有静态数据成员\n"],"correct_choice":"\n私有成员\n"},{"title":"  指针就是地址,因此一个变量的指针就是该变量的地址。请问这句话的说法是正确的吗？  ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n错误\n"},{"title":"  经 下 列 语 句 定 义后 ,sizeof(x),sizeof(y),sizeof(a),sizeof(b)在微机上的值分别为（）。     char x=65;    float y=7.3;    int a=100;    double b=4.5; ","choices":["\n2,2,2,4\n","\n1,2,4,4\n","\n1,4,4,8\n","\n2,4,4,8\n"],"correct_choice":"\n1,4,4,8\n"},{"title":"  以下选项中不属于C语言的类型的是（  ）。  ","choices":["\nsigned short int\n","\nunsigned long int\n","\nunsigned int\n","\nlong short\n"],"correct_choice":"\nlong short\n"},{"title":"下列对重载函数的描述中，____________是错误的。","choices":["\n重载函数中不允许使用默认参数\n","\n重载函数中编译时根据参数表进行选择\n","\n构造函数重载将会给初始化带来多种方式\n","\n不要使用重载函数来描述毫无相干的函数\n"],"correct_choice":"\n重载函数中不允许使用默认参数\n"},{"title":"\n   在\"int a[ ][3]={{1},{3,2},{4,5,6},{0}};\"中，a[2][2]的值是（ ）。\n\n\n  \n","choices":["\n1\n","\n0\n","\n6\n","\n2\n"],"correct_choice":"\n6\n"},{"title":"以下说法正确的是（ ）。","choices":["\n内联（inline）函数改善了函数调用的执行效率。\n","\n类A的友元(friend)函数可以访问类A的私有成员。\n","\n类A的友元(friend)类B可以访问类A的私有成员。\n","\n类A的静态数据成员为类A的所有对象所共享。\n","\n类A的静态成员函数没有传递this 指针作为参数。\n"],"correct_choice":"\n内联（inline）函数改善了函数调用的执行效率。\n\n类A的友元(friend)函数可以访问类A的私有成员。\n\n类A的友元(friend)类B可以访问类A的私有成员。\n\n类A的静态数据成员为类A的所有对象所共享。\n\n类A的静态成员函数没有传递this 指针作为参数。\n"},{"title":"下列关系表达式中,结果为\"假\"的是?","choices":["\n3<= 4\n","\n(3<4)==1\n","\n(3+4)>6\n","\n(3!=4)>2\n"],"correct_choice":"\n(3!=4)>2\n"},{"title":"STL中的一级容器有:","choices":["\nvector, deque, list, set, multiset, map, multimap.\n","\n序列容器，关联容器，容器适配器\n","\nset, multiset, map, multimap.\n","\nvector, deque, list.\n"],"correct_choice":"\nvector, deque, list.\n"},{"title":"  以下程序运行结果是： X=（）？    #include<stdio.h>main()\n{\n       int\ni,j,X=0;\n       for(i=0;i<2;i++)\n       {\n              X++;\n              for(j=0;j<3;j++)\n                     {\n                            if(j%2)\ncontinue;\n                     X++;\n                     }\n              X++;\n       }\nprintf(\"X=%d\\n\",X);\n}","choices":["\n4\n","\n6\n","\n8\n","\n9\n"],"correct_choice":"\n8\n"},{"title":"下列选项中，正确的C++标识符是\n","choices":["\n6_group\n","\ngroup～6\n","\nage+3\n","\n_group_6\n"],"correct_choice":"\n_group_6\n"},{"title":"\n  若有说明:int *p1,*p2,m=5,n;\n\n\n  则\n  p1=&m;p2=p1;\n  是正确赋值语句.说法是否正确？\n\n\n  \n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"\n  假设\n  AA\n  是一个类，\n  AA* abc () const\n  是该类的一个成员函数的原型。若该函数返回\n  this\n  值，当用\n  x.abc ()调用该成员函数后，\n  x\n  的值是（）\n","choices":["\n可能被改变\n","\n已经被改变\n","\n收到函数调用的影响\n","\n不变\n"],"correct_choice":"\n不变\n"},{"title":"  能正确表达字母c为大写字母的C语言表达式是__________（） \n\n  \n","choices":["\nc>=’A’ and c<=’Z’\n","\nc>=’A’ || c<=’Z’\n","\nc>=’A’ or c<=’Z’\n","\nc>=’A’ && c<=’Z’\n"],"correct_choice":"\nc>=’A’ && c<=’Z’\n"},{"title":"  有以下程序 \n#include <iostream>\nusing namespace std;\nint fun (int x,int y)\n{\n    if(x==y)\n        return (x);\n    else \n        return ((x+y)/2);\n}\nint main()\n{  \n    int a=4,b=5,c=6;\n    printf(\"%d\\n\",fun(2*a,fun(b,c)));\n}\n  下面程序的输出是？","choices":["\n8\n","\n6\n","\n12\n","\n3\n"],"correct_choice":"\n6\n"},{"title":"  以下代码运行结果是:   #include<stdio.h>\nint main()\n{\n    uint32_t a=100;\n    while(a>0)\n    {\n        --a;\n    }\n    printf(\"%d\",a);\n    return 0;\n} ","choices":["\n-1\n","\n100\n","\n0\n","\n死循环\n"],"correct_choice":"\n0\n"},{"title":"如果函数不需要任何返回值，使用什么形式的函数声明？","choices":["\nmyfunction()\n","\nvoid myfunction()\n","\nmyfunction(void)\n"],"correct_choice":"\nvoid myfunction()\n"},{"title":"  已知字母 a 的 ASCII 十进制代码为97，则执行下列语句后的输出结果为（）。     char a='a'; a--;    printf(\"%d,%c\\n\",a+'2'-'0',a+'3'-'0'); ","choices":["\nb,c\n","\na--运算不合法,故有语法错\n","\n98,c\n","\n格式描述和输出项不匹配,输出无定值\n"],"correct_choice":"\n98,c\n"},{"title":"  假如整型指针p已经指向某个整型变量x，则(*p)++和下面哪一个等价?     ","choices":["\np++\n","\nx++\n","\n*(p++)\n","\n&x++\n"],"correct_choice":"\nx++\n"},{"title":"\n  设\"char **s；\"，以下正确的表达式是（ ）。\n\n\n  \n","choices":["\ns=\"computer\";\n","\n*s=\"computer\";\n","\n**s=\"computer\";\n","\n*s='c';\n"],"correct_choice":"\n*s=\"computer\";\n"},{"title":"Class A;\nClass B;\nvoid F() {\n        A a;\n        B b;\n}\n 在函数F中，本地变量a和b的构造函数(constructor)和析构函数(destructor)的调用顺序是:","choices":["\nb构造 a构造 a析构 b析构\n","\na构造 a析构 b构造 b析构\n","\nb构造 a构造 b析构 a析构\n","\na构造 b构造 b析构 a析构\n"],"correct_choice":"\na构造 b构造 b析构 a析构\n"},{"title":"  关于指针概念说法不正确的是（）。 ","choices":["\n一个指针变量只能指向同一类型变量\n","\n一个变量的地址称为该变量的指针\n","\n只有同一类型变量的地址才能放到指向该类型变量的指针变量之中\n","\n指针变量可以由整数赋,不能用浮点赋\n"],"correct_choice":"\n指针变量可以由整数赋,不能用浮点赋\n"},{"title":"\n  设栈的初始状态为空，当字符序列a3_作为栈的输入时，输出长度为3的且可以用作C语言标识符的字符串序列有（）个。\n","choices":["\n4\n","\n6\n","\n3\n","\n5\n"],"correct_choice":"\n3\n"},{"title":"int func(int a)\n{\n    int b;\n    switch (a)\n    {\n        case 1: b = 30;\n        case 2: b = 20;\n        case 3: b = 16;\n        default: b = 0;\n    }\n    return b;\n}\n\n  则func(1) = ?","choices":["\n30\n","\n20\n","\n16\n","\n0\n"],"correct_choice":"\n0\n"},{"title":"  下列运算符中优先级最高的是?     ","choices":["\n<\n","\n+\n","\n&&\n","\n!=\n"],"correct_choice":"\n+\n"},{"title":"\n  有关 for 循环的描述：\n  for 循环的循环体语句中,可以包含多条语句,但必须用花括号括起来 是否正确？\n","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"  有以下程序  main()\n{   int  a[3][2]={0},(*ptr)[2],i,j;\n    for(i=0;i<2;i++)\n    {   ptr=a+i;\n        scanf(\"%d\",ptr);\n        ptr++;\n    }\n    for(i=0;i<3;i++)\n    {\n        for(j=0;j<2;j++)\n           printf(\"%2d\",a[i][j]);\n        printf(\"\\n\");\n    }\n}   若运行时输入:1  2  3<回车>,则输出结果为  (       ) 。     ","choices":["\n产生错误信息\n","\n1 0\n2 0\n0 0\n","\n1 2\n3 0\n 0 0\n","\n1 0\n2 0\n3 0\n"],"correct_choice":"\n1 0\n2 0\n0 0\n"},{"title":"class foo {\npublic:\nfoo(){};\n};\nclass boo : public foo {\nboo() : foo() {};\n};\n  以上代码编译时需要什么标准？ ","choices":["\nc++03\n","\nc++0x\n","\nc++11\n","\nc++98\n","\n都不正确\n"],"correct_choice":"\n都不正确\n"},{"title":"  下列函数中，能声明为虚函数的是（）?  ","choices":["\n构造函数\n","\n公有成员函数\n","\n析构函数\n","\n私有成员函数\n"],"correct_choice":"\n公有成员函数\n\n析构函数\n\n私有成员函数\n"},{"title":"  以下程序的输出结果是（ ）。  main()\n{ int a=5,b=4,c=6,d;\nprintf(\"%d\\n\",d=a>b?(a>c?a:c):(b));\n}    ","choices":["\n5\n","\n4\n","\n6\n","\n不确定\n"],"correct_choice":"\n6\n"},{"title":"下列标识符错误的是（        ）","choices":["\nxly\n","\n_123\n","\n2ab\n","\n_ab\n"],"correct_choice":"\n2ab\n"},{"title":"  C 语言中只能逐个引用数组元素而不能一次引用整个数组。请问这句话的说法是正确的吗?  ","choices":["\n正确\n","\n错误\n"],"correct_choice":"\n正确\n"},{"title":"  以下代码的运行情况：   int f(int a, int b, int c)\n{\n    return 0;\n}\nint main(){\n    return  f(printf(\"a\"),printf(\"b\"),printf(\"c\"));\n} ","choices":["\n编译不过\n","\n运行错误\n","\nabc\n","\ncba\n"],"correct_choice":"\ncba\n"},{"title":"  若有以下C函数调用语句:      f(m+n,x+y,f(m+n,z,(x,y)));    在此函数定义中, f有多少个参数?     ","choices":["\n6\n","\n5\n","\n4\n","\n3\n"],"correct_choice":"\n3\n"},{"title":"在linux下64位c程序，请计算输出的三个sizeof分别是（）\nvoid func(char str_arg[100])\n{\n     cout<<sizeof(str_arg)<<endl;\n}\nint main(int argc,char* argv[])\n{\n     char str[]=\"Hello\";\n     char *p=str;\n     cout<<sizeof(str)<<endl;\n     cout<<sizeof(p)<<endl;\n     func(\"test\");\n     return 0;\n}\n","choices":["\n5，5，8\n","\n6，6，4\n","\n6，8，4\n","\n6，8，8\n"],"correct_choice":"\n6，8，8\n"}]